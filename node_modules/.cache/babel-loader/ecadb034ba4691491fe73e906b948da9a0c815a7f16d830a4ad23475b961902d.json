{"ast":null,"code":"var _jsxFileName = \"/Users/jadeclement/Documents/Developer/uofttri/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in from localStorage\n    const savedUser = localStorage.getItem('triathlonUser');\n    if (savedUser) {\n      setCurrentUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n  const signup = (email, password, name) => {\n    // In a real app, this would make an API call\n    const user = {\n      id: Date.now().toString(),\n      email,\n      name,\n      createdAt: new Date().toISOString()\n    };\n    localStorage.setItem('triathlonUser', JSON.stringify(user));\n    setCurrentUser(user);\n    return user;\n  };\n  const login = (email, password) => {\n    // In a real app, this would validate credentials\n    const savedUser = localStorage.getItem('triathlonUser');\n    if (savedUser) {\n      const user = JSON.parse(savedUser);\n      if (user.email === email) {\n        setCurrentUser(user);\n\n        // Track login activity\n        const loginActivity = {\n          userId: user.id || user.email,\n          userName: user.name || user.email,\n          loginTime: new Date().toISOString(),\n          ipAddress: 'N/A' // In a real app, you'd get this from the server\n        };\n        const existingActivity = JSON.parse(localStorage.getItem('loginHistory') || '[]');\n        existingActivity.push(loginActivity);\n        localStorage.setItem('loginHistory', JSON.stringify(existingActivity));\n        return user;\n      }\n    }\n    throw new Error('Invalid credentials');\n  };\n  const logout = () => {\n    localStorage.removeItem('triathlonUser');\n    setCurrentUser(null);\n  };\n  const isAdmin = user => {\n    // Check if user is admin - you can customize this logic\n    return user && (user.email === 'admin@uofttriathlon.com' || user.isAdmin === true);\n  };\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    loading,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","signup","email","password","name","user","id","Date","now","toString","createdAt","toISOString","setItem","stringify","login","loginActivity","userId","userName","loginTime","ipAddress","existingActivity","push","logout","removeItem","isAdmin","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jadeclement/Documents/Developer/uofttri/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in from localStorage\n    const savedUser = localStorage.getItem('triathlonUser');\n    if (savedUser) {\n      setCurrentUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  const signup = (email, password, name) => {\n    // In a real app, this would make an API call\n    const user = {\n      id: Date.now().toString(),\n      email,\n      name,\n      createdAt: new Date().toISOString()\n    };\n    \n    localStorage.setItem('triathlonUser', JSON.stringify(user));\n    setCurrentUser(user);\n    return user;\n  };\n\n  const login = (email, password) => {\n    // In a real app, this would validate credentials\n    const savedUser = localStorage.getItem('triathlonUser');\n    if (savedUser) {\n      const user = JSON.parse(savedUser);\n      if (user.email === email) {\n        setCurrentUser(user);\n        \n        // Track login activity\n        const loginActivity = {\n          userId: user.id || user.email,\n          userName: user.name || user.email,\n          loginTime: new Date().toISOString(),\n          ipAddress: 'N/A' // In a real app, you'd get this from the server\n        };\n        \n        const existingActivity = JSON.parse(localStorage.getItem('loginHistory') || '[]');\n        existingActivity.push(loginActivity);\n        localStorage.setItem('loginHistory', JSON.stringify(existingActivity));\n        \n        return user;\n      }\n    }\n    throw new Error('Invalid credentials');\n  };\n\n  const logout = () => {\n    localStorage.removeItem('triathlonUser');\n    setCurrentUser(null);\n  };\n\n  const isAdmin = (user) => {\n    // Check if user is admin - you can customize this logic\n    return user && (user.email === 'admin@uofttriathlon.com' || user.isAdmin === true);\n  };\n\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    loading,\n    isAdmin\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}