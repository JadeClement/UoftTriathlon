{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport const useWorkoutEdit = API_BASE_URL => {\n  _s();\n  const [editingWorkout, setEditingWorkout] = useState(null);\n  const [editForm, setEditForm] = useState({\n    title: '',\n    workoutType: '',\n    workoutDate: '',\n    workoutTime: '',\n    content: '',\n    capacity: ''\n  });\n  const [saving, setSaving] = useState(false);\n  const startEdit = workout => {\n    setEditingWorkout(workout.id);\n    setEditForm({\n      title: workout.title || '',\n      workoutType: workout.workout_type || '',\n      workoutDate: workout.workout_date ? workout.workout_date.split('T')[0] : '',\n      workoutTime: workout.workout_time || '',\n      content: workout.content || '',\n      capacity: workout.capacity || ''\n    });\n  };\n  const cancelEdit = () => {\n    setEditingWorkout(null);\n    setEditForm({\n      title: '',\n      workoutType: '',\n      workoutDate: '',\n      workoutTime: '',\n      content: '',\n      capacity: ''\n    });\n  };\n  const updateField = (field, value) => {\n    setEditForm(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const saveWorkout = async (workoutId, onSuccess) => {\n    setSaving(true);\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n      const requestBody = {\n        title: editForm.title,\n        workoutType: editForm.workoutType,\n        workoutDate: editForm.workoutDate,\n        workoutTime: editForm.workoutTime,\n        content: editForm.content,\n        capacity: editForm.capacity\n      };\n      console.log('üîç Sending workout update with data:', requestBody);\n      const response = await fetch(`${API_BASE_URL}/forum/posts/${workoutId}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (response.ok) {\n        setEditingWorkout(null);\n        setSaving(false);\n\n        // Call the success callback to refresh data\n        if (onSuccess) {\n          await onSuccess();\n        }\n        return {\n          success: true\n        };\n      } else {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to update workout');\n      }\n    } catch (error) {\n      console.error('Error updating workout:', error);\n      setSaving(false);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  return {\n    editingWorkout,\n    editForm,\n    saving,\n    startEdit,\n    cancelEdit,\n    updateField,\n    saveWorkout\n  };\n};\n_s(useWorkoutEdit, \"aaqc0seCxWHS/oJu0Bj+s0T69E0=\");","map":{"version":3,"names":["useState","useWorkoutEdit","API_BASE_URL","_s","editingWorkout","setEditingWorkout","editForm","setEditForm","title","workoutType","workoutDate","workoutTime","content","capacity","saving","setSaving","startEdit","workout","id","workout_type","workout_date","split","workout_time","cancelEdit","updateField","field","value","prev","saveWorkout","workoutId","onSuccess","token","localStorage","getItem","Error","requestBody","console","log","response","fetch","method","headers","body","JSON","stringify","ok","success","error","json","message"],"sources":["/Users/jadeclement/Documents/Developer/uofttri/src/hooks/useWorkoutEdit.js"],"sourcesContent":["import { useState } from 'react';\n\nexport const useWorkoutEdit = (API_BASE_URL) => {\n  const [editingWorkout, setEditingWorkout] = useState(null);\n  const [editForm, setEditForm] = useState({\n    title: '',\n    workoutType: '',\n    workoutDate: '',\n    workoutTime: '',\n    content: '',\n    capacity: ''\n  });\n  const [saving, setSaving] = useState(false);\n\n  const startEdit = (workout) => {\n    setEditingWorkout(workout.id);\n    setEditForm({\n      title: workout.title || '',\n      workoutType: workout.workout_type || '',\n      workoutDate: workout.workout_date ? workout.workout_date.split('T')[0] : '',\n      workoutTime: workout.workout_time || '',\n      content: workout.content || '',\n      capacity: workout.capacity || ''\n    });\n  };\n\n  const cancelEdit = () => {\n    setEditingWorkout(null);\n    setEditForm({\n      title: '',\n      workoutType: '',\n      workoutDate: '',\n      workoutTime: '',\n      content: '',\n      capacity: ''\n    });\n  };\n\n  const updateField = (field, value) => {\n    setEditForm(prev => ({ ...prev, [field]: value }));\n  };\n\n  const saveWorkout = async (workoutId, onSuccess) => {\n    setSaving(true);\n    \n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n\n      const requestBody = {\n        title: editForm.title,\n        workoutType: editForm.workoutType,\n        workoutDate: editForm.workoutDate,\n        workoutTime: editForm.workoutTime,\n        content: editForm.content,\n        capacity: editForm.capacity\n      };\n      \n      console.log('üîç Sending workout update with data:', requestBody);\n      \n      const response = await fetch(`${API_BASE_URL}/forum/posts/${workoutId}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n\n      if (response.ok) {\n        setEditingWorkout(null);\n        setSaving(false);\n        \n        // Call the success callback to refresh data\n        if (onSuccess) {\n          await onSuccess();\n        }\n        \n        return { success: true };\n      } else {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to update workout');\n      }\n    } catch (error) {\n      console.error('Error updating workout:', error);\n      setSaving(false);\n      return { success: false, error: error.message };\n    }\n  };\n\n  return {\n    editingWorkout,\n    editForm,\n    saving,\n    startEdit,\n    cancelEdit,\n    updateField,\n    saveWorkout\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}