{"ast":null,"code":"var _jsxFileName = \"/Users/jadeclement/Documents/Developer/uofttri/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [name, setName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n  const [forgotPasswordEmail, setForgotPasswordEmail] = useState('');\n  const [forgotPasswordLoading, setForgotPasswordLoading] = useState(false);\n  const [forgotPasswordSuccess, setForgotPasswordSuccess] = useState(false);\n\n  // Function to scroll to top of the page\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  // Function to set error and scroll to top\n  const setErrorAndScroll = errorMessage => {\n    setError(errorMessage);\n    scrollToTop();\n  };\n  const {\n    signup,\n    login\n  } = useAuth();\n  const navigate = useNavigate();\n\n  // Validation functions\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const validatePhoneNumber = phone => {\n    // Remove all non-digit characters\n    const digitsOnly = phone.replace(/\\D/g, '');\n    // Check if it's 10 digits (North American format)\n    return digitsOnly.length === 10;\n  };\n  const formatPhoneNumber = phone => {\n    // Remove all non-digit characters\n    const digitsOnly = phone.replace(/\\D/g, '');\n    // Format as (XXX) XXX-XXXX\n    if (digitsOnly.length === 10) {\n      return `(${digitsOnly.slice(0, 3)}) ${digitsOnly.slice(3, 6)}-${digitsOnly.slice(6)}`;\n    }\n    return phone; // Return original if not 10 digits\n  };\n  const handlePhoneNumberChange = e => {\n    const value = e.target.value;\n    // Remove all non-digit characters\n    const digitsOnly = value.replace(/\\D/g, '');\n\n    // Limit to 10 digits\n    if (digitsOnly.length <= 10) {\n      // Format as user types\n      let formatted = digitsOnly;\n      if (digitsOnly.length >= 6) {\n        formatted = `(${digitsOnly.slice(0, 3)}) ${digitsOnly.slice(3, 6)}-${digitsOnly.slice(6)}`;\n      } else if (digitsOnly.length >= 3) {\n        formatted = `(${digitsOnly.slice(0, 3)}) ${digitsOnly.slice(3)}`;\n      } else if (digitsOnly.length > 0) {\n        formatted = `(${digitsOnly}`;\n      }\n      setPhoneNumber(formatted);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    try {\n      if (isLogin) {\n        console.log('🔐 Login: Starting login process for:', email);\n        if (!email || !password) {\n          setErrorAndScroll('Email and password are required');\n          return;\n        }\n        const user = await login(email, password);\n        console.log('🔐 Login: Login successful, user:', user);\n      } else {\n        // Validate passwords match for signup\n        if (password !== confirmPassword) {\n          setErrorAndScroll(\"Passwords do not match. Please ensure both password fields are identical.\");\n          setLoading(false);\n          return;\n        }\n        if (!name || !email || !password || !phoneNumber) {\n          setErrorAndScroll('All fields are required');\n          return;\n        }\n\n        // Validate email format\n        if (!validateEmail(email)) {\n          setErrorAndScroll('Please enter a valid email address (e.g., user@example.com)');\n          setLoading(false);\n          return;\n        }\n\n        // Validate phone number format\n        if (!validatePhoneNumber(phoneNumber)) {\n          setErrorAndScroll('Please enter a valid 10-digit phone number (e.g., 1234567890 or (123) 456-7890)');\n          setLoading(false);\n          return;\n        }\n\n        // Format phone number before sending\n        const formattedPhone = formatPhoneNumber(phoneNumber);\n        await signup(email, password, name, formattedPhone);\n      }\n      console.log('🔐 Login: Navigating to home page...');\n      navigate('/');\n    } catch (error) {\n      // Customize error message for login failures\n      if (isLogin) {\n        setErrorAndScroll(\"Username or password are incorrect. Please try again. If you do not have an account, please create one! \");\n      } else {\n        // Check if it's a duplicate email error\n        if (error.message.includes('already exists')) {\n          setErrorAndScroll(\"An account is already associated with this email. \");\n        } else {\n          setErrorAndScroll(error.message);\n        }\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const toggleMode = () => {\n    setIsLogin(!isLogin);\n    setError('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setName('');\n    setPhoneNumber('');\n    scrollToTop();\n  };\n  const handleForgotPassword = async e => {\n    e.preventDefault();\n    if (!forgotPasswordEmail) {\n      setErrorAndScroll('Please enter your email address');\n      return;\n    }\n    console.log('🔑 Submitting forgot password request for email:', forgotPasswordEmail);\n    setForgotPasswordLoading(true);\n    setError('');\n    try {\n      const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api';\n      const url = `${API_BASE_URL}/auth/forgot-password`;\n      console.log('🔑 Forgot password POST to:', url);\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: forgotPasswordEmail\n        })\n      });\n      console.log('🔑 Forgot password response status:', response.status);\n      if (response.ok) {\n        const responseData = await response.json();\n        console.log('🔑 Forgot password success:', responseData);\n        setForgotPasswordSuccess(true);\n        setForgotPasswordEmail('');\n      } else {\n        const errorData = await response.json();\n        console.error('🔑 Forgot password error:', errorData);\n        setErrorAndScroll(errorData.error || 'Failed to send reset email');\n      }\n    } catch (error) {\n      console.error('🔑 Forgot password network error:', error);\n      setErrorAndScroll('Failed to send reset email. Please try again.');\n    } finally {\n      setForgotPasswordLoading(false);\n    }\n  };\n  const openForgotPasswordModal = () => {\n    // Auto-fill the email if it's already entered in the login form\n    console.log('🔑 Opening forgot password modal with email:', email);\n    setForgotPasswordEmail(email);\n    setShowForgotPassword(true);\n    scrollToTop();\n  };\n  const closeForgotPassword = () => {\n    setShowForgotPassword(false);\n    setForgotPasswordEmail('');\n    setForgotPasswordSuccess(false);\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLogin ? 'Sign In' : 'Create Account'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-text\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), isLogin && error.includes(\"please create one!\") && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-links\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: toggleMode,\n            className: \"error-link\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this), !isLogin && error.includes(\"already associated with this email\") && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-links\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: toggleMode,\n            className: \"error-link\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-link-separator\",\n            children: \"or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: openForgotPasswordModal,\n            className: \"error-link\",\n            children: \"Forgot Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [!isLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Full Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              required: !isLogin,\n              placeholder: \"Enter your full name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"phoneNumber\",\n              children: \"Phone Number *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              id: \"phoneNumber\",\n              value: phoneNumber,\n              onChange: e => setPhoneNumber(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"form-help\",\n              children: \"For SMS notifications when promoted from waitlists\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true,\n            placeholder: \"Enter your email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true,\n            placeholder: \"Enter your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              children: \"Confirm Password *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirmPassword\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value),\n              required: !isLogin,\n              placeholder: \"Confirm your password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), !isLogin && confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `password-validation ${password === confirmPassword ? 'valid' : 'invalid'}`,\n              children: password === confirmPassword ? '✅ Passwords match' : '❌ Passwords do not match'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"approval-notice\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Important:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 20\n              }, this), \" Your account will be approved once we receive confirmation of your membership payment from the Athletic Centre.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You'll receive an email notification when your account is activated.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          disabled: loading,\n          children: loading ? 'Processing...' : isLogin ? 'Sign In' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-mode\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [isLogin ? \"Don't have an account? \" : \"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: toggleMode,\n            className: \"toggle-btn\",\n            children: isLogin ? 'Sign Up' : 'Sign In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), isLogin && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"forgot-password-link\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: openForgotPasswordModal,\n            className: \"link-btn\",\n            children: \"Forgot your password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), showForgotPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this), forgotPasswordSuccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2705 Password reset email sent successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please check your email and follow the instructions to reset your password.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: closeForgotPassword,\n            className: \"btn btn-primary\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleForgotPassword,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"forgotPasswordEmail\",\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"forgotPasswordEmail\",\n              value: forgotPasswordEmail,\n              onChange: e => setForgotPasswordEmail(e.target.value),\n              required: true,\n              placeholder: \"Enter your email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: forgotPasswordLoading,\n              children: forgotPasswordLoading ? 'Sending...' : 'Send Reset Email'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: closeForgotPassword,\n              className: \"btn btn-secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"BhydtkIHftosSqQCEd/bc19QPwo=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useAuth","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","isLogin","setIsLogin","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","name","setName","phoneNumber","setPhoneNumber","error","setError","loading","setLoading","showForgotPassword","setShowForgotPassword","forgotPasswordEmail","setForgotPasswordEmail","forgotPasswordLoading","setForgotPasswordLoading","forgotPasswordSuccess","setForgotPasswordSuccess","scrollToTop","window","scrollTo","top","behavior","setErrorAndScroll","errorMessage","signup","login","navigate","validateEmail","emailRegex","test","validatePhoneNumber","phone","digitsOnly","replace","length","formatPhoneNumber","slice","handlePhoneNumberChange","e","value","target","formatted","handleSubmit","preventDefault","console","log","user","formattedPhone","message","includes","toggleMode","handleForgotPassword","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","url","response","fetch","method","headers","body","JSON","stringify","status","ok","responseData","json","errorData","openForgotPasswordModal","closeForgotPassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","onSubmit","htmlFor","id","onChange","required","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/jadeclement/Documents/Developer/uofttri/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\n\nconst Login = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [name, setName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n  const [forgotPasswordEmail, setForgotPasswordEmail] = useState('');\n  const [forgotPasswordLoading, setForgotPasswordLoading] = useState(false);\n  const [forgotPasswordSuccess, setForgotPasswordSuccess] = useState(false);\n\n  // Function to scroll to top of the page\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  // Function to set error and scroll to top\n  const setErrorAndScroll = (errorMessage) => {\n    setError(errorMessage);\n    scrollToTop();\n  };\n  \n  const { signup, login } = useAuth();\n  const navigate = useNavigate();\n\n  // Validation functions\n  const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const validatePhoneNumber = (phone) => {\n    // Remove all non-digit characters\n    const digitsOnly = phone.replace(/\\D/g, '');\n    // Check if it's 10 digits (North American format)\n    return digitsOnly.length === 10;\n  };\n\n  const formatPhoneNumber = (phone) => {\n    // Remove all non-digit characters\n    const digitsOnly = phone.replace(/\\D/g, '');\n    // Format as (XXX) XXX-XXXX\n    if (digitsOnly.length === 10) {\n      return `(${digitsOnly.slice(0, 3)}) ${digitsOnly.slice(3, 6)}-${digitsOnly.slice(6)}`;\n    }\n    return phone; // Return original if not 10 digits\n  };\n\n  const handlePhoneNumberChange = (e) => {\n    const value = e.target.value;\n    // Remove all non-digit characters\n    const digitsOnly = value.replace(/\\D/g, '');\n    \n    // Limit to 10 digits\n    if (digitsOnly.length <= 10) {\n      // Format as user types\n      let formatted = digitsOnly;\n      if (digitsOnly.length >= 6) {\n        formatted = `(${digitsOnly.slice(0, 3)}) ${digitsOnly.slice(3, 6)}-${digitsOnly.slice(6)}`;\n      } else if (digitsOnly.length >= 3) {\n        formatted = `(${digitsOnly.slice(0, 3)}) ${digitsOnly.slice(3)}`;\n      } else if (digitsOnly.length > 0) {\n        formatted = `(${digitsOnly}`;\n      }\n      setPhoneNumber(formatted);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n\n    try {\n      if (isLogin) {\n        console.log('🔐 Login: Starting login process for:', email);\n        if (!email || !password) {\n          setErrorAndScroll('Email and password are required');\n          return;\n        }\n        const user = await login(email, password);\n        console.log('🔐 Login: Login successful, user:', user);\n      } else {\n        // Validate passwords match for signup\n        if (password !== confirmPassword) {\n          setErrorAndScroll(\"Passwords do not match. Please ensure both password fields are identical.\");\n          setLoading(false);\n          return;\n        }\n        if (!name || !email || !password || !phoneNumber) {\n          setErrorAndScroll('All fields are required');\n          return;\n        }\n        \n        // Validate email format\n        if (!validateEmail(email)) {\n          setErrorAndScroll('Please enter a valid email address (e.g., user@example.com)');\n          setLoading(false);\n          return;\n        }\n        \n        // Validate phone number format\n        if (!validatePhoneNumber(phoneNumber)) {\n          setErrorAndScroll('Please enter a valid 10-digit phone number (e.g., 1234567890 or (123) 456-7890)');\n          setLoading(false);\n          return;\n        }\n        \n        // Format phone number before sending\n        const formattedPhone = formatPhoneNumber(phoneNumber);\n        await signup(email, password, name, formattedPhone);\n      }\n      console.log('🔐 Login: Navigating to home page...');\n      navigate('/');\n    } catch (error) {\n      // Customize error message for login failures\n      if (isLogin) {\n        setErrorAndScroll(\"Username or password are incorrect. Please try again. If you do not have an account, please create one! \");\n      } else {\n        // Check if it's a duplicate email error\n        if (error.message.includes('already exists')) {\n          setErrorAndScroll(\"An account is already associated with this email. \");\n        } else {\n          setErrorAndScroll(error.message);\n        }\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const toggleMode = () => {\n    setIsLogin(!isLogin);\n    setError('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setName('');\n    setPhoneNumber('');\n    scrollToTop();\n  };\n\n  const handleForgotPassword = async (e) => {\n    e.preventDefault();\n    if (!forgotPasswordEmail) {\n      setErrorAndScroll('Please enter your email address');\n      return;\n    }\n\n    console.log('🔑 Submitting forgot password request for email:', forgotPasswordEmail);\n    setForgotPasswordLoading(true);\n    setError('');\n\n    try {\n      const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api';\n      const url = `${API_BASE_URL}/auth/forgot-password`;\n      console.log('🔑 Forgot password POST to:', url);\n\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email: forgotPasswordEmail }),\n      });\n\n      console.log('🔑 Forgot password response status:', response.status);\n      \n      if (response.ok) {\n        const responseData = await response.json();\n        console.log('🔑 Forgot password success:', responseData);\n        setForgotPasswordSuccess(true);\n        setForgotPasswordEmail('');\n      } else {\n        const errorData = await response.json();\n        console.error('🔑 Forgot password error:', errorData);\n        setErrorAndScroll(errorData.error || 'Failed to send reset email');\n      }\n    } catch (error) {\n      console.error('🔑 Forgot password network error:', error);\n      setErrorAndScroll('Failed to send reset email. Please try again.');\n    } finally {\n      setForgotPasswordLoading(false);\n    }\n  };\n\n  const openForgotPasswordModal = () => {\n    // Auto-fill the email if it's already entered in the login form\n    console.log('🔑 Opening forgot password modal with email:', email);\n    setForgotPasswordEmail(email);\n    setShowForgotPassword(true);\n    scrollToTop();\n  };\n\n  const closeForgotPassword = () => {\n    setShowForgotPassword(false);\n    setForgotPasswordEmail('');\n    setForgotPasswordSuccess(false);\n    setError('');\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-card\">\n        <h2>{isLogin ? 'Sign In' : 'Create Account'}</h2>\n        \n        {error && (\n          <div className=\"error-message\">\n            <div className=\"error-text\">{error}</div>\n            {isLogin && error.includes(\"please create one!\") && (\n              <div className=\"error-links\">\n                <button type=\"button\" onClick={toggleMode} className=\"error-link\">\n                  Sign Up\n                </button>\n              </div>\n            )}\n            {!isLogin && error.includes(\"already associated with this email\") && (\n              <div className=\"error-links\">\n                <button type=\"button\" onClick={toggleMode} className=\"error-link\">\n                  Sign In\n                </button>\n                <span className=\"error-link-separator\">or</span>\n                <button type=\"button\" onClick={openForgotPasswordModal} className=\"error-link\">\n                  Forgot Password\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n        \n        <form onSubmit={handleSubmit}>\n          {!isLogin && (\n            <>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Full Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  required={!isLogin}\n                  placeholder=\"Enter your full name\"\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"phoneNumber\">Phone Number *</label>\n                <input\n                  type=\"tel\"\n                  id=\"phoneNumber\"\n                  value={phoneNumber}\n                  onChange={(e) => setPhoneNumber(e.target.value)}\n                  required\n                />\n                <small className=\"form-help\">For SMS notifications when promoted from waitlists</small>\n              </div>\n            </>\n          )}\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email *</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              placeholder=\"Enter your email\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password *</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              placeholder=\"Enter your password\"\n            />\n          </div>\n\n          {!isLogin && (\n            <>\n              <div className=\"form-group\">\n                <label htmlFor=\"confirmPassword\">Confirm Password *</label>\n                <input\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  required={!isLogin}\n                  placeholder=\"Confirm your password\"\n                />\n                {!isLogin && confirmPassword && (\n                  <div className={`password-validation ${password === confirmPassword ? 'valid' : 'invalid'}`}>\n                    {password === confirmPassword ? '✅ Passwords match' : '❌ Passwords do not match'}\n                  </div>\n                )}\n              </div>\n              <div className=\"approval-notice\">\n                <p><strong>Important:</strong> Your account will be approved once we receive confirmation of your membership payment from the Athletic Centre.</p>\n                <p>You'll receive an email notification when your account is activated.</p>\n              </div>\n            </>\n          )}\n          \n          <button \n            type=\"submit\" \n            className=\"submit-btn\" \n            disabled={loading}\n          >\n            {loading ? 'Processing...' : (isLogin ? 'Sign In' : 'Create Account')}\n          </button>\n        </form>\n        \n        <div className=\"toggle-mode\">\n          <p>\n            {isLogin ? \"Don't have an account? \" : \"Already have an account? \"}\n            <button type=\"button\" onClick={toggleMode} className=\"toggle-btn\">\n              {isLogin ? 'Sign Up' : 'Sign In'}\n            </button>\n          </p>\n          {isLogin && (\n            <p className=\"forgot-password-link\">\n              <button type=\"button\" onClick={openForgotPasswordModal} className=\"link-btn\">\n                Forgot your password?\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n\n      {/* Forgot Password Modal */}\n      {showForgotPassword && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal\">\n            <h2>Reset Password</h2>\n            {forgotPasswordSuccess ? (\n              <div className=\"success-message\">\n                <p>✅ Password reset email sent successfully!</p>\n                <p>Please check your email and follow the instructions to reset your password.</p>\n                <button type=\"button\" onClick={closeForgotPassword} className=\"btn btn-primary\">\n                  Close\n                </button>\n              </div>\n            ) : (\n              <form onSubmit={handleForgotPassword}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"forgotPasswordEmail\">Email Address</label>\n                  <input\n                    type=\"email\"\n                    id=\"forgotPasswordEmail\"\n                    value={forgotPasswordEmail}\n                    onChange={(e) => setForgotPasswordEmail(e.target.value)}\n                    required\n                    placeholder=\"Enter your email address\"\n                  />\n                </div>\n                <div className=\"modal-actions\">\n                  <button type=\"submit\" className=\"btn btn-primary\" disabled={forgotPasswordLoading}>\n                    {forgotPasswordLoading ? 'Sending...' : 'Send Reset Email'}\n                  </button>\n                  <button type=\"button\" onClick={closeForgotPassword} className=\"btn btn-secondary\">\n                    Cancel\n                  </button>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}