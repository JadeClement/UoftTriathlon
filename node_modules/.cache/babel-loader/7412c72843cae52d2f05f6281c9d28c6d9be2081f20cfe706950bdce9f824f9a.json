{"ast":null,"code":"var _jsxFileName = \"/Users/jadeclement/Documents/Developer/uofttri/src/components/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport './Profile.css';\n\n// Team member data - moved outside component to prevent recreation on every render\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst teamMembers = {\n  'swim-coach': {\n    name: 'Justin Konik',\n    role: 'Swim Coach',\n    image: '/images/swimcoach.png',\n    bio: `Justin Konik is our dedicated swim coach with over 10 years of experience in competitive swimming and triathlon coaching. He specializes in stroke technique, endurance training, and helping athletes overcome their fear of open water swimming.\n\nJustin's coaching philosophy focuses on building confidence in the water while developing efficient swimming mechanics. He has coached athletes from complete beginners to elite competitors, and his personalized approach ensures each swimmer reaches their full potential.\n\nWhen not coaching, Justin competes in open water swimming events and enjoys helping new triathletes discover their love for the sport. He believes that swimming should be both challenging and enjoyable, and he's committed to making every training session productive and fun.`\n  },\n  'co-president': {\n    name: 'Jade Clement',\n    role: 'Co-President',\n    image: '/images/team-photo1.jpeg',\n    bio: `Jade joined the team when she started studying engineering at the University of Toronto in 2021. She raced her first mini triathlon at 8 years old and has been having fun racing ever since! Throughout high school she focused mainly on swimming and only stopped competitive swim team at 16. This summer she competed in her first Olympic distance triathlon at the TTF having only ever done sprints before that. Last year she participated in her most exciting race to date - the amateur World Triathlon Championships in Spain! Crossing her fingers that she’ll qualify again for next year! In 2025 she took the role of co-president alongside Marlene and hopes to keep growing the team, plan races together and continue having fun in this crazy sport.`\n  },\n  'co-president-2': {\n    name: 'Marlene Garijo',\n    role: 'Co-President',\n    image: '/images/team-photo2.jpeg',\n    bio: `Marlene Garijo serves as Co-President alongside Jade, bringing her unique perspective and energy to club leadership. With a background in competitive sports and event organization, Marlene excels at creating memorable experiences for club members.\n\nMarlene's strengths lie in strategic planning, member engagement, and ensuring the club operates smoothly behind the scenes. She works closely with the executive team to implement new initiatives and maintain the high standards that make our club special.\n\nHer passion for triathlon extends beyond personal achievement to helping others discover their potential in the sport. Marlene believes that every member has something valuable to contribute to the club, and she works to create opportunities for everyone to get involved.`\n  },\n  'treasurer': {\n    name: 'Edward Ing',\n    role: 'Treasurer',\n    image: '/images/exec_treasurer.jpg',\n    bio: `\nEdward Ing is our newest member of the exec team and joins as your web master and substitute bike leader outdoors. He joined the club in January of 2015. The rationale was to become a good swimmer from near scratch and have a club to train for running races. That summer he raced a duathlon at Welland and thought it was bizarre that in this sport that finishing nowhere near the lead he could still earn a second place podium spot (45-49 age groupers).\nBut what inspired him was that he thought he was running with Olympians because he saw himself racing competitors wearing Team Canada triathlon uniforms. He was mistaken. He found out they were not Olympians, but age-groupers, some like him in the 50s. But he was inspired to earn the privilege to wear those Team Canada trisuit uniforms thinking that might be an achievable goal. He had a bike accident that summer and had to leave the first triathlon till 2016.\nHe finally did his first triathlon, a sprint in Woodstock in 2016. It was a preparation race for the goal of earning a ITU World Championship age-group qualification in the Ottawa National Championship race.\nHis favourite achievement is the New York City Half Marathon 2016, just missing a money spot by one. His duathlon qualification at Esprit de Montreal 2019 for the 2020 ITU Multisport Championships in his mind is his to be executed multisport race.\nAlso he says quite memorable was his Boston qualifying finish at the Toronto Waterfront marathon which he felt was a more important achievement than running Boston itself.\n(Over the COVID hiatus he worked on his swim technique whenever there was a pool opening and thinks he is on the road to fast swims.)\nHis message to young rookie tri-club athletes — “You are likely in the easiest age group to qualify for the World Age-Group Championships, train to qualify, Bragging right last a lifetime here.!”`\n  },\n  'secretary': {\n    name: 'Lauren Williams',\n    role: 'Secretary',\n    image: '/images/team-photo3.jpeg',\n    bio: `Lauren Williams is our club Secretary, responsible for maintaining clear communication and record-keeping within the club. With excellent organizational skills and attention to detail, Lauren ensures that important information reaches all members and that club activities are well-documented.\n\nLauren's role includes managing club communications, taking meeting minutes, maintaining membership records, and coordinating with other executive members to keep everyone informed. Her work behind the scenes is crucial to the smooth operation of the club.\n\nLauren is passionate about creating an inclusive environment where every member feels heard and valued. She believes that clear communication is the foundation of a strong community, and she works diligently to maintain those standards.`\n  },\n  'social-coordinator': {\n    name: 'Katy Tiper',\n    role: 'Social Coordinator/Recruitment',\n    image: '/images/team-photo4.jpg',\n    bio: `Katy Tiper serves as our Social Coordinator and Recruitment specialist, bringing energy and creativity to building our club community. With a natural ability to connect people and organize engaging events, Katy plays a vital role in making our club welcoming to new and existing members.\n\nKaty's responsibilities include planning social events, organizing team building activities, and developing recruitment strategies to grow our membership. She believes that the social aspect of triathlon is just as important as the athletic component, and she works to create opportunities for members to bond and build friendships.\n\nHer approach to recruitment focuses on showcasing the inclusive, supportive nature of our club and helping potential members see how they can fit in, regardless of their experience level. Katy believes that everyone has a place in triathlon, and she's committed to helping them find it.`\n  },\n  'social-media': {\n    name: 'Paulette Dalton',\n    role: 'Social Media Manager',\n    image: '/images/exec_socialmedia.jpg',\n    bio: `Paulette Dalton has been a long time member of the club (confirmed by this vintage jersey!) and is returning to your exec team this year as RECRUITMENT & RACE COORDINATOR.\n            Paulette has been doing triathlons since 2002 (yes almost 20 years) and has completed 9 Ironmans and over 20 marathons (including The Boston Marathon 10 times).\n            Paulette is also an NCCP Level 1 Triathlon Coach.\n            This year you'll find her leading the Friday evening BRICKS and at most of the track workouts and Sunday swims.\n            ASK HER ABOUT: anything bike related (training, aerodynamics, fit, nutrition…)\n            Paulette also manages this Instagram account so send me all your club pics to post! `\n  },\n  'webmaster': {\n    name: 'Ilan Gofman',\n    role: 'Webmaster',\n    image: '/images/icon.png',\n    bio: `Ilan Gofman serves as our club's Webmaster, managing our digital infrastructure and ensuring that our online presence effectively serves our members. With technical expertise and a commitment to user experience, Ilan maintains the systems that keep our club connected and informed.\n\nIlan's responsibilities include maintaining our website, managing member databases, and implementing digital solutions that improve club operations. He works closely with the executive team to identify technological needs and develop solutions that enhance the member experience.\n\nBeyond his technical duties, Ilan is passionate about using technology to build community and make information accessible to all members. He believes that well-designed digital tools can strengthen relationships within the club and make it easier for members to stay engaged and informed.`\n  }\n};\nconst Profile = () => {\n  _s();\n  const params = useParams();\n  const {\n    role,\n    name\n  } = params;\n  const {\n    currentUser,\n    isAdmin\n  } = useAuth();\n  console.log('🔍 All URL params:', params);\n  console.log('🔍 Role param:', role);\n  console.log('🔍 Name param:', name);\n  const [editMode, setEditMode] = useState(false);\n  const [editedBio, setEditedBio] = useState('');\n  const [editedImage, setEditedImage] = useState('');\n  const [saving, setSaving] = useState(false);\n  const [displayMember, setDisplayMember] = useState(null);\n\n  // Find the team member based on the URL parameters\n  // Map URL parameters to team member ID\n  const memberId = React.useMemo(() => {\n    // First, try to find a direct match\n    if (teamMembers[role]) {\n      console.log('✅ Direct match found for role:', role);\n      return role;\n    }\n\n    // Then try the role mapping\n    const roleMapping = {\n      'co-president': 'co-president',\n      'co-president-2': 'co-president-2',\n      'social-coordinator': 'social-coordinator',\n      'social-media': 'social-media',\n      'swim-coach': 'swim-coach',\n      'treasurer': 'treasurer',\n      'secretary': 'secretary',\n      'webmaster': 'webmaster'\n    };\n    const id = roleMapping[role];\n    console.log('🔍 URL role:', role, '→ memberId:', id);\n\n    // If no mapping found, try to find by name\n    if (!id && name) {\n      console.log('🔍 Trying to find by name:', name);\n      const foundMember = Object.entries(teamMembers).find(([key, member]) => member.name.toLowerCase().includes(name.toLowerCase()));\n      if (foundMember) {\n        console.log('✅ Found member by name:', foundMember[0]);\n        return foundMember[0];\n      }\n    }\n    return id;\n  }, [role, name]);\n\n  // Get member data from backend API\n  const [member, setMember] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchMember = async () => {\n      if (!memberId) {\n        console.log('❌ No memberId available, cannot fetch member');\n        setLoading(false);\n        return;\n      }\n\n      // Check if we have local data first\n      const localMember = teamMembers[memberId];\n      if (localMember) {\n        console.log('✅ Found local data for:', localMember.name);\n        setMember(localMember);\n        setDisplayMember(localMember);\n        setLoading(false);\n        return;\n      }\n      console.log('🔍 Fetching member with ID:', memberId);\n      console.log('🌐 API URL:', `http://localhost:5001/api/profiles/${memberId}`);\n      try {\n        const response = await fetch(`http://localhost:5001/api/profiles/${memberId}`);\n        console.log('📡 Response status:', response.status);\n        console.log('📡 Response headers:', response.headers);\n        if (response.ok) {\n          const data = await response.json();\n          console.log('📦 Response data:', data);\n          if (data.member) {\n            // Convert relative image URLs to full URLs\n            const memberWithFullUrls = {\n              ...data.member,\n              image: data.member.image && data.member.image.startsWith('/uploads/') ? `http://localhost:5001${data.member.image}` : data.member.image\n            };\n            console.log('📸 Loaded member image:', memberWithFullUrls.image);\n            console.log('👤 Final member data:', memberWithFullUrls);\n            setMember(memberWithFullUrls);\n            setDisplayMember(memberWithFullUrls);\n          } else {\n            console.error('❌ Response missing member data:', data);\n          }\n        } else {\n          const errorText = await response.text();\n          console.error('❌ Failed to fetch member:', response.status, response.statusText);\n          console.error('❌ Error response:', errorText);\n\n          // Fallback to local data if API fails\n          console.log('🔄 Falling back to local team member data');\n          const localMember = teamMembers[memberId];\n          if (localMember) {\n            console.log('✅ Using local data for:', localMember.name);\n            setMember(localMember);\n            setDisplayMember(localMember);\n          }\n        }\n      } catch (error) {\n        console.error('❌ Error fetching member:', error);\n        console.error('❌ Error details:', error.message);\n\n        // Fallback to local data if API fails\n        console.log('🔄 Falling back to local team member data due to error');\n        const localMember = teamMembers[memberId];\n        if (localMember) {\n          console.log('✅ Using local data for:', localMember.name);\n          setMember(localMember);\n          setDisplayMember(localMember);\n        }\n      } finally {\n        console.log('🏁 Setting loading to false');\n        setLoading(false);\n      }\n    };\n    fetchMember();\n  }, [memberId]);\n\n  // Initialize displayMember when member changes\n  React.useEffect(() => {\n    if (member) {\n      // Ensure image URLs are full URLs\n      const memberWithFullUrls = {\n        ...member,\n        image: member.image && member.image.startsWith('/uploads/') ? `http://localhost:5001${member.image}` : member.image\n      };\n      setDisplayMember(memberWithFullUrls);\n    }\n  }, [member]);\n  const handleEdit = () => {\n    setEditedBio(displayMember.bio);\n    setEditedImage(displayMember.image);\n    setEditMode(true);\n  };\n  const handleSave = async () => {\n    setSaving(true);\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n\n      // Prepare form data for the API\n      const formData = new FormData();\n      formData.append('bio', editedBio);\n\n      // If there's a new image, add it to form data\n      if (editedImage && editedImage !== member.image) {\n        // Convert blob URL to file if it's a blob\n        if (editedImage.startsWith('blob:')) {\n          const response = await fetch(editedImage);\n          const blob = await response.blob();\n          const file = new File([blob], 'profile-image.jpg', {\n            type: 'image/jpeg'\n          });\n          formData.append('image', file);\n        }\n      }\n\n      // Send update to backend API\n      const apiResponse = await fetch(`http://localhost:5001/api/profiles/${memberId}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (!apiResponse.ok) {\n        const errorData = await apiResponse.json();\n        throw new Error(errorData.error || 'Failed to update profile');\n      }\n      const result = await apiResponse.json();\n      console.log('✅ Profile updated successfully:', result);\n\n      // Update local state with the response from backend\n      if (result.member) {\n        console.log('🔄 Updating displayMember with:', result.member);\n        console.log('📸 Current editedImage:', editedImage);\n        console.log('🖼️ Result image:', result.member.image);\n\n        // Always use the image from the backend response, or fall back to the current image\n        // If the backend returns a relative path, construct the full URL\n        let finalImage = result.member.image || displayMember.image;\n        if (finalImage && finalImage.startsWith('/uploads/')) {\n          finalImage = `http://localhost:5001${finalImage}`;\n        }\n        console.log('🎯 Final image to use:', finalImage);\n        setDisplayMember(prev => ({\n          ...prev,\n          bio: result.member.bio,\n          image: finalImage\n        }));\n\n        // Also update the member state\n        setMember(prev => ({\n          ...prev,\n          bio: result.member.bio,\n          image: finalImage\n        }));\n      }\n      setEditMode(false);\n      setSaving(false);\n    } catch (error) {\n      console.error('❌ Error updating profile:', error);\n      alert(`Error updating profile: ${error.message}`);\n      setSaving(false);\n    }\n  };\n  const handleCancel = () => {\n    setEditMode(false);\n    setEditedBio('');\n    setEditedImage('');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-state\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Loading profile...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this);\n  }\n  if (!member || !displayMember) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Profile Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sorry, we couldn't find the profile you're looking for.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/coaches-exec\",\n          className: \"back-link\",\n          children: \"\\u2190 Back to Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/coaches-exec\",\n        className: \"back-link\",\n        children: \"\\u2190 Back to Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-image-section\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: editMode ? editedImage || displayMember.image : displayMember.image,\n            alt: `${displayMember.name} - ${displayMember.role}`,\n            className: \"profile-image\",\n            onError: e => console.error('❌ Image failed to load:', e.target.src),\n            onLoad: () => console.log('✅ Image loaded successfully:', displayMember.image)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-info-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile-name\",\n              children: displayMember.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"profile-role\",\n              children: displayMember.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-actions\",\n              children: editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"edit-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: handleSave,\n                  disabled: saving,\n                  children: saving ? 'Saving...' : 'Save Changes'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-secondary\",\n                  onClick: handleCancel,\n                  disabled: saving,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-edit\",\n                onClick: handleEdit,\n                children: \"Edit Bio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-upload-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"profile-image\",\n                className: \"image-upload-label\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-preview\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: editedImage || displayMember.image,\n                    alt: `${displayMember.name} - ${displayMember.role}`,\n                    className: \"preview-image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 44\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"image-overlay\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Click to change image\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 422,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"profile-image\",\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: e => {\n                  const file = e.target.files[0];\n                  if (file) {\n                    const imageUrl = URL.createObjectURL(file);\n                    setEditedImage(imageUrl);\n                  }\n                },\n                style: {\n                  display: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"image-upload-help\",\n                children: \"Click the image above to upload a new profile picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bio-edit-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"bio-textarea\",\n                className: \"form-label\",\n                children: \"Bio:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"bio-textarea\",\n                value: editedBio,\n                onChange: e => setEditedBio(e.target.value),\n                className: \"bio-textarea\",\n                rows: \"10\",\n                placeholder: \"Enter the team member's bio...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-bio\",\n            children: displayMember.bio.split('\\n\\n').map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: paragraph\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"LS5QdBmzlzZ85xHBnfX3qRiaJao=\", false, function () {\n  return [useParams, useAuth];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useParams","Link","useAuth","jsxDEV","_jsxDEV","teamMembers","name","role","image","bio","Profile","_s","params","currentUser","isAdmin","console","log","editMode","setEditMode","editedBio","setEditedBio","editedImage","setEditedImage","saving","setSaving","displayMember","setDisplayMember","memberId","useMemo","roleMapping","id","foundMember","Object","entries","find","key","member","toLowerCase","includes","setMember","loading","setLoading","fetchMember","localMember","response","fetch","status","headers","ok","data","json","memberWithFullUrls","startsWith","error","errorText","text","statusText","message","handleEdit","handleSave","token","localStorage","getItem","Error","formData","FormData","append","blob","file","File","type","apiResponse","method","body","errorData","result","finalImage","prev","alert","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","src","alt","onError","e","target","onLoad","onClick","disabled","htmlFor","accept","onChange","files","imageUrl","URL","createObjectURL","style","display","value","rows","placeholder","split","map","paragraph","index","_c","$RefreshReg$"],"sources":["/Users/jadeclement/Documents/Developer/uofttri/src/components/Profile.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport './Profile.css';\n\n// Team member data - moved outside component to prevent recreation on every render\nconst teamMembers = {\n    'swim-coach': {\n      name: 'Justin Konik',\n      role: 'Swim Coach',\n      image: '/images/swimcoach.png',\n      bio: `Justin Konik is our dedicated swim coach with over 10 years of experience in competitive swimming and triathlon coaching. He specializes in stroke technique, endurance training, and helping athletes overcome their fear of open water swimming.\n\nJustin's coaching philosophy focuses on building confidence in the water while developing efficient swimming mechanics. He has coached athletes from complete beginners to elite competitors, and his personalized approach ensures each swimmer reaches their full potential.\n\nWhen not coaching, Justin competes in open water swimming events and enjoys helping new triathletes discover their love for the sport. He believes that swimming should be both challenging and enjoyable, and he's committed to making every training session productive and fun.`\n    },\n    'co-president': {\n      name: 'Jade Clement',\n      role: 'Co-President',\n      image: '/images/team-photo1.jpeg',\n      bio: `Jade joined the team when she started studying engineering at the University of Toronto in 2021. She raced her first mini triathlon at 8 years old and has been having fun racing ever since! Throughout high school she focused mainly on swimming and only stopped competitive swim team at 16. This summer she competed in her first Olympic distance triathlon at the TTF having only ever done sprints before that. Last year she participated in her most exciting race to date - the amateur World Triathlon Championships in Spain! Crossing her fingers that she’ll qualify again for next year! In 2025 she took the role of co-president alongside Marlene and hopes to keep growing the team, plan races together and continue having fun in this crazy sport.`\n    },\n    'co-president-2': {\n      name: 'Marlene Garijo',\n      role: 'Co-President',\n      image: '/images/team-photo2.jpeg',\n      bio: `Marlene Garijo serves as Co-President alongside Jade, bringing her unique perspective and energy to club leadership. With a background in competitive sports and event organization, Marlene excels at creating memorable experiences for club members.\n\nMarlene's strengths lie in strategic planning, member engagement, and ensuring the club operates smoothly behind the scenes. She works closely with the executive team to implement new initiatives and maintain the high standards that make our club special.\n\nHer passion for triathlon extends beyond personal achievement to helping others discover their potential in the sport. Marlene believes that every member has something valuable to contribute to the club, and she works to create opportunities for everyone to get involved.`\n    },\n    'treasurer': {\n      name: 'Edward Ing',\n      role: 'Treasurer',\n      image: '/images/exec_treasurer.jpg',\n      bio: `\nEdward Ing is our newest member of the exec team and joins as your web master and substitute bike leader outdoors. He joined the club in January of 2015. The rationale was to become a good swimmer from near scratch and have a club to train for running races. That summer he raced a duathlon at Welland and thought it was bizarre that in this sport that finishing nowhere near the lead he could still earn a second place podium spot (45-49 age groupers).\nBut what inspired him was that he thought he was running with Olympians because he saw himself racing competitors wearing Team Canada triathlon uniforms. He was mistaken. He found out they were not Olympians, but age-groupers, some like him in the 50s. But he was inspired to earn the privilege to wear those Team Canada trisuit uniforms thinking that might be an achievable goal. He had a bike accident that summer and had to leave the first triathlon till 2016.\nHe finally did his first triathlon, a sprint in Woodstock in 2016. It was a preparation race for the goal of earning a ITU World Championship age-group qualification in the Ottawa National Championship race.\nHis favourite achievement is the New York City Half Marathon 2016, just missing a money spot by one. His duathlon qualification at Esprit de Montreal 2019 for the 2020 ITU Multisport Championships in his mind is his to be executed multisport race.\nAlso he says quite memorable was his Boston qualifying finish at the Toronto Waterfront marathon which he felt was a more important achievement than running Boston itself.\n(Over the COVID hiatus he worked on his swim technique whenever there was a pool opening and thinks he is on the road to fast swims.)\nHis message to young rookie tri-club athletes — “You are likely in the easiest age group to qualify for the World Age-Group Championships, train to qualify, Bragging right last a lifetime here.!”`\n    },\n    'secretary': {\n      name: 'Lauren Williams',\n      role: 'Secretary',\n      image: '/images/team-photo3.jpeg',\n      bio: `Lauren Williams is our club Secretary, responsible for maintaining clear communication and record-keeping within the club. With excellent organizational skills and attention to detail, Lauren ensures that important information reaches all members and that club activities are well-documented.\n\nLauren's role includes managing club communications, taking meeting minutes, maintaining membership records, and coordinating with other executive members to keep everyone informed. Her work behind the scenes is crucial to the smooth operation of the club.\n\nLauren is passionate about creating an inclusive environment where every member feels heard and valued. She believes that clear communication is the foundation of a strong community, and she works diligently to maintain those standards.`\n    },\n    'social-coordinator': {\n      name: 'Katy Tiper',\n      role: 'Social Coordinator/Recruitment',\n      image: '/images/team-photo4.jpg',\n      bio: `Katy Tiper serves as our Social Coordinator and Recruitment specialist, bringing energy and creativity to building our club community. With a natural ability to connect people and organize engaging events, Katy plays a vital role in making our club welcoming to new and existing members.\n\nKaty's responsibilities include planning social events, organizing team building activities, and developing recruitment strategies to grow our membership. She believes that the social aspect of triathlon is just as important as the athletic component, and she works to create opportunities for members to bond and build friendships.\n\nHer approach to recruitment focuses on showcasing the inclusive, supportive nature of our club and helping potential members see how they can fit in, regardless of their experience level. Katy believes that everyone has a place in triathlon, and she's committed to helping them find it.`\n    },\n    'social-media': {\n      name: 'Paulette Dalton',\n      role: 'Social Media Manager',\n      image: '/images/exec_socialmedia.jpg',\n      bio: `Paulette Dalton has been a long time member of the club (confirmed by this vintage jersey!) and is returning to your exec team this year as RECRUITMENT & RACE COORDINATOR.\n            Paulette has been doing triathlons since 2002 (yes almost 20 years) and has completed 9 Ironmans and over 20 marathons (including The Boston Marathon 10 times).\n            Paulette is also an NCCP Level 1 Triathlon Coach.\n            This year you'll find her leading the Friday evening BRICKS and at most of the track workouts and Sunday swims.\n            ASK HER ABOUT: anything bike related (training, aerodynamics, fit, nutrition…)\n            Paulette also manages this Instagram account so send me all your club pics to post! `  \n              },\n    'webmaster': {\n      name: 'Ilan Gofman',\n      role: 'Webmaster',\n      image: '/images/icon.png',\n      bio: `Ilan Gofman serves as our club's Webmaster, managing our digital infrastructure and ensuring that our online presence effectively serves our members. With technical expertise and a commitment to user experience, Ilan maintains the systems that keep our club connected and informed.\n\nIlan's responsibilities include maintaining our website, managing member databases, and implementing digital solutions that improve club operations. He works closely with the executive team to identify technological needs and develop solutions that enhance the member experience.\n\nBeyond his technical duties, Ilan is passionate about using technology to build community and make information accessible to all members. He believes that well-designed digital tools can strengthen relationships within the club and make it easier for members to stay engaged and informed.`\n      }\n};\n\nconst Profile = () => {\n  const params = useParams();\n  const { role, name } = params;\n  const { currentUser, isAdmin } = useAuth();\n  \n  console.log('🔍 All URL params:', params);\n  console.log('🔍 Role param:', role);\n  console.log('🔍 Name param:', name);\n  const [editMode, setEditMode] = useState(false);\n  const [editedBio, setEditedBio] = useState('');\n  const [editedImage, setEditedImage] = useState('');\n  const [saving, setSaving] = useState(false);\n  const [displayMember, setDisplayMember] = useState(null);\n\n  // Find the team member based on the URL parameters\n  // Map URL parameters to team member ID\n  const memberId = React.useMemo(() => {\n    // First, try to find a direct match\n    if (teamMembers[role]) {\n      console.log('✅ Direct match found for role:', role);\n      return role;\n    }\n    \n    // Then try the role mapping\n    const roleMapping = {\n      'co-president': 'co-president',\n      'co-president-2': 'co-president-2', \n      'social-coordinator': 'social-coordinator',\n      'social-media': 'social-media',\n      'swim-coach': 'swim-coach',\n      'treasurer': 'treasurer',\n      'secretary': 'secretary',\n      'webmaster': 'webmaster'\n    };\n    \n    const id = roleMapping[role];\n    console.log('🔍 URL role:', role, '→ memberId:', id);\n    \n    // If no mapping found, try to find by name\n    if (!id && name) {\n      console.log('🔍 Trying to find by name:', name);\n      const foundMember = Object.entries(teamMembers).find(([key, member]) => \n        member.name.toLowerCase().includes(name.toLowerCase())\n      );\n      if (foundMember) {\n        console.log('✅ Found member by name:', foundMember[0]);\n        return foundMember[0];\n      }\n    }\n    \n    return id;\n  }, [role, name]);\n\n  // Get member data from backend API\n  const [member, setMember] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMember = async () => {\n      if (!memberId) {\n        console.log('❌ No memberId available, cannot fetch member');\n        setLoading(false);\n        return;\n      }\n      \n      // Check if we have local data first\n      const localMember = teamMembers[memberId];\n      if (localMember) {\n        console.log('✅ Found local data for:', localMember.name);\n        setMember(localMember);\n        setDisplayMember(localMember);\n        setLoading(false);\n        return;\n      }\n      \n      console.log('🔍 Fetching member with ID:', memberId);\n      console.log('🌐 API URL:', `http://localhost:5001/api/profiles/${memberId}`);\n      \n      try {\n        const response = await fetch(`http://localhost:5001/api/profiles/${memberId}`);\n        console.log('📡 Response status:', response.status);\n        console.log('📡 Response headers:', response.headers);\n        \n        if (response.ok) {\n          const data = await response.json();\n          console.log('📦 Response data:', data);\n          \n          if (data.member) {\n            // Convert relative image URLs to full URLs\n            const memberWithFullUrls = {\n              ...data.member,\n              image: data.member.image && data.member.image.startsWith('/uploads/') \n                ? `http://localhost:5001${data.member.image}` \n                : data.member.image\n            };\n            \n            console.log('📸 Loaded member image:', memberWithFullUrls.image);\n            console.log('👤 Final member data:', memberWithFullUrls);\n            \n            setMember(memberWithFullUrls);\n            setDisplayMember(memberWithFullUrls);\n          } else {\n            console.error('❌ Response missing member data:', data);\n          }\n        } else {\n          const errorText = await response.text();\n          console.error('❌ Failed to fetch member:', response.status, response.statusText);\n          console.error('❌ Error response:', errorText);\n          \n          // Fallback to local data if API fails\n          console.log('🔄 Falling back to local team member data');\n          const localMember = teamMembers[memberId];\n          if (localMember) {\n            console.log('✅ Using local data for:', localMember.name);\n            setMember(localMember);\n            setDisplayMember(localMember);\n          }\n        }\n      } catch (error) {\n        console.error('❌ Error fetching member:', error);\n        console.error('❌ Error details:', error.message);\n        \n        // Fallback to local data if API fails\n        console.log('🔄 Falling back to local team member data due to error');\n        const localMember = teamMembers[memberId];\n        if (localMember) {\n          console.log('✅ Using local data for:', localMember.name);\n          setMember(localMember);\n          setDisplayMember(localMember);\n        }\n      } finally {\n        console.log('🏁 Setting loading to false');\n        setLoading(false);\n      }\n    };\n\n    fetchMember();\n  }, [memberId]);\n\n  // Initialize displayMember when member changes\n  React.useEffect(() => {\n    if (member) {\n      // Ensure image URLs are full URLs\n      const memberWithFullUrls = {\n        ...member,\n        image: member.image && member.image.startsWith('/uploads/') \n          ? `http://localhost:5001${member.image}` \n          : member.image\n      };\n      \n      setDisplayMember(memberWithFullUrls);\n    }\n  }, [member]);\n\n  const handleEdit = () => {\n    setEditedBio(displayMember.bio);\n    setEditedImage(displayMember.image);\n    setEditMode(true);\n  };\n\n  const handleSave = async () => {\n    setSaving(true);\n    \n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n\n      // Prepare form data for the API\n      const formData = new FormData();\n      formData.append('bio', editedBio);\n      \n      // If there's a new image, add it to form data\n      if (editedImage && editedImage !== member.image) {\n        // Convert blob URL to file if it's a blob\n        if (editedImage.startsWith('blob:')) {\n          const response = await fetch(editedImage);\n          const blob = await response.blob();\n          const file = new File([blob], 'profile-image.jpg', { type: 'image/jpeg' });\n          formData.append('image', file);\n        }\n      }\n\n      // Send update to backend API\n      const apiResponse = await fetch(`http://localhost:5001/api/profiles/${memberId}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        body: formData\n      });\n\n      if (!apiResponse.ok) {\n        const errorData = await apiResponse.json();\n        throw new Error(errorData.error || 'Failed to update profile');\n      }\n\n      const result = await apiResponse.json();\n      console.log('✅ Profile updated successfully:', result);\n\n      // Update local state with the response from backend\n      if (result.member) {\n        console.log('🔄 Updating displayMember with:', result.member);\n        console.log('📸 Current editedImage:', editedImage);\n        console.log('🖼️ Result image:', result.member.image);\n        \n        // Always use the image from the backend response, or fall back to the current image\n        // If the backend returns a relative path, construct the full URL\n        let finalImage = result.member.image || displayMember.image;\n        if (finalImage && finalImage.startsWith('/uploads/')) {\n          finalImage = `http://localhost:5001${finalImage}`;\n        }\n        \n        console.log('🎯 Final image to use:', finalImage);\n        \n        setDisplayMember(prev => ({\n          ...prev,\n          bio: result.member.bio,\n          image: finalImage\n        }));\n        \n        // Also update the member state\n        setMember(prev => ({\n          ...prev,\n          bio: result.member.bio,\n          image: finalImage\n        }));\n      }\n\n      setEditMode(false);\n      setSaving(false);\n      \n    } catch (error) {\n      console.error('❌ Error updating profile:', error);\n      alert(`Error updating profile: ${error.message}`);\n      setSaving(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setEditMode(false);\n    setEditedBio('');\n    setEditedImage('');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"profile-container\">\n        <div className=\"container\">\n          <div className=\"loading-state\">\n            <h2>Loading profile...</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!member || !displayMember) {\n    return (\n      <div className=\"profile-container\">\n        <div className=\"container\">\n          <h1>Profile Not Found</h1>\n          <p>Sorry, we couldn't find the profile you're looking for.</p>\n          <Link to=\"/coaches-exec\" className=\"back-link\">← Back to Team</Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"container\">\n        <Link to=\"/coaches-exec\" className=\"back-link\">← Back to Team</Link>\n        \n        <div className=\"profile-content\">\n          <div className=\"profile-image-section\">\n            <img \n              src={editMode ? (editedImage || displayMember.image) : displayMember.image} \n              alt={`${displayMember.name} - ${displayMember.role}`}\n              className=\"profile-image\"\n              onError={(e) => console.error('❌ Image failed to load:', e.target.src)}\n              onLoad={() => console.log('✅ Image loaded successfully:', displayMember.image)}\n            />\n          </div>\n          \n          <div className=\"profile-info-section\">\n            <div className=\"profile-header\">\n              <h1 className=\"profile-name\">{displayMember.name}</h1>\n              <h2 className=\"profile-role\">{displayMember.role}</h2>\n              {isAdmin && (\n                <div className=\"profile-actions\">\n                  {editMode ? (\n                    <div className=\"edit-actions\">\n                      <button \n                        className=\"btn btn-primary\" \n                        onClick={handleSave}\n                        disabled={saving}\n                      >\n                        {saving ? 'Saving...' : 'Save Changes'}\n                      </button>\n                      <button \n                        className=\"btn btn-secondary\" \n                        onClick={handleCancel}\n                        disabled={saving}\n                      >\n                        Cancel\n                      </button>\n                    </div>\n                  ) : (\n                    <button \n                      className=\"btn btn-edit\" \n                      onClick={handleEdit}\n                    >\n                      Edit Bio\n                    </button>\n                  )}\n                </div>\n              )}\n            </div>\n            \n            {editMode ? (\n              <div className=\"edit-form\">\n                <div className=\"image-upload-section\">\n                  <label htmlFor=\"profile-image\" className=\"image-upload-label\">\n                    <div className=\"image-preview\">\n                                           <img \n                                              src={editedImage || displayMember.image}\n                       alt={`${displayMember.name} - ${displayMember.role}`}\n                       className=\"preview-image\"\n                     />\n                      <div className=\"image-overlay\">\n                        <span>Click to change image</span>\n                      </div>\n                    </div>\n                  </label>\n                  <input\n                    id=\"profile-image\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={(e) => {\n                      const file = e.target.files[0];\n                      if (file) {\n                        const imageUrl = URL.createObjectURL(file);\n                        setEditedImage(imageUrl);\n                      }\n                    }}\n                    style={{ display: 'none' }}\n                  />\n                  <p className=\"image-upload-help\">\n                    Click the image above to upload a new profile picture\n                  </p>\n                </div>\n                \n                <div className=\"bio-edit-section\">\n                  <label htmlFor=\"bio-textarea\" className=\"form-label\">Bio:</label>\n                  <textarea\n                    id=\"bio-textarea\"\n                    value={editedBio}\n                    onChange={(e) => setEditedBio(e.target.value)}\n                    className=\"bio-textarea\"\n                    rows=\"10\"\n                    placeholder=\"Enter the team member's bio...\"\n                  />\n                </div>\n              </div>\n                          ) : (\n                <div className=\"profile-bio\">\n                  {displayMember.bio.split('\\n\\n').map((paragraph, index) => (\n                    <p key={index}>{paragraph}</p>\n                  ))}\n                </div>\n              )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAO,eAAe;;AAEtB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG;EAChB,YAAY,EAAE;IACZC,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE,YAAY;IAClBC,KAAK,EAAE,uBAAuB;IAC9BC,GAAG,EAAE;AACX;AACA;AACA;AACA;EACI,CAAC;EACD,cAAc,EAAE;IACdH,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE,cAAc;IACpBC,KAAK,EAAE,0BAA0B;IACjCC,GAAG,EAAE;EACP,CAAC;EACD,gBAAgB,EAAE;IAChBH,IAAI,EAAE,gBAAgB;IACtBC,IAAI,EAAE,cAAc;IACpBC,KAAK,EAAE,0BAA0B;IACjCC,GAAG,EAAE;AACX;AACA;AACA;AACA;EACI,CAAC;EACD,WAAW,EAAE;IACXH,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE,WAAW;IACjBC,KAAK,EAAE,4BAA4B;IACnCC,GAAG,EAAE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC;EACD,WAAW,EAAE;IACXH,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE,WAAW;IACjBC,KAAK,EAAE,0BAA0B;IACjCC,GAAG,EAAE;AACX;AACA;AACA;AACA;EACI,CAAC;EACD,oBAAoB,EAAE;IACpBH,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE,gCAAgC;IACtCC,KAAK,EAAE,yBAAyB;IAChCC,GAAG,EAAE;AACX;AACA;AACA;AACA;EACI,CAAC;EACD,cAAc,EAAE;IACdH,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE,sBAAsB;IAC5BC,KAAK,EAAE,8BAA8B;IACrCC,GAAG,EAAE;AACX;AACA;AACA;AACA;AACA;EACc,CAAC;EACX,WAAW,EAAE;IACXH,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE,WAAW;IACjBC,KAAK,EAAE,kBAAkB;IACzBC,GAAG,EAAE;AACX;AACA;AACA;AACA;EACM;AACN,CAAC;AAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGZ,SAAS,CAAC,CAAC;EAC1B,MAAM;IAAEO,IAAI;IAAED;EAAK,CAAC,GAAGM,MAAM;EAC7B,MAAM;IAAEC,WAAW;IAAEC;EAAQ,CAAC,GAAGZ,OAAO,CAAC,CAAC;EAE1Ca,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,MAAM,CAAC;EACzCG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAET,IAAI,CAAC;EACnCQ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEV,IAAI,CAAC;EACnC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC0B,MAAM,EAAEC,SAAS,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA;EACA,MAAM8B,QAAQ,GAAG/B,KAAK,CAACgC,OAAO,CAAC,MAAM;IACnC;IACA,IAAIvB,WAAW,CAACE,IAAI,CAAC,EAAE;MACrBQ,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAET,IAAI,CAAC;MACnD,OAAOA,IAAI;IACb;;IAEA;IACA,MAAMsB,WAAW,GAAG;MAClB,cAAc,EAAE,cAAc;MAC9B,gBAAgB,EAAE,gBAAgB;MAClC,oBAAoB,EAAE,oBAAoB;MAC1C,cAAc,EAAE,cAAc;MAC9B,YAAY,EAAE,YAAY;MAC1B,WAAW,EAAE,WAAW;MACxB,WAAW,EAAE,WAAW;MACxB,WAAW,EAAE;IACf,CAAC;IAED,MAAMC,EAAE,GAAGD,WAAW,CAACtB,IAAI,CAAC;IAC5BQ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAET,IAAI,EAAE,aAAa,EAAEuB,EAAE,CAAC;;IAEpD;IACA,IAAI,CAACA,EAAE,IAAIxB,IAAI,EAAE;MACfS,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEV,IAAI,CAAC;MAC/C,MAAMyB,WAAW,GAAGC,MAAM,CAACC,OAAO,CAAC5B,WAAW,CAAC,CAAC6B,IAAI,CAAC,CAAC,CAACC,GAAG,EAAEC,MAAM,CAAC,KACjEA,MAAM,CAAC9B,IAAI,CAAC+B,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChC,IAAI,CAAC+B,WAAW,CAAC,CAAC,CACvD,CAAC;MACD,IAAIN,WAAW,EAAE;QACfhB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEe,WAAW,CAAC,CAAC,CAAC,CAAC;QACtD,OAAOA,WAAW,CAAC,CAAC,CAAC;MACvB;IACF;IAEA,OAAOD,EAAE;EACX,CAAC,EAAE,CAACvB,IAAI,EAAED,IAAI,CAAC,CAAC;;EAEhB;EACA,MAAM,CAAC8B,MAAM,EAAEG,SAAS,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC2C,OAAO,EAAEC,UAAU,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;EAE5CE,SAAS,CAAC,MAAM;IACd,MAAM2C,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI,CAACf,QAAQ,EAAE;QACbZ,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;QAC3DyB,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;;MAEA;MACA,MAAME,WAAW,GAAGtC,WAAW,CAACsB,QAAQ,CAAC;MACzC,IAAIgB,WAAW,EAAE;QACf5B,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE2B,WAAW,CAACrC,IAAI,CAAC;QACxDiC,SAAS,CAACI,WAAW,CAAC;QACtBjB,gBAAgB,CAACiB,WAAW,CAAC;QAC7BF,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;MAEA1B,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEW,QAAQ,CAAC;MACpDZ,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,sCAAsCW,QAAQ,EAAE,CAAC;MAE5E,IAAI;QACF,MAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsClB,QAAQ,EAAE,CAAC;QAC9EZ,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE4B,QAAQ,CAACE,MAAM,CAAC;QACnD/B,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE4B,QAAQ,CAACG,OAAO,CAAC;QAErD,IAAIH,QAAQ,CAACI,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UAClCnC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEiC,IAAI,CAAC;UAEtC,IAAIA,IAAI,CAACb,MAAM,EAAE;YACf;YACA,MAAMe,kBAAkB,GAAG;cACzB,GAAGF,IAAI,CAACb,MAAM;cACd5B,KAAK,EAAEyC,IAAI,CAACb,MAAM,CAAC5B,KAAK,IAAIyC,IAAI,CAACb,MAAM,CAAC5B,KAAK,CAAC4C,UAAU,CAAC,WAAW,CAAC,GACjE,wBAAwBH,IAAI,CAACb,MAAM,CAAC5B,KAAK,EAAE,GAC3CyC,IAAI,CAACb,MAAM,CAAC5B;YAClB,CAAC;YAEDO,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEmC,kBAAkB,CAAC3C,KAAK,CAAC;YAChEO,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEmC,kBAAkB,CAAC;YAExDZ,SAAS,CAACY,kBAAkB,CAAC;YAC7BzB,gBAAgB,CAACyB,kBAAkB,CAAC;UACtC,CAAC,MAAM;YACLpC,OAAO,CAACsC,KAAK,CAAC,iCAAiC,EAAEJ,IAAI,CAAC;UACxD;QACF,CAAC,MAAM;UACL,MAAMK,SAAS,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;UACvCxC,OAAO,CAACsC,KAAK,CAAC,2BAA2B,EAAET,QAAQ,CAACE,MAAM,EAAEF,QAAQ,CAACY,UAAU,CAAC;UAChFzC,OAAO,CAACsC,KAAK,CAAC,mBAAmB,EAAEC,SAAS,CAAC;;UAE7C;UACAvC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;UACxD,MAAM2B,WAAW,GAAGtC,WAAW,CAACsB,QAAQ,CAAC;UACzC,IAAIgB,WAAW,EAAE;YACf5B,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE2B,WAAW,CAACrC,IAAI,CAAC;YACxDiC,SAAS,CAACI,WAAW,CAAC;YACtBjB,gBAAgB,CAACiB,WAAW,CAAC;UAC/B;QACF;MACF,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdtC,OAAO,CAACsC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDtC,OAAO,CAACsC,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAACI,OAAO,CAAC;;QAEhD;QACA1C,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;QACrE,MAAM2B,WAAW,GAAGtC,WAAW,CAACsB,QAAQ,CAAC;QACzC,IAAIgB,WAAW,EAAE;UACf5B,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE2B,WAAW,CAACrC,IAAI,CAAC;UACxDiC,SAAS,CAACI,WAAW,CAAC;UACtBjB,gBAAgB,CAACiB,WAAW,CAAC;QAC/B;MACF,CAAC,SAAS;QACR5B,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1CyB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;;EAEd;EACA/B,KAAK,CAACG,SAAS,CAAC,MAAM;IACpB,IAAIqC,MAAM,EAAE;MACV;MACA,MAAMe,kBAAkB,GAAG;QACzB,GAAGf,MAAM;QACT5B,KAAK,EAAE4B,MAAM,CAAC5B,KAAK,IAAI4B,MAAM,CAAC5B,KAAK,CAAC4C,UAAU,CAAC,WAAW,CAAC,GACvD,wBAAwBhB,MAAM,CAAC5B,KAAK,EAAE,GACtC4B,MAAM,CAAC5B;MACb,CAAC;MAEDkB,gBAAgB,CAACyB,kBAAkB,CAAC;IACtC;EACF,CAAC,EAAE,CAACf,MAAM,CAAC,CAAC;EAEZ,MAAMsB,UAAU,GAAGA,CAAA,KAAM;IACvBtC,YAAY,CAACK,aAAa,CAAChB,GAAG,CAAC;IAC/Ba,cAAc,CAACG,aAAa,CAACjB,KAAK,CAAC;IACnCU,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMyC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BnC,SAAS,CAAC,IAAI,CAAC;IAEf,IAAI;MACF,MAAMoC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;MACpD,IAAI,CAACF,KAAK,EAAE;QACV,MAAM,IAAIG,KAAK,CAAC,+BAA+B,CAAC;MAClD;;MAEA;MACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAE/C,SAAS,CAAC;;MAEjC;MACA,IAAIE,WAAW,IAAIA,WAAW,KAAKe,MAAM,CAAC5B,KAAK,EAAE;QAC/C;QACA,IAAIa,WAAW,CAAC+B,UAAU,CAAC,OAAO,CAAC,EAAE;UACnC,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAACxB,WAAW,CAAC;UACzC,MAAM8C,IAAI,GAAG,MAAMvB,QAAQ,CAACuB,IAAI,CAAC,CAAC;UAClC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,IAAI,CAAC,EAAE,mBAAmB,EAAE;YAAEG,IAAI,EAAE;UAAa,CAAC,CAAC;UAC1EN,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEE,IAAI,CAAC;QAChC;MACF;;MAEA;MACA,MAAMG,WAAW,GAAG,MAAM1B,KAAK,CAAC,sCAAsClB,QAAQ,EAAE,EAAE;QAChF6C,MAAM,EAAE,KAAK;QACbzB,OAAO,EAAE;UACP,eAAe,EAAE,UAAUa,KAAK;QAClC,CAAC;QACDa,IAAI,EAAET;MACR,CAAC,CAAC;MAEF,IAAI,CAACO,WAAW,CAACvB,EAAE,EAAE;QACnB,MAAM0B,SAAS,GAAG,MAAMH,WAAW,CAACrB,IAAI,CAAC,CAAC;QAC1C,MAAM,IAAIa,KAAK,CAACW,SAAS,CAACrB,KAAK,IAAI,0BAA0B,CAAC;MAChE;MAEA,MAAMsB,MAAM,GAAG,MAAMJ,WAAW,CAACrB,IAAI,CAAC,CAAC;MACvCnC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE2D,MAAM,CAAC;;MAEtD;MACA,IAAIA,MAAM,CAACvC,MAAM,EAAE;QACjBrB,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE2D,MAAM,CAACvC,MAAM,CAAC;QAC7DrB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEK,WAAW,CAAC;QACnDN,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE2D,MAAM,CAACvC,MAAM,CAAC5B,KAAK,CAAC;;QAErD;QACA;QACA,IAAIoE,UAAU,GAAGD,MAAM,CAACvC,MAAM,CAAC5B,KAAK,IAAIiB,aAAa,CAACjB,KAAK;QAC3D,IAAIoE,UAAU,IAAIA,UAAU,CAACxB,UAAU,CAAC,WAAW,CAAC,EAAE;UACpDwB,UAAU,GAAG,wBAAwBA,UAAU,EAAE;QACnD;QAEA7D,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE4D,UAAU,CAAC;QAEjDlD,gBAAgB,CAACmD,IAAI,KAAK;UACxB,GAAGA,IAAI;UACPpE,GAAG,EAAEkE,MAAM,CAACvC,MAAM,CAAC3B,GAAG;UACtBD,KAAK,EAAEoE;QACT,CAAC,CAAC,CAAC;;QAEH;QACArC,SAAS,CAACsC,IAAI,KAAK;UACjB,GAAGA,IAAI;UACPpE,GAAG,EAAEkE,MAAM,CAACvC,MAAM,CAAC3B,GAAG;UACtBD,KAAK,EAAEoE;QACT,CAAC,CAAC,CAAC;MACL;MAEA1D,WAAW,CAAC,KAAK,CAAC;MAClBM,SAAS,CAAC,KAAK,CAAC;IAElB,CAAC,CAAC,OAAO6B,KAAK,EAAE;MACdtC,OAAO,CAACsC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDyB,KAAK,CAAC,2BAA2BzB,KAAK,CAACI,OAAO,EAAE,CAAC;MACjDjC,SAAS,CAAC,KAAK,CAAC;IAClB;EACF,CAAC;EAED,MAAMuD,YAAY,GAAGA,CAAA,KAAM;IACzB7D,WAAW,CAAC,KAAK,CAAC;IAClBE,YAAY,CAAC,EAAE,CAAC;IAChBE,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,IAAIkB,OAAO,EAAE;IACX,oBACEpC,OAAA;MAAK4E,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChC7E,OAAA;QAAK4E,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxB7E,OAAA;UAAK4E,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC5B7E,OAAA;YAAA6E,QAAA,EAAI;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAI,CAACjD,MAAM,IAAI,CAACX,aAAa,EAAE;IAC7B,oBACErB,OAAA;MAAK4E,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChC7E,OAAA;QAAK4E,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB7E,OAAA;UAAA6E,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BjF,OAAA;UAAA6E,QAAA,EAAG;QAAuD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC9DjF,OAAA,CAACH,IAAI;UAACqF,EAAE,EAAC,eAAe;UAACN,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACEjF,OAAA;IAAK4E,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChC7E,OAAA;MAAK4E,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB7E,OAAA,CAACH,IAAI;QAACqF,EAAE,EAAC,eAAe;QAACN,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAEpEjF,OAAA;QAAK4E,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B7E,OAAA;UAAK4E,SAAS,EAAC,uBAAuB;UAAAC,QAAA,eACpC7E,OAAA;YACEmF,GAAG,EAAEtE,QAAQ,GAAII,WAAW,IAAII,aAAa,CAACjB,KAAK,GAAIiB,aAAa,CAACjB,KAAM;YAC3EgF,GAAG,EAAE,GAAG/D,aAAa,CAACnB,IAAI,MAAMmB,aAAa,CAAClB,IAAI,EAAG;YACrDyE,SAAS,EAAC,eAAe;YACzBS,OAAO,EAAGC,CAAC,IAAK3E,OAAO,CAACsC,KAAK,CAAC,yBAAyB,EAAEqC,CAAC,CAACC,MAAM,CAACJ,GAAG,CAAE;YACvEK,MAAM,EAAEA,CAAA,KAAM7E,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAES,aAAa,CAACjB,KAAK;UAAE;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENjF,OAAA;UAAK4E,SAAS,EAAC,sBAAsB;UAAAC,QAAA,gBACnC7E,OAAA;YAAK4E,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B7E,OAAA;cAAI4E,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAExD,aAAa,CAACnB;YAAI;cAAA4E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtDjF,OAAA;cAAI4E,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAExD,aAAa,CAAClB;YAAI;cAAA2E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EACrDvE,OAAO,iBACNV,OAAA;cAAK4E,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAC7BhE,QAAQ,gBACPb,OAAA;gBAAK4E,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3B7E,OAAA;kBACE4E,SAAS,EAAC,iBAAiB;kBAC3Ba,OAAO,EAAElC,UAAW;kBACpBmC,QAAQ,EAAEvE,MAAO;kBAAA0D,QAAA,EAEhB1D,MAAM,GAAG,WAAW,GAAG;gBAAc;kBAAA2D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChC,CAAC,eACTjF,OAAA;kBACE4E,SAAS,EAAC,mBAAmB;kBAC7Ba,OAAO,EAAEd,YAAa;kBACtBe,QAAQ,EAAEvE,MAAO;kBAAA0D,QAAA,EAClB;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,gBAENjF,OAAA;gBACE4E,SAAS,EAAC,cAAc;gBACxBa,OAAO,EAAEnC,UAAW;gBAAAuB,QAAA,EACrB;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YACT;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,EAELpE,QAAQ,gBACPb,OAAA;YAAK4E,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB7E,OAAA;cAAK4E,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACnC7E,OAAA;gBAAO2F,OAAO,EAAC,eAAe;gBAACf,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,eAC3D7E,OAAA;kBAAK4E,SAAS,EAAC,eAAe;kBAAAC,QAAA,gBACP7E,OAAA;oBACGmF,GAAG,EAAElE,WAAW,IAAII,aAAa,CAACjB,KAAM;oBAC/DgF,GAAG,EAAE,GAAG/D,aAAa,CAACnB,IAAI,MAAMmB,aAAa,CAAClB,IAAI,EAAG;oBACrDyE,SAAS,EAAC;kBAAe;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC1B,CAAC,eACDjF,OAAA;oBAAK4E,SAAS,EAAC,eAAe;oBAAAC,QAAA,eAC5B7E,OAAA;sBAAA6E,QAAA,EAAM;oBAAqB;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/B,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,eACRjF,OAAA;gBACE0B,EAAE,EAAC,eAAe;gBAClBwC,IAAI,EAAC,MAAM;gBACX0B,MAAM,EAAC,SAAS;gBAChBC,QAAQ,EAAGP,CAAC,IAAK;kBACf,MAAMtB,IAAI,GAAGsB,CAAC,CAACC,MAAM,CAACO,KAAK,CAAC,CAAC,CAAC;kBAC9B,IAAI9B,IAAI,EAAE;oBACR,MAAM+B,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACjC,IAAI,CAAC;oBAC1C9C,cAAc,CAAC6E,QAAQ,CAAC;kBAC1B;gBACF,CAAE;gBACFG,KAAK,EAAE;kBAAEC,OAAO,EAAE;gBAAO;cAAE;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC,eACFjF,OAAA;gBAAG4E,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,EAAC;cAEjC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eAENjF,OAAA;cAAK4E,SAAS,EAAC,kBAAkB;cAAAC,QAAA,gBAC/B7E,OAAA;gBAAO2F,OAAO,EAAC,cAAc;gBAACf,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACjEjF,OAAA;gBACE0B,EAAE,EAAC,cAAc;gBACjB0E,KAAK,EAAErF,SAAU;gBACjB8E,QAAQ,EAAGP,CAAC,IAAKtE,YAAY,CAACsE,CAAC,CAACC,MAAM,CAACa,KAAK,CAAE;gBAC9CxB,SAAS,EAAC,cAAc;gBACxByB,IAAI,EAAC,IAAI;gBACTC,WAAW,EAAC;cAAgC;gBAAAxB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7C,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,gBAEJjF,OAAA;YAAK4E,SAAS,EAAC,aAAa;YAAAC,QAAA,EACzBxD,aAAa,CAAChB,GAAG,CAACkG,KAAK,CAAC,MAAM,CAAC,CAACC,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBACpD1G,OAAA;cAAA6E,QAAA,EAAgB4B;YAAS,GAAjBC,KAAK;cAAA5B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgB,CAC9B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1E,EAAA,CA1XID,OAAO;EAAA,QACIV,SAAS,EAESE,OAAO;AAAA;AAAA6G,EAAA,GAHpCrG,OAAO;AA4Xb,eAAeA,OAAO;AAAC,IAAAqG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}