{"ast":null,"code":"var _jsxFileName = \"/Users/jadeclement/Documents/Developer/uofttri/src/components/Forum.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { useWorkoutEdit } from '../hooks/useWorkoutEdit';\nimport './Forum.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Forum = () => {\n  _s();\n  const {\n    currentUser,\n    isMember,\n    isExec,\n    isCoach,\n    getUserRole\n  } = useAuth();\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState('workouts');\n  const [workoutPosts, setWorkoutPosts] = useState([]);\n  const [eventPosts, setEventPosts] = useState([]);\n  const [newWorkout, setNewWorkout] = useState('');\n  const [newEvent, setNewEvent] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [showWorkoutForm, setShowWorkoutForm] = useState(false);\n  const [showEventForm, setShowEventForm] = useState(false);\n  const [workoutFilter, setWorkoutFilter] = useState('all');\n  const [timeFilter, setTimeFilter] = useState('upcoming'); // 'upcoming' | 'past'\n  const [workoutForm, setWorkoutForm] = useState({\n    title: '',\n    type: 'spin',\n    date: '',\n    time: '',\n    content: '',\n    capacity: ''\n  });\n  const [eventForm, setEventForm] = useState({\n    title: '',\n    date: '',\n    content: ''\n  });\n  // Inline edit state for events (admin/exec)\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [eventEditForm, setEventEditForm] = useState({\n    title: '',\n    date: '',\n    content: ''\n  });\n  const [savingEvent, setSavingEvent] = useState(false);\n  const [workoutSignups, setWorkoutSignups] = useState({});\n  const [workoutWaitlists, setWorkoutWaitlists] = useState({});\n  const [eventRsvps, setEventRsvps] = useState({});\n  const [showCancelModal, setShowCancelModal] = useState(false);\n  const [workoutToCancel, setWorkoutToCancel] = useState(null);\n  const [showPromotionMessage, setShowPromotionMessage] = useState(false);\n  const [promotedWorkout, setPromotedWorkout] = useState(null);\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api';\n\n  // Function to check if a workout type is allowed for the user's sport\n  const isWorkoutTypeAllowed = workoutType => {\n    console.log('🔍 isWorkoutTypeAllowed debug:', {\n      currentUser: currentUser,\n      sport: currentUser === null || currentUser === void 0 ? void 0 : currentUser.sport,\n      workoutType: workoutType\n    });\n    if (!currentUser || !currentUser.sport) {\n      console.log('🔍 No sport preference, showing all workouts');\n      return true; // Show all if no sport preference\n    }\n    const sport = currentUser.sport;\n    const isAllowed = (() => {\n      switch (sport) {\n        case 'run_only':\n          return workoutType === 'run';\n        case 'duathlon':\n          return ['run', 'outdoor-ride', 'brick'].includes(workoutType);\n        case 'triathlon':\n          return ['run', 'outdoor-ride', 'brick', 'swim', 'spin'].includes(workoutType);\n        default:\n          return true;\n        // Show all for unknown sports\n      }\n    })();\n    console.log('🔍 Sport filtering result:', {\n      sport,\n      workoutType,\n      isAllowed\n    });\n    return isAllowed;\n  };\n\n  // Function to get allowed workout types for the current user's sport\n  const getAllowedWorkoutTypes = () => {\n    if (!currentUser || !currentUser.sport) {\n      // Show all types if no sport preference\n      return [{\n        value: 'spin',\n        label: 'Spin'\n      }, {\n        value: 'outdoor-ride',\n        label: 'Outdoor Ride'\n      }, {\n        value: 'run',\n        label: 'Run'\n      }, {\n        value: 'swim',\n        label: 'Swim'\n      }, {\n        value: 'brick',\n        label: 'Brick (Bike + Run)'\n      }, {\n        value: 'other',\n        label: 'Other'\n      }];\n    }\n    const sport = currentUser.sport;\n    switch (sport) {\n      case 'run_only':\n        return [{\n          value: 'run',\n          label: 'Run'\n        }, {\n          value: 'other',\n          label: 'Other'\n        }];\n      case 'duathlon':\n        return [{\n          value: 'run',\n          label: 'Run'\n        }, {\n          value: 'outdoor-ride',\n          label: 'Outdoor Ride'\n        }, {\n          value: 'brick',\n          label: 'Brick (Bike + Run)'\n        }, {\n          value: 'other',\n          label: 'Other'\n        }];\n      case 'triathlon':\n        return [{\n          value: 'run',\n          label: 'Run'\n        }, {\n          value: 'outdoor-ride',\n          label: 'Outdoor Ride'\n        }, {\n          value: 'brick',\n          label: 'Brick (Bike + Run)'\n        }, {\n          value: 'swim',\n          label: 'Swim'\n        }, {\n          value: 'spin',\n          label: 'Spin'\n        }, {\n          value: 'other',\n          label: 'Other'\n        }];\n      default:\n        return [{\n          value: 'spin',\n          label: 'Spin'\n        }, {\n          value: 'outdoor-ride',\n          label: 'Outdoor Ride'\n        }, {\n          value: 'run',\n          label: 'Run'\n        }, {\n          value: 'swim',\n          label: 'Swim'\n        }, {\n          value: 'brick',\n          label: 'Brick (Bike + Run)'\n        }, {\n          value: 'other',\n          label: 'Other'\n        }];\n    }\n  };\n  const {\n    editingWorkout,\n    editForm,\n    saving,\n    startEdit,\n    cancelEdit,\n    updateField,\n    saveWorkout\n  } = useWorkoutEdit(API_BASE_URL);\n  useEffect(() => {\n    if (!currentUser) {\n      navigate('/login');\n      return;\n    }\n\n    // If user is at least member, load posts. If pending, we'll render a gate message.\n    if (isMember(currentUser)) {\n      loadForumPosts();\n    } else {\n      // Ensure we don't stay stuck on loading for pending users\n      setLoading(false);\n    }\n  }, [currentUser, navigate, isMember]);\n\n  // Listen for profile updates to refresh profile pictures\n  useEffect(() => {\n    const handleProfileUpdate = event => {\n      console.log('🔄 Profile updated event received in Forum, refreshing posts...');\n      loadForumPosts();\n    };\n    window.addEventListener('profileUpdated', handleProfileUpdate);\n    return () => {\n      window.removeEventListener('profileUpdated', handleProfileUpdate);\n    };\n  }, []);\n\n  // Check for tab query parameter and set active tab accordingly\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const tabParam = urlParams.get('tab');\n    if (tabParam === 'events') {\n      setActiveTab('events');\n    } else if (tabParam === 'workouts') {\n      setActiveTab('workouts');\n    }\n    // If no tab param or invalid value, default to 'workouts' (existing behavior)\n  }, []);\n  const loadForumPosts = async () => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n\n      // Load workout posts\n      const workoutResponse = await fetch(`${API_BASE_URL}/forum/posts?type=workout`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (workoutResponse.ok) {\n        const workoutData = await workoutResponse.json();\n        console.log('🔍 Workout data received:', workoutData);\n\n        // Ensure we have valid posts data\n        const posts = workoutData.posts || workoutData || [];\n        console.log('🔍 Posts to set:', posts);\n\n        // Filter out any invalid posts\n        const validPosts = posts.filter(post => post && post.id && typeof post === 'object');\n        console.log('🔍 Valid posts:', validPosts);\n        setWorkoutPosts(validPosts);\n\n        // Load signup data for all workouts\n        await loadWorkoutSignups(validPosts);\n        // Load waitlist data for all workouts\n        await loadWorkoutWaitlists(validPosts);\n      }\n\n      // Load event posts\n      const eventResponse = await fetch(`${API_BASE_URL}/forum/posts?type=event`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (eventResponse.ok) {\n        const eventData = await eventResponse.json();\n        console.log('🔍 Event data received:', eventData);\n\n        // Ensure we have valid posts data\n        const posts = eventData.posts || eventData || [];\n        console.log('🔍 Event posts to set:', posts);\n\n        // Filter out any invalid posts\n        const validPosts = posts.filter(post => post && post.id && typeof post === 'object');\n        console.log('🔍 Valid event posts:', validPosts);\n        setEventPosts(validPosts);\n\n        // Load RSVP data for all events\n        await loadEventRsvps(validPosts);\n      }\n    } catch (error) {\n      console.error('Error loading forum posts:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadWorkoutSignups = async workouts => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) return;\n      const signupsData = {};\n      for (const workout of workouts) {\n        const signupsResponse = await fetch(`${API_BASE_URL}/forum/workouts/${workout.id}/signups`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (signupsResponse.ok) {\n          const data = await signupsResponse.json();\n          signupsData[workout.id] = data.signups || [];\n          console.log(`🔍 Workout ${workout.id} signups:`, data.signups || []);\n        }\n      }\n      setWorkoutSignups(signupsData);\n      console.log('📊 All workout signups loaded:', signupsData);\n      console.log('🔍 Current workoutSignups state structure:', Object.keys(signupsData).map(key => {\n        var _signupsData$key;\n        return {\n          workoutId: key,\n          signupCount: ((_signupsData$key = signupsData[key]) === null || _signupsData$key === void 0 ? void 0 : _signupsData$key.length) || 0,\n          signups: signupsData[key] || []\n        };\n      }));\n    } catch (error) {\n      console.error('Error loading workout signups:', error);\n    }\n  };\n  const loadWorkoutWaitlists = async workouts => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) return;\n      const waitlistData = {};\n      for (const workout of workouts) {\n        const waitlistResponse = await fetch(`${API_BASE_URL}/forum/workouts/${workout.id}/waitlist`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (waitlistResponse.ok) {\n          const data = await waitlistResponse.json();\n          waitlistData[workout.id] = data.waitlist || [];\n        }\n      }\n      setWorkoutWaitlists(waitlistData);\n    } catch (error) {\n      console.error('Error loading workout waitlists:', error);\n    }\n  };\n  const loadEventRsvps = async events => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) return;\n      const rsvpsData = {};\n      for (const event of events) {\n        const rsvpsResponse = await fetch(`${API_BASE_URL}/forum/events/${event.id}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (rsvpsResponse.ok) {\n          const data = await rsvpsResponse.json();\n          rsvpsData[event.id] = data.rsvps || [];\n          console.log(`🔍 Event ${event.id} RSVPs:`, data.rsvps || []);\n        }\n      }\n      setEventRsvps(rsvpsData);\n      console.log('📊 All event RSVPs loaded:', rsvpsData);\n    } catch (error) {\n      console.error('Error loading event RSVPs:', error);\n    }\n  };\n\n  // Event edit helpers\n  const startEventEdit = eventPost => {\n    setEditingEvent(eventPost.id);\n    setEventEditForm({\n      title: eventPost.title || '',\n      date: eventPost.event_date ? String(eventPost.event_date).split('T')[0] : '',\n      content: eventPost.content || ''\n    });\n  };\n  const cancelEventEdit = () => {\n    setEditingEvent(null);\n    setEventEditForm({\n      title: '',\n      date: '',\n      content: ''\n    });\n  };\n  const updateEventField = (field, value) => {\n    setEventEditForm(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const saveEvent = async eventId => {\n    try {\n      setSavingEvent(true);\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) throw new Error('No authentication token found');\n      const body = {\n        title: eventEditForm.title,\n        eventDate: eventEditForm.date,\n        content: eventEditForm.content\n      };\n      const response = await fetch(`${API_BASE_URL}/forum/posts/${eventId}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      if (!response.ok) {\n        const err = await response.json().catch(() => ({}));\n        throw new Error(err.error || 'Failed to update event');\n      }\n      setSavingEvent(false);\n      setEditingEvent(null);\n      await loadForumPosts();\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setSavingEvent(false);\n      alert(error.message || 'Error updating event');\n    }\n  };\n  const handleWorkoutSignUp = async workoutId => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n\n      // Check if user is already signed up\n      const isCurrentlySignedUp = isUserSignedUp(workoutId);\n      if (!isCurrentlySignedUp) {\n        // Check capacity limit before allowing sign-up\n        const workout = workoutPosts.find(w => w.id === workoutId);\n        if (workout && workout.capacity) {\n          var _workoutSignups$worko;\n          const currentSignups = ((_workoutSignups$worko = workoutSignups[workoutId]) === null || _workoutSignups$worko === void 0 ? void 0 : _workoutSignups$worko.length) || 0;\n          if (currentSignups >= workout.capacity) {\n            alert(`Sorry, this workout is full! Maximum capacity: ${workout.capacity} people.`);\n            return;\n          }\n        }\n      }\n      const response = await fetch(`${API_BASE_URL}/forum/workouts/${workoutId}/signup`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const result = await response.json();\n\n        // Reload signup data from backend to ensure accuracy\n        await loadWorkoutSignups(workoutPosts);\n\n        // Also reload waitlist data in case someone was promoted\n        await loadWorkoutWaitlists(workoutPosts);\n      } else {\n        const error = await response.json();\n        console.error('Error updating signup:', error.error);\n      }\n    } catch (error) {\n      console.error('Error updating signup:', error);\n    }\n  };\n  const isUserSignedUp = workoutId => {\n    if (!workoutId) return false;\n    const signups = workoutSignups[workoutId] || [];\n    return signups.some(signup => signup && signup.user_id === currentUser.id);\n  };\n  const isWorkoutFull = workoutId => {\n    var _workoutSignups$worko2;\n    if (!workoutId) return false;\n    const workout = workoutPosts.find(w => w && w.id === workoutId);\n    if (!workout || !workout.capacity) return false;\n    const currentSignups = ((_workoutSignups$worko2 = workoutSignups[workoutId]) === null || _workoutSignups$worko2 === void 0 ? void 0 : _workoutSignups$worko2.length) || 0;\n    return currentSignups >= workout.capacity;\n  };\n  const isWorkoutArchived = post => {\n    if (!post || !post.workout_date) return false;\n    try {\n      // Parse the workout date and get just the date part (YYYY-MM-DD)\n      const workoutDate = new Date(post.workout_date);\n      if (isNaN(workoutDate.getTime())) return false;\n\n      // Get today's date in the same timezone as the workout date\n      const today = new Date();\n\n      // Compare dates by converting both to YYYY-MM-DD format\n      const workoutDateStr = workoutDate.toISOString().split('T')[0];\n      const todayStr = today.toISOString().split('T')[0];\n      return workoutDateStr < todayStr;\n    } catch (_) {\n      return false;\n    }\n  };\n  const isUserOnWaitlist = workoutId => {\n    var _workoutWaitlists$wor;\n    if (!workoutId) return false;\n    return ((_workoutWaitlists$wor = workoutWaitlists[workoutId]) === null || _workoutWaitlists$wor === void 0 ? void 0 : _workoutWaitlists$wor.some(waitlist => waitlist && waitlist.user_id === currentUser.id)) || false;\n  };\n\n  // Returns 1-based position or null if not on waitlist\n  const getWaitlistPosition = workoutId => {\n    if (!workoutId) return null;\n    const list = workoutWaitlists[workoutId] || [];\n    const idx = list.findIndex(w => w && w.user_id === currentUser.id);\n    return idx === -1 ? null : idx + 1;\n  };\n  const formatOrdinal = n => {\n    if (n == null) return '';\n    const s = [\"th\", \"st\", \"nd\", \"rd\"],\n      v = n % 100;\n    return n + (s[(v - 20) % 10] || s[v] || s[0]);\n  };\n\n  // Event RSVP functions\n  const handleEventRsvp = async (eventId, status) => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n\n      // Call backend API to save RSVP\n      const response = await fetch(`${API_BASE_URL}/forum/events/${eventId}/rsvp`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          status\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n\n        // Update local state based on backend response\n        const currentRsvps = eventRsvps[eventId] || [];\n        if (result.status === null) {\n          // RSVP was removed\n          const filteredRsvps = currentRsvps.filter(r => r.user_id !== currentUser.id);\n          setEventRsvps(prev => ({\n            ...prev,\n            [eventId]: filteredRsvps\n          }));\n        } else {\n          // RSVP was added/updated\n          const filteredRsvps = currentRsvps.filter(r => r.user_id !== currentUser.id);\n          const newRsvp = {\n            id: Date.now(),\n            user_id: currentUser.id,\n            user_name: currentUser.name,\n            status: result.status,\n            signed_up_at: new Date().toISOString().split('T')[0]\n          };\n          setEventRsvps(prev => ({\n            ...prev,\n            [eventId]: [...filteredRsvps, newRsvp]\n          }));\n        }\n        console.log('Event RSVP updated:', result);\n      } else {\n        const error = await response.json();\n        console.error('Error updating RSVP:', error.error);\n        alert(error.error || 'Error updating RSVP');\n      }\n    } catch (error) {\n      console.error('Error updating event RSVP:', error);\n      alert('Error updating RSVP');\n    }\n  };\n  const getUserRsvpStatus = eventId => {\n    if (!eventId) return null;\n    const rsvps = eventRsvps[eventId] || [];\n    const userRsvp = rsvps.find(rsvp => rsvp.user_id === currentUser.id);\n    return userRsvp ? userRsvp.status : null;\n  };\n  const handleWaitlistJoin = async workoutId => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n      const response = await fetch(`${API_BASE_URL}/forum/workouts/${workoutId}/waitlist`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        // Refresh waitlist data\n        await loadWorkoutWaitlists(workoutPosts);\n      } else {\n        const error = await response.json();\n        alert(error.error || 'Failed to join waitlist');\n      }\n    } catch (error) {\n      console.error('Error joining waitlist:', error);\n      alert('Failed to join waitlist');\n    }\n  };\n  const handleWaitlistLeave = async workoutId => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n      const response = await fetch(`${API_BASE_URL}/forum/workouts/${workoutId}/waitlist`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        // Refresh waitlist data\n        await loadWorkoutWaitlists(workoutPosts);\n      } else {\n        const error = await response.json();\n        alert(error.error || 'Failed to leave waitlist');\n      }\n    } catch (error) {\n      console.error('Error leaving waitlist:', error);\n      alert('Failed to leave waitlist');\n    }\n  };\n  const handleCancelClick = workoutId => {\n    setWorkoutToCancel(workoutId);\n    setShowCancelModal(true);\n  };\n  const handleCancelConfirm = async () => {\n    if (!workoutToCancel) return;\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n      const response = await fetch(`${API_BASE_URL}/forum/workouts/${workoutToCancel}/signup`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        // Refresh both signup and waitlist data since someone might have been promoted\n        await loadWorkoutSignups(workoutPosts);\n        await loadWorkoutWaitlists(workoutPosts);\n        setShowCancelModal(false);\n        setWorkoutToCancel(null);\n      } else {\n        const error = await response.json();\n        alert(error.error || 'Failed to cancel signup');\n      }\n    } catch (error) {\n      console.error('Error canceling signup:', error);\n      alert('Failed to cancel signup');\n    }\n  };\n  const handleCancelCancel = () => {\n    setShowCancelModal(false);\n    setWorkoutToCancel(null);\n  };\n\n  // Check if user was promoted from waitlist after data refresh\n  const checkForWaitlistPromotion = workoutId => {\n    var _workoutWaitlists$wor2, _workoutSignups$worko3;\n    const wasOnWaitlist = (_workoutWaitlists$wor2 = workoutWaitlists[workoutId]) === null || _workoutWaitlists$wor2 === void 0 ? void 0 : _workoutWaitlists$wor2.some(w => w.user_id === currentUser.id);\n    const isNowSignedUp = (_workoutSignups$worko3 = workoutSignups[workoutId]) === null || _workoutSignups$worko3 === void 0 ? void 0 : _workoutSignups$worko3.some(s => s.user_id === currentUser.id);\n    if (wasOnWaitlist && isNowSignedUp) {\n      // User was promoted from waitlist!\n      const workout = workoutPosts.find(w => w.id === workoutId);\n      setPromotedWorkout(workout);\n      setShowPromotionMessage(true);\n\n      // Auto-hide after 10 seconds\n      setTimeout(() => {\n        setShowPromotionMessage(false);\n        setPromotedWorkout(null);\n      }, 10000);\n    }\n  };\n  const handleSubmitWorkout = async e => {\n    e.preventDefault();\n    if (!workoutForm.title.trim() || !workoutForm.date || !workoutForm.time || !workoutForm.content.trim()) return;\n\n    // Check if the selected date is in the future\n    const selectedDate = new Date(workoutForm.date);\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); // Reset time to start of day for accurate comparison\n\n    if (selectedDate <= today) {\n      alert('Please select a future date for your workout.');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n      const response = await fetch(`${API_BASE_URL}/forum/posts`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: workoutForm.title.trim(),\n          workoutType: workoutForm.type,\n          workoutDate: workoutForm.date,\n          workoutTime: workoutForm.time,\n          content: workoutForm.content.trim(),\n          capacity: workoutForm.capacity ? parseInt(workoutForm.capacity) : null,\n          type: 'workout'\n        })\n      });\n      if (response.ok) {\n        const newPostData = await response.json();\n        console.log('🔍 New workout data received:', newPostData);\n\n        // Check if the response has the expected structure\n        if (newPostData.post) {\n          setWorkoutPosts([newPostData.post, ...workoutPosts]);\n          console.log('✅ Workout added to state');\n        } else if (newPostData.id) {\n          // If the response is the post directly\n          setWorkoutPosts([newPostData, ...workoutPosts]);\n          console.log('✅ Workout added to state (direct response)');\n        } else {\n          console.error('❌ Unexpected response structure:', newPostData);\n          // Fallback: reload all posts\n          console.log('🔄 Reloading all posts as fallback...');\n          loadForumPosts();\n        }\n        setWorkoutForm({\n          title: '',\n          type: 'spin',\n          date: '',\n          time: '',\n          content: '',\n          capacity: ''\n        });\n        setShowWorkoutForm(false);\n      } else {\n        console.error('Failed to create workout post');\n      }\n    } catch (error) {\n      console.error('Error creating workout post:', error);\n    }\n  };\n  const handleSubmitEvent = async e => {\n    e.preventDefault();\n    if (!eventForm.title.trim() || !eventForm.date || !eventForm.content.trim()) return;\n\n    // Check if the selected date is in the future\n    const selectedDate = new Date(eventForm.date);\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); // Reset time to start of day for accurate comparison\n\n    if (selectedDate <= today) {\n      alert('Please select a future date for your event.');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n      const response = await fetch(`${API_BASE_URL}/forum/posts`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: eventForm.title.trim(),\n          eventDate: eventForm.date,\n          content: eventForm.content.trim(),\n          type: 'event'\n        })\n      });\n      if (response.ok) {\n        const newPostData = await response.json();\n        setEventPosts([newPostData.post, ...eventPosts]);\n        setEventForm({\n          title: '',\n          date: '',\n          content: ''\n        });\n        setShowEventForm(false);\n      } else {\n        console.error('Failed to create event post');\n      }\n    } catch (error) {\n      console.error('Error creating event post:', error);\n    }\n  };\n  const handleLike = async postId => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n      const response = await fetch(`${API_BASE_URL}/forum/posts/${postId}/like`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        // Reload posts to get updated like count\n        loadForumPosts();\n      } else {\n        console.error('Failed to like post');\n      }\n    } catch (error) {\n      console.error('Error liking post:', error);\n    }\n  };\n  const handleDeleteWorkout = async postId => {\n    if (!window.confirm('Are you sure you want to delete this workout post?')) {\n      return;\n    }\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n      const response = await fetch(`${API_BASE_URL}/forum/posts/${postId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        loadForumPosts();\n      } else {\n        console.error('Failed to delete workout post');\n      }\n    } catch (error) {\n      console.error('Error deleting workout post:', error);\n    }\n  };\n  const handleDeleteEvent = async postId => {\n    if (!window.confirm('Are you sure you want to delete this event post?')) {\n      return;\n    }\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n      const response = await fetch(`${API_BASE_URL}/forum/posts/${postId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        loadForumPosts();\n      } else {\n        console.error('Failed to delete event post');\n      }\n    } catch (error) {\n      console.error('Error deleting event post:', error);\n    }\n  };\n\n  // Date helpers (treat YYYY-MM-DD as UTC to avoid TZ shifting)\n  const parseDateOnlyUTC = dateStr => {\n    if (!dateStr) return null;\n    const base = typeof dateStr === 'string' ? dateStr.split('T')[0] : dateStr;\n    const parts = base.split('-');\n    if (parts.length !== 3) return new Date(dateStr);\n    const [y, m, d] = parts.map(Number);\n    return new Date(Date.UTC(y, m - 1, d));\n  };\n  const formatDateOnlyUTC = dateStr => {\n    const d = parseDateOnlyUTC(dateStr);\n    if (!d || isNaN(d.getTime())) return '';\n    return d.toLocaleDateString(undefined, {\n      timeZone: 'UTC'\n    });\n  };\n\n  // Helpers for date filtering\n  const isPast = dateStr => {\n    try {\n      if (!dateStr) return false;\n      const d = parseDateOnlyUTC(dateStr);\n      if (!d || isNaN(d.getTime())) return false;\n      const today = new Date();\n      today.setUTCHours(0, 0, 0, 0);\n      return d < today;\n    } catch (_) {\n      return false;\n    }\n  };\n\n  // Filter workouts based on selected filters (time + type + sport)\n  const getFilteredWorkouts = () => {\n    // First filter by sport preference\n    const bySport = workoutPosts.filter(post => {\n      return isWorkoutTypeAllowed(post.workout_type);\n    });\n\n    // Then filter by time\n    const byTime = bySport.filter(post => {\n      const past = isPast(post.workout_date);\n      return timeFilter === 'past' ? past : !past;\n    });\n\n    // Sort by actual workout_date, not created_at\n    byTime.sort((a, b) => {\n      const da = a && a.workout_date ? parseDateOnlyUTC(a.workout_date) : new Date(0);\n      const db = b && b.workout_date ? parseDateOnlyUTC(b.workout_date) : new Date(0);\n      return timeFilter === 'past' ? db - da : da - db; // past: newest first, upcoming: soonest first\n    });\n    if (workoutFilter === 'all') return byTime;\n    return byTime.filter(post => {\n      switch (workoutFilter) {\n        case 'bike':\n          return post.workout_type === 'spin' || post.workout_type === 'outdoor-ride' || post.workout_type === 'brick';\n        case 'swim':\n          return post.workout_type === 'swim';\n        case 'run':\n          return post.workout_type === 'run';\n        default:\n          return true;\n      }\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 12\n    }, this);\n  }\n  if (!currentUser) {\n    return null;\n  }\n\n  // Gate for pending users: show message instead of forum content\n  if (!isMember(currentUser) && !isCoach(currentUser) && !isExec(currentUser)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forum-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"section-title\",\n          children: \"Team Forum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notice-card\",\n          style: {\n            background: '#fff8e1',\n            border: '1px solid #facc15',\n            color: '#92400e',\n            padding: '16px',\n            borderRadius: '8px',\n            lineHeight: 1.6\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: 0\n            },\n            children: [\"You don't have access to the forum yet. Please email \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"mailto:info@uoft-tri.club\",\n              children: \"info@uoft-tri.club\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 978,\n              columnNumber: 68\n            }, this), \" your membership receipt and we will confirm your registration! You will have to log out and then log back in to see this page.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '12px 0 0 0',\n              fontSize: '14px',\n              opacity: 0.9\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Note:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 981,\n              columnNumber: 15\n            }, this), \" If you were a member on our old website, you'll be automatically approved as a member once you sign up. You will get an email once you get access!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 966,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forum-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"section-title\",\n        children: \"Team Forum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"section-subtitle\",\n        children: \"Connect with your teammates and discuss training, races, and more!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 993,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forum-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'workouts' ? 'active' : ''}`,\n          onClick: () => setActiveTab('workouts'),\n          children: \"\\uD83C\\uDFC3\\u200D\\u2642\\uFE0F Workouts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 997,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'events' ? 'active' : ''}`,\n          onClick: () => setActiveTab('events'),\n          children: \"\\uD83C\\uDF89 Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 9\n      }, this), activeTab === 'workouts' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workouts-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Workout Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1015,\n            columnNumber: 15\n          }, this), (isExec(currentUser) || isCoach(currentUser)) && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-post-btn\",\n            onClick: () => setShowWorkoutForm(true),\n            children: \"+ New Workout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workout-filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${timeFilter === 'upcoming' ? 'active' : ''}`,\n            onClick: () => setTimeFilter('upcoming'),\n            children: \"\\u23F3 Upcoming\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${timeFilter === 'past' ? 'active' : ''}`,\n            onClick: () => setTimeFilter('past'),\n            children: \"\\uD83D\\uDDC2 Past\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1034,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workout-filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${workoutFilter === 'all' ? 'active' : ''}`,\n            onClick: () => setWorkoutFilter('all'),\n            children: \"\\uD83C\\uDFC1 All Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1044,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${workoutFilter === 'bike' ? 'active' : ''}`,\n            onClick: () => setWorkoutFilter('bike'),\n            children: \"\\uD83D\\uDEB4\\u200D\\u2642\\uFE0F Bike (Indoor/Outdoor/Brick)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1050,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${workoutFilter === 'swim' ? 'active' : ''}`,\n            onClick: () => setWorkoutFilter('swim'),\n            children: \"\\uD83C\\uDFCA\\u200D\\u2642\\uFE0F Swim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1056,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${workoutFilter === 'run' ? 'active' : ''}`,\n            onClick: () => setWorkoutFilter('run'),\n            children: \"\\uD83C\\uDFC3\\u200D\\u2640\\uFE0F Run\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1043,\n          columnNumber: 13\n        }, this), getFilteredWorkouts().length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-posts\",\n          children: workoutPosts.length === 0 ? 'No workout posts yet.' : `No ${workoutFilter === 'all' ? '' : workoutFilter} workouts found.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1071,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"posts-list\",\n          children: getFilteredWorkouts().filter(post => post && post.id).map(post => {\n            var _workoutSignups$post$, _workoutSignups$post$2, _workoutWaitlists$pos;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-card workout-post\",\n              onClick: () => window.location.href = `/workout/${post.id}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-header\",\n                children: [post.title ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"workout-title\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: post.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1081,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1080,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"workout-title\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: \"Untitled Workout\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1087,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1086,\n                  columnNumber: 25\n                }, this), (currentUser.id === post.user_id || currentUser.role === 'exec' || currentUser.role === 'administrator') && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"workout-actions-admin\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"edit-btn\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      startEdit(post);\n                    },\n                    disabled: editingWorkout === post.id,\n                    children: \"\\u270F\\uFE0F Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1094,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-btn\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleDeleteWorkout(post.id);\n                    },\n                    disabled: editingWorkout === post.id,\n                    children: \"\\uD83D\\uDDD1\\uFE0F Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1104,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1093,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1078,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"workout-author\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"author-info\",\n                  children: [(() => {\n                    const {\n                      normalizeProfileImageUrl\n                    } = require('../utils/imageUtils');\n                    const url = normalizeProfileImageUrl(post.authorProfilePictureUrl);\n                    return url ? /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: url,\n                      alt: \"Profile\",\n                      className: \"author-avatar\",\n                      onError: e => {\n                        e.target.src = '/images/default_profile.png';\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1124,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"/images/default_profile.png\",\n                      alt: \"Profile\",\n                      className: \"author-avatar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1133,\n                      columnNumber: 29\n                    }, this);\n                  })(), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"author-name\",\n                    children: [\"Posted by \", post.author_name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1141,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1119,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1118,\n                columnNumber: 21\n              }, this), editingWorkout === post.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"workout-edit-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `edit-title-${post.id}`,\n                    children: \"Title:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1148,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: `edit-title-${post.id}`,\n                    type: \"text\",\n                    value: editForm.title,\n                    onChange: e => updateField('title', e.target.value),\n                    className: \"form-input\",\n                    placeholder: \"Enter workout title...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1149,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1147,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: `edit-type-${post.id}`,\n                      children: \"Workout Type:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1161,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: `edit-type-${post.id}`,\n                      type: \"text\",\n                      value: editForm.workoutType,\n                      onChange: e => updateField('workoutType', e.target.value),\n                      className: \"form-input\",\n                      placeholder: \"Enter workout type...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1162,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1160,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: `edit-capacity-${post.id}`,\n                      children: \"Capacity:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1173,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: `edit-capacity-${post.id}`,\n                      type: \"number\",\n                      min: \"1\",\n                      value: editForm.capacity,\n                      onChange: e => updateField('capacity', e.target.value),\n                      className: \"form-input\",\n                      placeholder: \"Enter capacity...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1174,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1172,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1159,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: `edit-date-${post.id}`,\n                      children: \"Date:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1188,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: `edit-date-${post.id}`,\n                      type: \"date\",\n                      value: editForm.workoutDate,\n                      onChange: e => updateField('workoutDate', e.target.value),\n                      className: \"form-input\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1189,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1187,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: `edit-time-${post.id}`,\n                      children: \"Time:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1199,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: `edit-time-${post.id}`,\n                      type: \"time\",\n                      value: editForm.workoutTime,\n                      onChange: e => updateField('workoutTime', e.target.value),\n                      className: \"form-input\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1200,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1198,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1186,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `edit-content-${post.id}`,\n                    children: \"Description:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1211,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    id: `edit-content-${post.id}`,\n                    value: editForm.content,\n                    onChange: e => updateField('content', e.target.value),\n                    className: \"form-textarea\",\n                    rows: \"3\",\n                    placeholder: \"Enter workout description...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1212,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1210,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"edit-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary\",\n                    onClick: () => saveWorkout(post.id, loadForumPosts),\n                    disabled: saving,\n                    children: saving ? 'Saving...' : 'Save Changes'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1223,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-secondary\",\n                    onClick: cancelEdit,\n                    disabled: saving,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1230,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1222,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1146,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [post.workout_type && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"workout-meta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"workout-type-badge\",\n                    children: post.workout_type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1243,\n                    columnNumber: 29\n                  }, this), post.workout_date && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"workout-date\",\n                    children: [\"\\uD83D\\uDCC5 \", formatDateOnlyUTC(post.workout_date), post.workout_time && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"workout-time\",\n                      children: [\" \\u2022 \\uD83D\\uDD50 \", post.workout_time]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1248,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1245,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1242,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"workout-content\",\n                  children: post.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1255,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"workout-signup-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"button-group\",\n                  children: [!isWorkoutArchived(post) && post.workout_type !== 'swim' && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `signup-btn ${isUserSignedUp(post.id) ? 'signed-up' : ''} ${isWorkoutFull(post.id) ? 'full' : ''}`,\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleWorkoutSignUp(post.id);\n                    },\n                    disabled: isWorkoutFull(post.id) && !isUserSignedUp(post.id),\n                    children: isUserSignedUp(post.id) ? '✓ Signed Up' : isWorkoutFull(post.id) ? 'Full' : 'Sign Up'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1265,\n                    columnNumber: 27\n                  }, this), isUserSignedUp(post.id) && !isWorkoutArchived(post) && post.workout_type !== 'swim' && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"cancel-btn\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleCancelClick(post.id);\n                    },\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1279,\n                    columnNumber: 27\n                  }, this), post.capacity && isWorkoutFull(post.id) && !isUserSignedUp(post.id) && !isWorkoutArchived(post) && post.workout_type !== 'swim' && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `waitlist-btn ${isUserOnWaitlist(post.id) ? 'on-waitlist' : ''}`,\n                    onClick: e => {\n                      e.stopPropagation();\n                      isUserOnWaitlist(post.id) ? handleWaitlistLeave(post.id) : handleWaitlistJoin(post.id);\n                    },\n                    children: isUserOnWaitlist(post.id) ? 'Leave Waitlist' : 'Join Waitlist'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1292,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1263,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"signup-count\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"signup-main\",\n                    children: post.capacity ? `${((_workoutSignups$post$ = workoutSignups[post.id]) === null || _workoutSignups$post$ === void 0 ? void 0 : _workoutSignups$post$.length) || 0}/${post.capacity} signed up` : `${((_workoutSignups$post$2 = workoutSignups[post.id]) === null || _workoutSignups$post$2 === void 0 ? void 0 : _workoutSignups$post$2.length) || 0} signed up`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1306,\n                    columnNumber: 25\n                  }, this), post.capacity && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"signup-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `capacity-status ${isWorkoutFull(post.id) ? 'full' : 'available'}`,\n                      children: isWorkoutFull(post.id) ? 'Full' : 'Available'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1314,\n                      columnNumber: 29\n                    }, this), post.capacity && ((_workoutWaitlists$pos = workoutWaitlists[post.id]) === null || _workoutWaitlists$pos === void 0 ? void 0 : _workoutWaitlists$pos.length) > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"waitlist-count\",\n                      children: [workoutWaitlists[post.id].length, \" on waitlist\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1318,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1313,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1305,\n                  columnNumber: 23\n                }, this), post.capacity && isWorkoutFull(post.id) && isUserOnWaitlist(post.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"waitlist-position\",\n                  children: `You're ${formatOrdinal(getWaitlistPosition(post.id))} on the waitlist`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1328,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1262,\n                columnNumber: 21\n              }, this)]\n            }, post.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1077,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1075,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1013,\n        columnNumber: 11\n      }, this), activeTab === 'events' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"events-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Event Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1345,\n            columnNumber: 15\n          }, this), isExec(currentUser) && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-post-btn\",\n            onClick: () => setShowEventForm(true),\n            children: \"+ New Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1347,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1344,\n          columnNumber: 13\n        }, this), eventPosts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-posts\",\n          children: \"No event posts yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1357,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"posts-list\",\n          children: eventPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-card event-post\",\n            onClick: () => window.location.href = `/event/${post.id}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-header\",\n              children: editingEvent === post.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"event-edit-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `edit-event-title-${post.id}`,\n                    children: \"Title:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1366,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: `edit-event-title-${post.id}`,\n                    type: \"text\",\n                    value: eventEditForm.title,\n                    onChange: e => updateEventField('title', e.target.value),\n                    className: \"form-input\",\n                    placeholder: \"Enter event title...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1367,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1365,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `edit-event-date-${post.id}`,\n                    children: \"Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1378,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: `edit-event-date-${post.id}`,\n                    type: \"date\",\n                    value: eventEditForm.date,\n                    onChange: e => updateEventField('date', e.target.value),\n                    className: \"form-input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1379,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1377,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `edit-event-content-${post.id}`,\n                    children: \"Details:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1389,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    id: `edit-event-content-${post.id}`,\n                    value: eventEditForm.content,\n                    onChange: e => updateEventField('content', e.target.value),\n                    className: \"form-textarea\",\n                    rows: \"3\",\n                    placeholder: \"Enter event details...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1390,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1388,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"edit-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      saveEvent(post.id);\n                    },\n                    disabled: savingEvent,\n                    children: savingEvent ? 'Saving...' : 'Save Changes'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1401,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-secondary\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      cancelEventEdit();\n                    },\n                    disabled: savingEvent,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1408,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1400,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1364,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [post.title && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"event-title\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: post.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1421,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1420,\n                  columnNumber: 29\n                }, this), (currentUser.id === post.user_id || currentUser.role === 'exec' || currentUser.role === 'administrator') && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"workout-actions-admin\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"edit-btn\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      startEventEdit(post);\n                    },\n                    disabled: editingEvent === post.id,\n                    children: \"\\u270F\\uFE0F Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1430,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-btn\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleDeleteEvent(post.id);\n                    },\n                    disabled: editingEvent === post.id,\n                    children: \"\\uD83D\\uDDD1\\uFE0F Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1437,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1429,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1362,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-author\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"author-info\",\n                children: [(() => {\n                  const {\n                    normalizeProfileImageUrl\n                  } = require('../utils/imageUtils');\n                  const url = normalizeProfileImageUrl(post.authorProfilePictureUrl);\n                  return url ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: url,\n                    alt: \"Profile\",\n                    className: \"author-avatar\",\n                    onError: e => {\n                      e.target.src = '/images/default_profile.png';\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1456,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/images/default_profile.png\",\n                    alt: \"Profile\",\n                    className: \"author-avatar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1465,\n                    columnNumber: 29\n                  }, this);\n                })(), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"author-name\",\n                  children: [\"Posted by \", post.author_name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1472,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1451,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1450,\n              columnNumber: 21\n            }, this), post.event_date && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-meta\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"event-date\",\n                children: (() => {\n                  try {\n                    const base = String(post.event_date).split('T')[0];\n                    const [y, m, d] = base.split('-').map(Number);\n                    const dt = new Date(Date.UTC(y, m - 1, d));\n                    return `📅 ${dt.toLocaleDateString(undefined, {\n                      timeZone: 'UTC'\n                    })}`;\n                  } catch {\n                    return `📅 ${post.event_date}`;\n                  }\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1478,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1477,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-footer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rsvp-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `rsvp-btn going ${getUserRsvpStatus(post.id) === 'going' ? 'active' : ''}`,\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleEventRsvp(post.id, 'going');\n                  },\n                  children: getUserRsvpStatus(post.id) === 'going' ? '✓ Going' : 'Going'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1495,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `rsvp-btn maybe ${getUserRsvpStatus(post.id) === 'maybe' ? 'active' : ''}`,\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleEventRsvp(post.id, 'maybe');\n                  },\n                  children: getUserRsvpStatus(post.id) === 'maybe' ? '✓ Maybe' : 'Maybe'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1504,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `rsvp-btn not-going ${getUserRsvpStatus(post.id) === 'not_going' ? 'active' : ''}`,\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleEventRsvp(post.id, 'not_going');\n                  },\n                  children: getUserRsvpStatus(post.id) === 'not_going' ? '✓ Not Going' : 'Not Going'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1513,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1494,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1493,\n              columnNumber: 21\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1361,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1359,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1343,\n        columnNumber: 11\n      }, this), showPromotionMessage && promotedWorkout && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"promotion-message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"promotion-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83C\\uDF89 Congratulations!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1535,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You've been promoted from the waitlist for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: promotedWorkout.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1536,\n              columnNumber: 61\n            }, this), \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1536,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Check your email for details. You're now officially signed up for this workout.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1537,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"promotion-close-btn\",\n            onClick: () => setShowPromotionMessage(false),\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1538,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1534,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1533,\n        columnNumber: 11\n      }, this), showCancelModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal cancel-modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Cancel Workout Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1552,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cancel-warning\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u26A0\\uFE0F \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Important:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1554,\n                columnNumber: 23\n              }, this), \" If you cancel less than 12 hours in advance, it will count as an absence.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1554,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Your absences are recorded and once you have three, you will be suspended from signing up for a week.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1555,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"This is to keep it fair for all members!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1556,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1553,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-secondary\",\n              onClick: handleCancelCancel,\n              children: \"Keep Booking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1559,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-danger\",\n              onClick: handleCancelConfirm,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1562,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1558,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1551,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1550,\n        columnNumber: 11\n      }, this), showWorkoutForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create New Workout Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1574,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmitWorkout,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Workout Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1577,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: workoutForm.title,\n                onChange: e => setWorkoutForm({\n                  ...workoutForm,\n                  title: e.target.value\n                }),\n                placeholder: \"e.g., Tuesday Morning Swim, Weekend Long Run\",\n                maxLength: \"100\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1578,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1576,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Workout Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1589,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: workoutForm.type,\n                onChange: e => setWorkoutForm({\n                  ...workoutForm,\n                  type: e.target.value\n                }),\n                required: true,\n                children: getAllowedWorkoutTypes().map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1596,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1590,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1588,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Workout Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1604,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: workoutForm.date,\n                onChange: e => setWorkoutForm({\n                  ...workoutForm,\n                  date: e.target.value\n                }),\n                min: new Date().toISOString().split('T')[0],\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1605,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1603,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Workout Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1615,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: workoutForm.time,\n                onChange: e => setWorkoutForm({\n                  ...workoutForm,\n                  time: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1616,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1614,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Additional Details:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1625,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: workoutForm.content,\n                onChange: e => setWorkoutForm({\n                  ...workoutForm,\n                  content: e.target.value\n                }),\n                placeholder: \"Describe the workout, time, location, requirements, what to bring...\",\n                rows: \"4\",\n                maxLength: \"500\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1626,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"char-count\",\n                children: [workoutForm.content.length, \"/500\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1634,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1624,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Capacity (Optional):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1638,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: workoutForm.capacity,\n                onChange: e => setWorkoutForm({\n                  ...workoutForm,\n                  capacity: e.target.value\n                }),\n                placeholder: \"Leave empty for unlimited spots\",\n                min: \"1\",\n                max: \"100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1639,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Maximum number of people who can sign up. Leave empty for unlimited spots.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1647,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1637,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: \"Post Workout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1651,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                onClick: () => setShowWorkoutForm(false),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1652,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1650,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1575,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1573,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1572,\n        columnNumber: 11\n      }, this), showEventForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create New Event Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1663,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmitEvent,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Event Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1666,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: eventForm.title,\n                onChange: e => setEventForm({\n                  ...eventForm,\n                  title: e.target.value\n                }),\n                placeholder: \"e.g., Club Social Night, Race Watch Party\",\n                maxLength: \"100\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1667,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1665,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Event Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1678,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: eventForm.date,\n                onChange: e => setEventForm({\n                  ...eventForm,\n                  date: e.target.value\n                }),\n                min: new Date().toISOString().split('T')[0],\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1679,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1677,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Event Details:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1689,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: eventForm.content,\n                onChange: e => setEventForm({\n                  ...eventForm,\n                  content: e.target.value\n                }),\n                placeholder: \"Describe the event, time, location, what to bring, RSVP details...\",\n                rows: \"4\",\n                maxLength: \"500\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1690,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"char-count\",\n                children: [eventForm.content.length, \"/500\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1698,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1688,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: \"Post Event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1702,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                onClick: () => setShowEventForm(false),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1703,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1701,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1664,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1662,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1661,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 990,\n    columnNumber: 5\n  }, this);\n};\n_s(Forum, \"l4t5SV4Hw2g96pIerRY5Sce6WkY=\", false, function () {\n  return [useAuth, useNavigate, useWorkoutEdit];\n});\n_c = Forum;\nexport default Forum;\nvar _c;\n$RefreshReg$(_c, \"Forum\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","useNavigate","useWorkoutEdit","jsxDEV","_jsxDEV","Fragment","_Fragment","Forum","_s","currentUser","isMember","isExec","isCoach","getUserRole","navigate","activeTab","setActiveTab","workoutPosts","setWorkoutPosts","eventPosts","setEventPosts","newWorkout","setNewWorkout","newEvent","setNewEvent","loading","setLoading","showWorkoutForm","setShowWorkoutForm","showEventForm","setShowEventForm","workoutFilter","setWorkoutFilter","timeFilter","setTimeFilter","workoutForm","setWorkoutForm","title","type","date","time","content","capacity","eventForm","setEventForm","editingEvent","setEditingEvent","eventEditForm","setEventEditForm","savingEvent","setSavingEvent","workoutSignups","setWorkoutSignups","workoutWaitlists","setWorkoutWaitlists","eventRsvps","setEventRsvps","showCancelModal","setShowCancelModal","workoutToCancel","setWorkoutToCancel","showPromotionMessage","setShowPromotionMessage","promotedWorkout","setPromotedWorkout","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","isWorkoutTypeAllowed","workoutType","console","log","sport","isAllowed","includes","getAllowedWorkoutTypes","value","label","editingWorkout","editForm","saving","startEdit","cancelEdit","updateField","saveWorkout","loadForumPosts","handleProfileUpdate","event","window","addEventListener","removeEventListener","urlParams","URLSearchParams","location","search","tabParam","get","token","localStorage","getItem","error","workoutResponse","fetch","headers","ok","workoutData","json","posts","validPosts","filter","post","id","loadWorkoutSignups","loadWorkoutWaitlists","eventResponse","eventData","loadEventRsvps","workouts","signupsData","workout","signupsResponse","data","signups","Object","keys","map","key","_signupsData$key","workoutId","signupCount","length","waitlistData","waitlistResponse","waitlist","events","rsvpsData","rsvpsResponse","rsvps","startEventEdit","eventPost","event_date","String","split","cancelEventEdit","updateEventField","field","prev","saveEvent","eventId","Error","body","eventDate","response","method","JSON","stringify","err","catch","alert","message","handleWorkoutSignUp","isCurrentlySignedUp","isUserSignedUp","find","w","_workoutSignups$worko","currentSignups","result","some","signup","user_id","isWorkoutFull","_workoutSignups$worko2","isWorkoutArchived","workout_date","workoutDate","Date","isNaN","getTime","today","workoutDateStr","toISOString","todayStr","_","isUserOnWaitlist","_workoutWaitlists$wor","getWaitlistPosition","list","idx","findIndex","formatOrdinal","n","s","v","handleEventRsvp","status","currentRsvps","filteredRsvps","r","newRsvp","now","user_name","name","signed_up_at","getUserRsvpStatus","userRsvp","rsvp","handleWaitlistJoin","handleWaitlistLeave","handleCancelClick","handleCancelConfirm","handleCancelCancel","checkForWaitlistPromotion","_workoutWaitlists$wor2","_workoutSignups$worko3","wasOnWaitlist","isNowSignedUp","setTimeout","handleSubmitWorkout","e","preventDefault","trim","selectedDate","setHours","workoutTime","parseInt","newPostData","handleSubmitEvent","handleLike","postId","handleDeleteWorkout","confirm","handleDeleteEvent","parseDateOnlyUTC","dateStr","base","parts","y","m","d","Number","UTC","formatDateOnlyUTC","toLocaleDateString","undefined","timeZone","isPast","setUTCHours","getFilteredWorkouts","bySport","workout_type","byTime","past","sort","a","b","da","db","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","background","border","color","padding","borderRadius","lineHeight","margin","href","fontSize","opacity","onClick","_workoutSignups$post$","_workoutSignups$post$2","_workoutWaitlists$pos","role","stopPropagation","disabled","normalizeProfileImageUrl","require","url","authorProfilePictureUrl","src","alt","onError","target","author_name","htmlFor","onChange","placeholder","min","rows","workout_time","dt","onSubmit","maxLength","required","option","max","_c","$RefreshReg$"],"sources":["/Users/jadeclement/Documents/Developer/uofttri/src/components/Forum.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { useWorkoutEdit } from '../hooks/useWorkoutEdit';\nimport './Forum.css';\n\nconst Forum = () => {\n  const { currentUser, isMember, isExec, isCoach, getUserRole } = useAuth();\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState('workouts');\n  const [workoutPosts, setWorkoutPosts] = useState([]);\n  const [eventPosts, setEventPosts] = useState([]);\n  const [newWorkout, setNewWorkout] = useState('');\n  const [newEvent, setNewEvent] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [showWorkoutForm, setShowWorkoutForm] = useState(false);\n  const [showEventForm, setShowEventForm] = useState(false);\n  const [workoutFilter, setWorkoutFilter] = useState('all');\n  const [timeFilter, setTimeFilter] = useState('upcoming'); // 'upcoming' | 'past'\n  const [workoutForm, setWorkoutForm] = useState({\n    title: '',\n    type: 'spin',\n    date: '',\n    time: '',\n    content: '',\n    capacity: ''\n  });\n  const [eventForm, setEventForm] = useState({\n    title: '',\n    date: '',\n    content: ''\n  });\n  // Inline edit state for events (admin/exec)\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [eventEditForm, setEventEditForm] = useState({\n    title: '',\n    date: '',\n    content: ''\n  });\n  const [savingEvent, setSavingEvent] = useState(false);\n  const [workoutSignups, setWorkoutSignups] = useState({});\n  const [workoutWaitlists, setWorkoutWaitlists] = useState({});\n  const [eventRsvps, setEventRsvps] = useState({});\n  const [showCancelModal, setShowCancelModal] = useState(false);\n  const [workoutToCancel, setWorkoutToCancel] = useState(null);\n  const [showPromotionMessage, setShowPromotionMessage] = useState(false);\n  const [promotedWorkout, setPromotedWorkout] = useState(null);\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api';\n  \n  // Function to check if a workout type is allowed for the user's sport\n  const isWorkoutTypeAllowed = (workoutType) => {\n    console.log('🔍 isWorkoutTypeAllowed debug:', {\n      currentUser: currentUser,\n      sport: currentUser?.sport,\n      workoutType: workoutType\n    });\n    \n    if (!currentUser || !currentUser.sport) {\n      console.log('🔍 No sport preference, showing all workouts');\n      return true; // Show all if no sport preference\n    }\n    \n    const sport = currentUser.sport;\n    const isAllowed = (() => {\n      switch (sport) {\n        case 'run_only':\n          return workoutType === 'run';\n        case 'duathlon':\n          return ['run', 'outdoor-ride', 'brick'].includes(workoutType);\n        case 'triathlon':\n          return ['run', 'outdoor-ride', 'brick', 'swim', 'spin'].includes(workoutType);\n        default:\n          return true; // Show all for unknown sports\n      }\n    })();\n    \n    console.log('🔍 Sport filtering result:', { sport, workoutType, isAllowed });\n    return isAllowed;\n  };\n\n  // Function to get allowed workout types for the current user's sport\n  const getAllowedWorkoutTypes = () => {\n    if (!currentUser || !currentUser.sport) {\n      // Show all types if no sport preference\n      return [\n        { value: 'spin', label: 'Spin' },\n        { value: 'outdoor-ride', label: 'Outdoor Ride' },\n        { value: 'run', label: 'Run' },\n        { value: 'swim', label: 'Swim' },\n        { value: 'brick', label: 'Brick (Bike + Run)' },\n        { value: 'other', label: 'Other' }\n      ];\n    }\n    \n    const sport = currentUser.sport;\n    \n    switch (sport) {\n      case 'run_only':\n        return [\n          { value: 'run', label: 'Run' },\n          { value: 'other', label: 'Other' }\n        ];\n      case 'duathlon':\n        return [\n          { value: 'run', label: 'Run' },\n          { value: 'outdoor-ride', label: 'Outdoor Ride' },\n          { value: 'brick', label: 'Brick (Bike + Run)' },\n          { value: 'other', label: 'Other' }\n        ];\n      case 'triathlon':\n        return [\n          { value: 'run', label: 'Run' },\n          { value: 'outdoor-ride', label: 'Outdoor Ride' },\n          { value: 'brick', label: 'Brick (Bike + Run)' },\n          { value: 'swim', label: 'Swim' },\n          { value: 'spin', label: 'Spin' },\n          { value: 'other', label: 'Other' }\n        ];\n      default:\n        return [\n          { value: 'spin', label: 'Spin' },\n          { value: 'outdoor-ride', label: 'Outdoor Ride' },\n          { value: 'run', label: 'Run' },\n          { value: 'swim', label: 'Swim' },\n          { value: 'brick', label: 'Brick (Bike + Run)' },\n          { value: 'other', label: 'Other' }\n        ];\n    }\n  };\n  \n  const { \n    editingWorkout, \n    editForm, \n    saving, \n    startEdit, \n    cancelEdit, \n    updateField, \n    saveWorkout \n  } = useWorkoutEdit(API_BASE_URL);\n\n  useEffect(() => {\n    if (!currentUser) {\n      navigate('/login');\n      return;\n    }\n    \n    // If user is at least member, load posts. If pending, we'll render a gate message.\n    if (isMember(currentUser)) {\n      loadForumPosts();\n    } else {\n      // Ensure we don't stay stuck on loading for pending users\n      setLoading(false);\n    }\n  }, [currentUser, navigate, isMember]);\n\n  // Listen for profile updates to refresh profile pictures\n  useEffect(() => {\n    const handleProfileUpdate = (event) => {\n      console.log('🔄 Profile updated event received in Forum, refreshing posts...');\n      loadForumPosts();\n    };\n\n    window.addEventListener('profileUpdated', handleProfileUpdate);\n    \n    return () => {\n      window.removeEventListener('profileUpdated', handleProfileUpdate);\n    };\n  }, []);\n\n  // Check for tab query parameter and set active tab accordingly\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const tabParam = urlParams.get('tab');\n    \n    if (tabParam === 'events') {\n      setActiveTab('events');\n    } else if (tabParam === 'workouts') {\n      setActiveTab('workouts');\n    }\n    // If no tab param or invalid value, default to 'workouts' (existing behavior)\n  }, []);\n\n  const loadForumPosts = async () => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n\n      // Load workout posts\n      const workoutResponse = await fetch(`${API_BASE_URL}/forum/posts?type=workout`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (workoutResponse.ok) {\n        const workoutData = await workoutResponse.json();\n        console.log('🔍 Workout data received:', workoutData);\n        \n        // Ensure we have valid posts data\n        const posts = workoutData.posts || workoutData || [];\n        console.log('🔍 Posts to set:', posts);\n        \n        // Filter out any invalid posts\n        const validPosts = posts.filter(post => post && post.id && typeof post === 'object');\n        console.log('🔍 Valid posts:', validPosts);\n        \n        \n        setWorkoutPosts(validPosts);\n        \n        // Load signup data for all workouts\n        await loadWorkoutSignups(validPosts);\n        // Load waitlist data for all workouts\n        await loadWorkoutWaitlists(validPosts);\n      }\n\n      // Load event posts\n      const eventResponse = await fetch(`${API_BASE_URL}/forum/posts?type=event`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (eventResponse.ok) {\n        const eventData = await eventResponse.json();\n        console.log('🔍 Event data received:', eventData);\n        \n        // Ensure we have valid posts data\n        const posts = eventData.posts || eventData || [];\n        console.log('🔍 Event posts to set:', posts);\n        \n        // Filter out any invalid posts\n        const validPosts = posts.filter(post => post && post.id && typeof post === 'object');\n        console.log('🔍 Valid event posts:', validPosts);\n        \n        setEventPosts(validPosts);\n        \n        // Load RSVP data for all events\n        await loadEventRsvps(validPosts);\n      }\n    } catch (error) {\n      console.error('Error loading forum posts:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadWorkoutSignups = async (workouts) => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) return;\n\n      const signupsData = {};\n      \n      for (const workout of workouts) {\n        const signupsResponse = await fetch(`${API_BASE_URL}/forum/workouts/${workout.id}/signups`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        \n        if (signupsResponse.ok) {\n          const data = await signupsResponse.json();\n          signupsData[workout.id] = data.signups || [];\n          console.log(`🔍 Workout ${workout.id} signups:`, data.signups || []);\n        }\n      }\n      \n      setWorkoutSignups(signupsData);\n      console.log('📊 All workout signups loaded:', signupsData);\n      console.log('🔍 Current workoutSignups state structure:', Object.keys(signupsData).map(key => ({\n        workoutId: key,\n        signupCount: signupsData[key]?.length || 0,\n        signups: signupsData[key] || []\n      })));\n    } catch (error) {\n      console.error('Error loading workout signups:', error);\n    }\n  };\n\n  const loadWorkoutWaitlists = async (workouts) => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) return;\n\n      const waitlistData = {};\n      \n      for (const workout of workouts) {\n        const waitlistResponse = await fetch(`${API_BASE_URL}/forum/workouts/${workout.id}/waitlist`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        if (waitlistResponse.ok) {\n          const data = await waitlistResponse.json();\n          waitlistData[workout.id] = data.waitlist || [];\n        }\n      }\n      \n      setWorkoutWaitlists(waitlistData);\n    } catch (error) {\n      console.error('Error loading workout waitlists:', error);\n    }\n  };\n\n  const loadEventRsvps = async (events) => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) return;\n\n      const rsvpsData = {};\n      \n      for (const event of events) {\n        const rsvpsResponse = await fetch(`${API_BASE_URL}/forum/events/${event.id}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        \n        if (rsvpsResponse.ok) {\n          const data = await rsvpsResponse.json();\n          rsvpsData[event.id] = data.rsvps || [];\n          console.log(`🔍 Event ${event.id} RSVPs:`, data.rsvps || []);\n        }\n      }\n      \n      setEventRsvps(rsvpsData);\n      console.log('📊 All event RSVPs loaded:', rsvpsData);\n    } catch (error) {\n      console.error('Error loading event RSVPs:', error);\n    }\n  };\n\n  // Event edit helpers\n  const startEventEdit = (eventPost) => {\n    setEditingEvent(eventPost.id);\n    setEventEditForm({\n      title: eventPost.title || '',\n      date: eventPost.event_date ? String(eventPost.event_date).split('T')[0] : '',\n      content: eventPost.content || ''\n    });\n  };\n\n  const cancelEventEdit = () => {\n    setEditingEvent(null);\n    setEventEditForm({ title: '', date: '', content: '' });\n  };\n\n  const updateEventField = (field, value) => {\n    setEventEditForm(prev => ({ ...prev, [field]: value }));\n  };\n\n  const saveEvent = async (eventId) => {\n    try {\n      setSavingEvent(true);\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) throw new Error('No authentication token found');\n\n      const body = {\n        title: eventEditForm.title,\n        eventDate: eventEditForm.date,\n        content: eventEditForm.content\n      };\n\n      const response = await fetch(`${API_BASE_URL}/forum/posts/${eventId}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n\n      if (!response.ok) {\n        const err = await response.json().catch(() => ({}));\n        throw new Error(err.error || 'Failed to update event');\n      }\n\n      setSavingEvent(false);\n      setEditingEvent(null);\n      await loadForumPosts();\n    } catch (error) {\n      console.error('Error updating event:', error);\n      setSavingEvent(false);\n      alert(error.message || 'Error updating event');\n    }\n  };\n\n  const handleWorkoutSignUp = async (workoutId) => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n\n      // Check if user is already signed up\n      const isCurrentlySignedUp = isUserSignedUp(workoutId);\n      \n      if (!isCurrentlySignedUp) {\n        // Check capacity limit before allowing sign-up\n        const workout = workoutPosts.find(w => w.id === workoutId);\n        if (workout && workout.capacity) {\n          const currentSignups = workoutSignups[workoutId]?.length || 0;\n          if (currentSignups >= workout.capacity) {\n            alert(`Sorry, this workout is full! Maximum capacity: ${workout.capacity} people.`);\n            return;\n          }\n        }\n      }\n\n      const response = await fetch(`${API_BASE_URL}/forum/workouts/${workoutId}/signup`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        \n        // Reload signup data from backend to ensure accuracy\n        await loadWorkoutSignups(workoutPosts);\n        \n        // Also reload waitlist data in case someone was promoted\n        await loadWorkoutWaitlists(workoutPosts);\n      } else {\n        const error = await response.json();\n        console.error('Error updating signup:', error.error);\n      }\n    } catch (error) {\n      console.error('Error updating signup:', error);\n    }\n  };\n\n  const isUserSignedUp = (workoutId) => {\n    if (!workoutId) return false;\n    const signups = workoutSignups[workoutId] || [];\n    return signups.some(signup => signup && signup.user_id === currentUser.id);\n  };\n\n  const isWorkoutFull = (workoutId) => {\n    if (!workoutId) return false;\n    const workout = workoutPosts.find(w => w && w.id === workoutId);\n    if (!workout || !workout.capacity) return false;\n    const currentSignups = workoutSignups[workoutId]?.length || 0;\n    return currentSignups >= workout.capacity;\n  };\n\n  const isWorkoutArchived = (post) => {\n    if (!post || !post.workout_date) return false;\n    try {\n      // Parse the workout date and get just the date part (YYYY-MM-DD)\n      const workoutDate = new Date(post.workout_date);\n      if (isNaN(workoutDate.getTime())) return false;\n      \n      // Get today's date in the same timezone as the workout date\n      const today = new Date();\n      \n      // Compare dates by converting both to YYYY-MM-DD format\n      const workoutDateStr = workoutDate.toISOString().split('T')[0];\n      const todayStr = today.toISOString().split('T')[0];\n      \n      return workoutDateStr < todayStr;\n    } catch (_) {\n      return false;\n    }\n  };\n\n  const isUserOnWaitlist = (workoutId) => {\n    if (!workoutId) return false;\n    return workoutWaitlists[workoutId]?.some(waitlist => waitlist && waitlist.user_id === currentUser.id) || false;\n  };\n\n  // Returns 1-based position or null if not on waitlist\n  const getWaitlistPosition = (workoutId) => {\n    if (!workoutId) return null;\n    const list = workoutWaitlists[workoutId] || [];\n    const idx = list.findIndex(w => w && w.user_id === currentUser.id);\n    return idx === -1 ? null : idx + 1;\n  };\n\n  const formatOrdinal = (n) => {\n    if (n == null) return '';\n    const s = [\"th\",\"st\",\"nd\",\"rd\"], v = n % 100;\n    return n + (s[(v-20)%10] || s[v] || s[0]);\n  };\n\n  // Event RSVP functions\n  const handleEventRsvp = async (eventId, status) => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n\n      // Call backend API to save RSVP\n      const response = await fetch(`${API_BASE_URL}/forum/events/${eventId}/rsvp`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ status })\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        \n        // Update local state based on backend response\n        const currentRsvps = eventRsvps[eventId] || [];\n        \n        if (result.status === null) {\n          // RSVP was removed\n          const filteredRsvps = currentRsvps.filter(r => r.user_id !== currentUser.id);\n          setEventRsvps(prev => ({\n            ...prev,\n            [eventId]: filteredRsvps\n          }));\n        } else {\n          // RSVP was added/updated\n          const filteredRsvps = currentRsvps.filter(r => r.user_id !== currentUser.id);\n          const newRsvp = {\n            id: Date.now(),\n            user_id: currentUser.id,\n            user_name: currentUser.name,\n            status: result.status,\n            signed_up_at: new Date().toISOString().split('T')[0]\n          };\n          setEventRsvps(prev => ({\n            ...prev,\n            [eventId]: [...filteredRsvps, newRsvp]\n          }));\n        }\n        \n        console.log('Event RSVP updated:', result);\n      } else {\n        const error = await response.json();\n        console.error('Error updating RSVP:', error.error);\n        alert(error.error || 'Error updating RSVP');\n      }\n    } catch (error) {\n      console.error('Error updating event RSVP:', error);\n      alert('Error updating RSVP');\n    }\n  };\n\n  const getUserRsvpStatus = (eventId) => {\n    if (!eventId) return null;\n    const rsvps = eventRsvps[eventId] || [];\n    const userRsvp = rsvps.find(rsvp => rsvp.user_id === currentUser.id);\n    return userRsvp ? userRsvp.status : null;\n  };\n\n  const handleWaitlistJoin = async (workoutId) => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n\n      const response = await fetch(`${API_BASE_URL}/forum/workouts/${workoutId}/waitlist`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        // Refresh waitlist data\n        await loadWorkoutWaitlists(workoutPosts);\n      } else {\n        const error = await response.json();\n        alert(error.error || 'Failed to join waitlist');\n      }\n    } catch (error) {\n      console.error('Error joining waitlist:', error);\n      alert('Failed to join waitlist');\n    }\n  };\n\n  const handleWaitlistLeave = async (workoutId) => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n\n      const response = await fetch(`${API_BASE_URL}/forum/workouts/${workoutId}/waitlist`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        // Refresh waitlist data\n        await loadWorkoutWaitlists(workoutPosts);\n      } else {\n        const error = await response.json();\n        alert(error.error || 'Failed to leave waitlist');\n      }\n    } catch (error) {\n      console.error('Error leaving waitlist:', error);\n      alert('Failed to leave waitlist');\n    }\n  };\n\n  const handleCancelClick = (workoutId) => {\n    setWorkoutToCancel(workoutId);\n    setShowCancelModal(true);\n  };\n\n  const handleCancelConfirm = async () => {\n    if (!workoutToCancel) return;\n    \n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n\n      const response = await fetch(`${API_BASE_URL}/forum/workouts/${workoutToCancel}/signup`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        // Refresh both signup and waitlist data since someone might have been promoted\n        await loadWorkoutSignups(workoutPosts);\n        await loadWorkoutWaitlists(workoutPosts);\n        setShowCancelModal(false);\n        setWorkoutToCancel(null);\n      } else {\n        const error = await response.json();\n        alert(error.error || 'Failed to cancel signup');\n      }\n    } catch (error) {\n      console.error('Error canceling signup:', error);\n      alert('Failed to cancel signup');\n    }\n  };\n\n  const handleCancelCancel = () => {\n    setShowCancelModal(false);\n    setWorkoutToCancel(null);\n  };\n\n  // Check if user was promoted from waitlist after data refresh\n  const checkForWaitlistPromotion = (workoutId) => {\n            const wasOnWaitlist = workoutWaitlists[workoutId]?.some(w => w.user_id === currentUser.id);\n        const isNowSignedUp = workoutSignups[workoutId]?.some(s => s.user_id === currentUser.id);\n    \n    if (wasOnWaitlist && isNowSignedUp) {\n      // User was promoted from waitlist!\n      const workout = workoutPosts.find(w => w.id === workoutId);\n      setPromotedWorkout(workout);\n      setShowPromotionMessage(true);\n      \n      // Auto-hide after 10 seconds\n      setTimeout(() => {\n        setShowPromotionMessage(false);\n        setPromotedWorkout(null);\n      }, 10000);\n    }\n  };\n\n  const handleSubmitWorkout = async (e) => {\n    e.preventDefault();\n    if (!workoutForm.title.trim() || !workoutForm.date || !workoutForm.time || !workoutForm.content.trim()) return;\n\n    // Check if the selected date is in the future\n    const selectedDate = new Date(workoutForm.date);\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); // Reset time to start of day for accurate comparison\n    \n    if (selectedDate <= today) {\n      alert('Please select a future date for your workout.');\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n\n      const response = await fetch(`${API_BASE_URL}/forum/posts`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: workoutForm.title.trim(),\n          workoutType: workoutForm.type,\n          workoutDate: workoutForm.date,\n          workoutTime: workoutForm.time,\n          content: workoutForm.content.trim(),\n          capacity: workoutForm.capacity ? parseInt(workoutForm.capacity) : null,\n          type: 'workout'\n        })\n      });\n\n      if (response.ok) {\n        const newPostData = await response.json();\n        console.log('🔍 New workout data received:', newPostData);\n        \n        // Check if the response has the expected structure\n        if (newPostData.post) {\n          setWorkoutPosts([newPostData.post, ...workoutPosts]);\n          console.log('✅ Workout added to state');\n        } else if (newPostData.id) {\n          // If the response is the post directly\n          setWorkoutPosts([newPostData, ...workoutPosts]);\n          console.log('✅ Workout added to state (direct response)');\n        } else {\n          console.error('❌ Unexpected response structure:', newPostData);\n          // Fallback: reload all posts\n          console.log('🔄 Reloading all posts as fallback...');\n          loadForumPosts();\n        }\n        \n        setWorkoutForm({\n          title: '',\n          type: 'spin',\n          date: '',\n          time: '',\n          content: '',\n          capacity: ''\n        });\n        setShowWorkoutForm(false);\n      } else {\n        console.error('Failed to create workout post');\n      }\n    } catch (error) {\n        console.error('Error creating workout post:', error);\n    }\n  };\n\n  const handleSubmitEvent = async (e) => {\n    e.preventDefault();\n    if (!eventForm.title.trim() || !eventForm.date || !eventForm.content.trim()) return;\n\n    // Check if the selected date is in the future\n    const selectedDate = new Date(eventForm.date);\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); // Reset time to start of day for accurate comparison\n    \n    if (selectedDate <= today) {\n      alert('Please select a future date for your event.');\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n\n      const response = await fetch(`${API_BASE_URL}/forum/posts`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: eventForm.title.trim(),\n          eventDate: eventForm.date,\n          content: eventForm.content.trim(),\n          type: 'event'\n        })\n      });\n\n      if (response.ok) {\n        const newPostData = await response.json();\n        setEventPosts([newPostData.post, ...eventPosts]);\n        setEventForm({\n          title: '',\n          date: '',\n          content: ''\n        });\n        setShowEventForm(false);\n      } else {\n        console.error('Failed to create event post');\n      }\n    } catch (error) {\n      console.error('Error creating event post:', error);\n    }\n  };\n\n  const handleLike = async (postId) => {\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n\n      const response = await fetch(`${API_BASE_URL}/forum/posts/${postId}/like`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        // Reload posts to get updated like count\n        loadForumPosts();\n      } else {\n        console.error('Failed to like post');\n      }\n    } catch (error) {\n      console.error('Error liking post:', error);\n    }\n  };\n\n  const handleDeleteWorkout = async (postId) => {\n    if (!window.confirm('Are you sure you want to delete this workout post?')) {\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n\n      const response = await fetch(`${API_BASE_URL}/forum/posts/${postId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        loadForumPosts();\n      } else {\n        console.error('Failed to delete workout post');\n      }\n    } catch (error) {\n      console.error('Error deleting workout post:', error);\n    }\n  };\n\n  const handleDeleteEvent = async (postId) => {\n    if (!window.confirm('Are you sure you want to delete this event post?')) {\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        console.error('No authentication token found');\n        return;\n      }\n\n      const response = await fetch(`${API_BASE_URL}/forum/posts/${postId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        loadForumPosts();\n      } else {\n        console.error('Failed to delete event post');\n      }\n    } catch (error) {\n      console.error('Error deleting event post:', error);\n    }\n  };\n\n\n\n  // Date helpers (treat YYYY-MM-DD as UTC to avoid TZ shifting)\n  const parseDateOnlyUTC = (dateStr) => {\n    if (!dateStr) return null;\n    const base = (typeof dateStr === 'string') ? dateStr.split('T')[0] : dateStr;\n    const parts = base.split('-');\n    if (parts.length !== 3) return new Date(dateStr);\n    const [y, m, d] = parts.map(Number);\n    return new Date(Date.UTC(y, m - 1, d));\n  };\n\n  const formatDateOnlyUTC = (dateStr) => {\n    const d = parseDateOnlyUTC(dateStr);\n    if (!d || isNaN(d.getTime())) return '';\n    return d.toLocaleDateString(undefined, { timeZone: 'UTC' });\n  };\n\n  // Helpers for date filtering\n  const isPast = (dateStr) => {\n    try {\n      if (!dateStr) return false;\n      const d = parseDateOnlyUTC(dateStr);\n      if (!d || isNaN(d.getTime())) return false;\n      const today = new Date();\n      today.setUTCHours(0, 0, 0, 0);\n      return d < today;\n    } catch (_) {\n      return false;\n    }\n  };\n\n  // Filter workouts based on selected filters (time + type + sport)\n  const getFilteredWorkouts = () => {\n    // First filter by sport preference\n    const bySport = workoutPosts.filter(post => {\n      return isWorkoutTypeAllowed(post.workout_type);\n    });\n\n    // Then filter by time\n    const byTime = bySport.filter(post => {\n      const past = isPast(post.workout_date);\n      return timeFilter === 'past' ? past : !past;\n    });\n\n    // Sort by actual workout_date, not created_at\n    byTime.sort((a, b) => {\n      const da = a && a.workout_date ? parseDateOnlyUTC(a.workout_date) : new Date(0);\n      const db = b && b.workout_date ? parseDateOnlyUTC(b.workout_date) : new Date(0);\n      return timeFilter === 'past' ? db - da : da - db; // past: newest first, upcoming: soonest first\n    });\n\n    if (workoutFilter === 'all') return byTime;\n\n    return byTime.filter(post => {\n      switch (workoutFilter) {\n        case 'bike':\n          return post.workout_type === 'spin' || post.workout_type === 'outdoor-ride' || post.workout_type === 'brick';\n        case 'swim':\n          return post.workout_type === 'swim';\n        case 'run':\n          return post.workout_type === 'run';\n        default:\n          return true;\n      }\n    });\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  if (!currentUser) {\n    return null;\n  }\n\n  // Gate for pending users: show message instead of forum content\n  if (!isMember(currentUser) && !isCoach(currentUser) && !isExec(currentUser)) {\n    return (\n      <div className=\"forum-container\">\n        <div className=\"container\">\n          <h1 className=\"section-title\">Team Forum</h1>\n          <div className=\"notice-card\" style={{\n            background: '#fff8e1',\n            border: '1px solid #facc15',\n            color: '#92400e',\n            padding: '16px',\n            borderRadius: '8px',\n            lineHeight: 1.6\n          }}>\n            <p style={{margin: 0}}>\n              You don't have access to the forum yet. Please email <a href=\"mailto:info@uoft-tri.club\">info@uoft-tri.club</a> your membership receipt and we will confirm your registration! You will have to log out and then log back in to see this page.\n            </p>\n            <p style={{margin: '12px 0 0 0', fontSize: '14px', opacity: 0.9}}>\n              <strong>Note:</strong> If you were a member on our old website, you'll be automatically approved as a member once you sign up. You will get an email once you get access!\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"forum-container\">\n      <div className=\"container\">\n        <h1 className=\"section-title\">Team Forum</h1>\n        <p className=\"section-subtitle\">Connect with your teammates and discuss training, races, and more!</p>\n        \n        {/* Forum Tabs */}\n        <div className=\"forum-tabs\">\n          <button \n            className={`tab-button ${activeTab === 'workouts' ? 'active' : ''}`}\n            onClick={() => setActiveTab('workouts')}\n          >\n            🏃‍♂️ Workouts\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'events' ? 'active' : ''}`}\n            onClick={() => setActiveTab('events')}\n          >\n            🎉 Events\n          </button>\n        </div>\n\n        {/* Workouts Section */}\n        {activeTab === 'workouts' && (\n          <div className=\"workouts-section\">\n            <div className=\"section-header\">\n              <h2>Workout Posts</h2>\n              {(isExec(currentUser) || isCoach(currentUser)) && (\n                <button \n                  className=\"new-post-btn\"\n                  onClick={() => setShowWorkoutForm(true)}\n                >\n                  + New Workout\n                </button>\n              )}\n            </div>\n\n            {/* Time Filters (row 1) */}\n            <div className=\"workout-filters\">\n              <button \n                className={`filter-btn ${timeFilter === 'upcoming' ? 'active' : ''}`}\n                onClick={() => setTimeFilter('upcoming')}\n              >\n                ⏳ Upcoming\n              </button>\n              <button \n                className={`filter-btn ${timeFilter === 'past' ? 'active' : ''}`}\n                onClick={() => setTimeFilter('past')}\n              >\n                🗂 Past\n              </button>\n            </div>\n\n            {/* Type Filters (row 2) */}\n            <div className=\"workout-filters\">\n              <button \n                className={`filter-btn ${workoutFilter === 'all' ? 'active' : ''}`}\n                onClick={() => setWorkoutFilter('all')}\n              >\n                🏁 All Types\n              </button>\n              <button \n                className={`filter-btn ${workoutFilter === 'bike' ? 'active' : ''}`}\n                onClick={() => setWorkoutFilter('bike')}\n              >\n                🚴‍♂️ Bike (Indoor/Outdoor/Brick)\n              </button>\n              <button \n                className={`filter-btn ${workoutFilter === 'swim' ? 'active' : ''}`}\n                onClick={() => setWorkoutFilter('swim')}\n              >\n                🏊‍♂️ Swim\n              </button>\n              <button \n                className={`filter-btn ${workoutFilter === 'run' ? 'active' : ''}`}\n                onClick={() => setWorkoutFilter('run')}\n              >\n                🏃‍♀️ Run\n              </button>\n            </div>\n\n            {getFilteredWorkouts().length === 0 ? (\n              <p className=\"no-posts\">\n                {workoutPosts.length === 0 ? 'No workout posts yet.' : `No ${workoutFilter === 'all' ? '' : workoutFilter} workouts found.`}\n              </p>\n            ) : (\n              <div className=\"posts-list\">\n                {getFilteredWorkouts().filter(post => post && post.id).map(post => (\n                  <div key={post.id} className=\"post-card workout-post\" onClick={() => window.location.href = `/workout/${post.id}`}>\n                    <div className=\"post-header\">\n                      {post.title ? (\n                        <div className=\"workout-title\">\n                          <h2>\n                            {post.title}\n                          </h2>\n                        </div>\n                      ) : (\n                        <div className=\"workout-title\">\n                          <h2>Untitled Workout</h2>\n                        </div>\n                      )}\n                      \n                      {/* Edit and Delete buttons for workout author, executives, and administrators */}\n                      {(currentUser.id === post.user_id || currentUser.role === 'exec' || currentUser.role === 'administrator') && (\n                        <div className=\"workout-actions-admin\">\n                          <button \n                            className=\"edit-btn\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              startEdit(post);\n                            }}\n                            disabled={editingWorkout === post.id}\n                          >\n                            ✏️ Edit\n                          </button>\n                          <button \n                            className=\"delete-btn\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleDeleteWorkout(post.id);\n                            }}\n                            disabled={editingWorkout === post.id}\n                          >\n                            🗑️ Delete\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                    \n                    <div className=\"workout-author\">\n                      <div className=\"author-info\">\n                        {(() => {\n                          const { normalizeProfileImageUrl } = require('../utils/imageUtils');\n                          const url = normalizeProfileImageUrl(post.authorProfilePictureUrl);\n                          return url ? (\n                            <img \n                              src={url}\n                              alt=\"Profile\" \n                              className=\"author-avatar\"\n                              onError={(e) => {\n                                e.target.src = '/images/default_profile.png';\n                              }}\n                            />\n                          ) : (\n                            <img \n                              src=\"/images/default_profile.png\" \n                              alt=\"Profile\" \n                              className=\"author-avatar\"\n                            />\n                          );\n                        })()}\n                        {/* single image handled above; no extra fallback */}\n                        <span className=\"author-name\">Posted by {post.author_name}</span>\n                      </div>\n                    </div>\n                    \n                    {editingWorkout === post.id ? (\n                      <div className=\"workout-edit-form\">\n                        <div className=\"form-group\">\n                          <label htmlFor={`edit-title-${post.id}`}>Title:</label>\n                          <input\n                            id={`edit-title-${post.id}`}\n                            type=\"text\"\n                            value={editForm.title}\n                            onChange={(e) => updateField('title', e.target.value)}\n                            className=\"form-input\"\n                            placeholder=\"Enter workout title...\"\n                          />\n                        </div>\n                        \n                        <div className=\"form-row\">\n                          <div className=\"form-group\">\n                            <label htmlFor={`edit-type-${post.id}`}>Workout Type:</label>\n                            <input\n                              id={`edit-type-${post.id}`}\n                              type=\"text\"\n                                                          value={editForm.workoutType}\n                            onChange={(e) => updateField('workoutType', e.target.value)}\n                              className=\"form-input\"\n                              placeholder=\"Enter workout type...\"\n                            />\n                          </div>\n                          \n                          <div className=\"form-group\">\n                            <label htmlFor={`edit-capacity-${post.id}`}>Capacity:</label>\n                            <input\n                              id={`edit-capacity-${post.id}`}\n                              type=\"number\"\n                              min=\"1\"\n                                                          value={editForm.capacity}\n                            onChange={(e) => updateField('capacity', e.target.value)}\n                              className=\"form-input\"\n                              placeholder=\"Enter capacity...\"\n                            />\n                          </div>\n                        </div>\n                        \n                        <div className=\"form-row\">\n                          <div className=\"form-group\">\n                            <label htmlFor={`edit-date-${post.id}`}>Date:</label>\n                            <input\n                              id={`edit-date-${post.id}`}\n                              type=\"date\"\n                                                          value={editForm.workoutDate}\n                            onChange={(e) => updateField('workoutDate', e.target.value)}\n                              className=\"form-input\"\n                            />\n                          </div>\n                          \n                          <div className=\"form-group\">\n                            <label htmlFor={`edit-time-${post.id}`}>Time:</label>\n                            <input\n                              id={`edit-time-${post.id}`}\n                              type=\"time\"\n                                                          value={editForm.workoutTime}\n                            onChange={(e) => updateField('workoutTime', e.target.value)}\n                              className=\"form-input\"\n                            />\n                          </div>\n                        </div>\n                        \n                        <div className=\"form-group\">\n                          <label htmlFor={`edit-content-${post.id}`}>Description:</label>\n                          <textarea\n                            id={`edit-content-${post.id}`}\n                            value={editForm.content}\n                            onChange={(e) => updateField('content', e.target.value)}\n                            className=\"form-textarea\"\n                            rows=\"3\"\n                            placeholder=\"Enter workout description...\"\n                          />\n                        </div>\n                        \n                        <div className=\"edit-actions\">\n                          <button \n                            className=\"btn btn-primary\" \n                            onClick={() => saveWorkout(post.id, loadForumPosts)}\n                            disabled={saving}\n                          >\n                            {saving ? 'Saving...' : 'Save Changes'}\n                          </button>\n                          <button \n                            className=\"btn btn-secondary\" \n                            onClick={cancelEdit}\n                            disabled={saving}\n                          >\n                            Cancel\n                          </button>\n                        </div>\n                      </div>\n                    ) : (\n                      <>\n                        {post.workout_type && (\n                          <div className=\"workout-meta\">\n                            <span className=\"workout-type-badge\">{post.workout_type}</span>\n                            {post.workout_date && (\n                              <span className=\"workout-date\">\n                                📅 {formatDateOnlyUTC(post.workout_date)}\n                                {post.workout_time && (\n                                  <span className=\"workout-time\"> • 🕐 {post.workout_time}</span>\n                                )}\n                              </span>\n                            )}\n                          </div>\n                        )}\n\n                        <div className=\"workout-content\">\n                          {post.content}\n                        </div>\n                      </>\n                    )}\n\n                    {/* Sign-up button positioned at bottom right */}\n                    <div className=\"workout-signup-section\">\n                      <div className=\"button-group\">\n                        {!isWorkoutArchived(post) && post.workout_type !== 'swim' && (\n                          <button \n                            className={`signup-btn ${isUserSignedUp(post.id) ? 'signed-up' : ''} ${isWorkoutFull(post.id) ? 'full' : ''}`}\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleWorkoutSignUp(post.id);\n                            }}\n                            disabled={(isWorkoutFull(post.id) && !isUserSignedUp(post.id))}\n                          >\n                            {isUserSignedUp(post.id) ? '✓ Signed Up' : isWorkoutFull(post.id) ? 'Full' : 'Sign Up'}\n                          </button>\n                        )}\n                        \n                        {/* Cancel button for signed-up users */}\n                        {isUserSignedUp(post.id) && !isWorkoutArchived(post) && post.workout_type !== 'swim' && (\n                          <button \n                            className=\"cancel-btn\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleCancelClick(post.id);\n                            }}\n                          >\n                            Cancel\n                          </button>\n                        )}\n                        \n                        {/* Waitlist button for full workouts */}\n                        {post.capacity && isWorkoutFull(post.id) && !isUserSignedUp(post.id) && !isWorkoutArchived(post) && post.workout_type !== 'swim' && (\n                          <button \n                            className={`waitlist-btn ${isUserOnWaitlist(post.id) ? 'on-waitlist' : ''}`}\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              isUserOnWaitlist(post.id) ? handleWaitlistLeave(post.id) : handleWaitlistJoin(post.id);\n                            }}\n                          >\n                            {isUserOnWaitlist(post.id) ? 'Leave Waitlist' : 'Join Waitlist'}\n                          </button>\n                        )}\n                        \n                      </div>\n                      \n                      <div className=\"signup-count\">\n                        <div className=\"signup-main\">\n                          {post.capacity \n                            ? `${workoutSignups[post.id]?.length || 0}/${post.capacity} signed up`\n                            : `${workoutSignups[post.id]?.length || 0} signed up`\n                          }\n                        </div>\n                        {post.capacity && (\n                          <div className=\"signup-details\">\n                            <span className={`capacity-status ${isWorkoutFull(post.id) ? 'full' : 'available'}`}>\n                              {isWorkoutFull(post.id) ? 'Full' : 'Available'}\n                            </span>\n                            {post.capacity && workoutWaitlists[post.id]?.length > 0 && (\n                              <span className=\"waitlist-count\">\n                                {workoutWaitlists[post.id].length} on waitlist\n                              </span>\n                            )}\n                          </div>\n                        )}\n                      </div>\n                      \n                      {/* Position label when on waitlist - moved to bottom */}\n                      {post.capacity && isWorkoutFull(post.id) && isUserOnWaitlist(post.id) && (\n                        <span className=\"waitlist-position\">\n                          {`You're ${formatOrdinal(getWaitlistPosition(post.id))} on the waitlist`}\n                        </span>\n                      )}\n                    </div>\n\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Events Section */}\n        {activeTab === 'events' && (\n          <div className=\"events-section\">\n            <div className=\"section-header\">\n              <h2>Event Posts</h2>\n              {isExec(currentUser) && (\n                <button \n                  className=\"new-post-btn\"\n                  onClick={() => setShowEventForm(true)}\n                >\n                  + New Event\n                </button>\n              )}\n            </div>\n\n            {eventPosts.length === 0 ? (\n              <p className=\"no-posts\">No event posts yet.</p>\n            ) : (\n              <div className=\"posts-list\">\n                {eventPosts.map(post => (\n                  <div key={post.id} className=\"post-card event-post\" onClick={() => window.location.href = `/event/${post.id}`}>\n                    <div className=\"post-header\">\n                      {editingEvent === post.id ? (\n                        <div className=\"event-edit-form\">\n                          <div className=\"form-group\">\n                            <label htmlFor={`edit-event-title-${post.id}`}>Title:</label>\n                            <input\n                              id={`edit-event-title-${post.id}`}\n                              type=\"text\"\n                              value={eventEditForm.title}\n                              onChange={(e) => updateEventField('title', e.target.value)}\n                              className=\"form-input\"\n                              placeholder=\"Enter event title...\"\n                            />\n                          </div>\n\n                          <div className=\"form-group\">\n                            <label htmlFor={`edit-event-date-${post.id}`}>Date:</label>\n                            <input\n                              id={`edit-event-date-${post.id}`}\n                              type=\"date\"\n                              value={eventEditForm.date}\n                              onChange={(e) => updateEventField('date', e.target.value)}\n                              className=\"form-input\"\n                            />\n                          </div>\n\n                          <div className=\"form-group\">\n                            <label htmlFor={`edit-event-content-${post.id}`}>Details:</label>\n                            <textarea\n                              id={`edit-event-content-${post.id}`}\n                              value={eventEditForm.content}\n                              onChange={(e) => updateEventField('content', e.target.value)}\n                              className=\"form-textarea\"\n                              rows=\"3\"\n                              placeholder=\"Enter event details...\"\n                            />\n                          </div>\n\n                          <div className=\"edit-actions\">\n                            <button \n                              className=\"btn btn-primary\" \n                              onClick={(e) => { e.stopPropagation(); saveEvent(post.id); }}\n                              disabled={savingEvent}\n                            >\n                              {savingEvent ? 'Saving...' : 'Save Changes'}\n                            </button>\n                            <button \n                              className=\"btn btn-secondary\" \n                              onClick={(e) => { e.stopPropagation(); cancelEventEdit(); }}\n                              disabled={savingEvent}\n                            >\n                              Cancel\n                            </button>\n                          </div>\n                        </div>\n                      ) : (\n                        <>\n                          {post.title && (\n                            <div className=\"event-title\">\n                              <h3>\n                                {post.title}\n                              </h3>\n                            </div>\n                          )}\n\n                          {/* Edit/Delete for author, exec, admin */}\n                          {(currentUser.id === post.user_id || currentUser.role === 'exec' || currentUser.role === 'administrator') && (\n                            <div className=\"workout-actions-admin\">\n                              <button \n                                className=\"edit-btn\"\n                                onClick={(e) => { e.stopPropagation(); startEventEdit(post); }}\n                                disabled={editingEvent === post.id}\n                              >\n                                ✏️ Edit\n                              </button>\n                              <button \n                                className=\"delete-btn\"\n                                onClick={(e) => { e.stopPropagation(); handleDeleteEvent(post.id); }}\n                                disabled={editingEvent === post.id}\n                              >\n                                🗑️ Delete\n                              </button>\n                            </div>\n                          )}\n                        </>\n                      )}\n                    </div>\n                    \n                    <div className=\"event-author\">\n                      <div className=\"author-info\">\n                        {(() => {\n                          const { normalizeProfileImageUrl } = require('../utils/imageUtils');\n                          const url = normalizeProfileImageUrl(post.authorProfilePictureUrl);\n                          return url ? (\n                            <img \n                              src={url}\n                              alt=\"Profile\" \n                              className=\"author-avatar\"\n                              onError={(e) => {\n                                e.target.src = '/images/default_profile.png';\n                              }}\n                            />\n                          ) : (\n                            <img \n                              src=\"/images/default_profile.png\" \n                              alt=\"Profile\" \n                              className=\"author-avatar\"\n                            />\n                          );\n                        })()}\n                        <span className=\"author-name\">Posted by {post.author_name}</span>\n                      </div>\n                    </div>\n                    \n                    {post.event_date && (\n                      <div className=\"event-meta\">\n                        <span className=\"event-date\">\n                          {(() => {\n                            try {\n                              const base = String(post.event_date).split('T')[0];\n                              const [y, m, d] = base.split('-').map(Number);\n                              const dt = new Date(Date.UTC(y, m - 1, d));\n                              return `📅 ${dt.toLocaleDateString(undefined, { timeZone: 'UTC' })}`;\n                            } catch {\n                              return `📅 ${post.event_date}`;\n                            }\n                          })()}\n                        </span>\n                      </div>\n                    )}\n                    \n                    <div className=\"post-footer\">\n                      <div className=\"rsvp-buttons\">\n                        <button \n                          className={`rsvp-btn going ${getUserRsvpStatus(post.id) === 'going' ? 'active' : ''}`}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleEventRsvp(post.id, 'going');\n                          }}\n                        >\n                          {getUserRsvpStatus(post.id) === 'going' ? '✓ Going' : 'Going'}\n                        </button>\n                        <button \n                          className={`rsvp-btn maybe ${getUserRsvpStatus(post.id) === 'maybe' ? 'active' : ''}`}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleEventRsvp(post.id, 'maybe');\n                          }}\n                        >\n                          {getUserRsvpStatus(post.id) === 'maybe' ? '✓ Maybe' : 'Maybe'}\n                        </button>\n                        <button \n                          className={`rsvp-btn not-going ${getUserRsvpStatus(post.id) === 'not_going' ? 'active' : ''}`}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleEventRsvp(post.id, 'not_going');\n                          }}\n                        >\n                          {getUserRsvpStatus(post.id) === 'not_going' ? '✓ Not Going' : 'Not Going'}\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Waitlist Promotion Success Message */}\n        {showPromotionMessage && promotedWorkout && (\n          <div className=\"promotion-message\">\n            <div className=\"promotion-content\">\n              <h3>🎉 Congratulations!</h3>\n              <p>You've been promoted from the waitlist for <strong>{promotedWorkout.title}</strong>!</p>\n              <p>Check your email for details. You're now officially signed up for this workout.</p>\n              <button \n                className=\"promotion-close-btn\"\n                onClick={() => setShowPromotionMessage(false)}\n              >\n                ✕\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Cancel Confirmation Modal */}\n        {showCancelModal && (\n          <div className=\"modal-overlay\">\n            <div className=\"modal cancel-modal\">\n              <h2>Cancel Workout Signup</h2>\n              <div className=\"cancel-warning\">\n                <p>⚠️ <strong>Important:</strong> If you cancel less than 12 hours in advance, it will count as an absence.</p>\n                <p>Your absences are recorded and once you have three, you will be suspended from signing up for a week.</p>\n                <p>This is to keep it fair for all members!</p>\n              </div>\n              <div className=\"modal-actions\">\n                <button className=\"btn-secondary\" onClick={handleCancelCancel}>\n                  Keep Booking\n                </button>\n                <button className=\"btn-danger\" onClick={handleCancelConfirm}>\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Workout Creation Modal */}\n        {showWorkoutForm && (\n          <div className=\"modal-overlay\">\n            <div className=\"modal\">\n              <h2>Create New Workout Post</h2>\n              <form onSubmit={handleSubmitWorkout}>\n                <div className=\"form-group\">\n                  <label>Workout Title:</label>\n                  <input\n                    type=\"text\"\n                    value={workoutForm.title}\n                    onChange={(e) => setWorkoutForm({...workoutForm, title: e.target.value})}\n                    placeholder=\"e.g., Tuesday Morning Swim, Weekend Long Run\"\n                    maxLength=\"100\"\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Workout Type:</label>\n                  <select\n                    value={workoutForm.type}\n                    onChange={(e) => setWorkoutForm({...workoutForm, type: e.target.value})}\n                    required\n                  >\n                    {getAllowedWorkoutTypes().map(option => (\n                      <option key={option.value} value={option.value}>\n                        {option.label}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Workout Date:</label>\n                  <input\n                    type=\"date\"\n                    value={workoutForm.date}\n                    onChange={(e) => setWorkoutForm({...workoutForm, date: e.target.value})}\n                    min={new Date().toISOString().split('T')[0]}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Workout Time:</label>\n                  <input\n                    type=\"time\"\n                    value={workoutForm.time}\n                    onChange={(e) => setWorkoutForm({...workoutForm, time: e.target.value})}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Additional Details:</label>\n                  <textarea\n                    value={workoutForm.content}\n                    onChange={(e) => setWorkoutForm({...workoutForm, content: e.target.value})}\n                    placeholder=\"Describe the workout, time, location, requirements, what to bring...\"\n                    rows=\"4\"\n                    maxLength=\"500\"\n                    required\n                  />\n                  <small className=\"char-count\">{workoutForm.content.length}/500</small>\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Capacity (Optional):</label>\n                  <input\n                    type=\"number\"\n                    value={workoutForm.capacity}\n                    onChange={(e) => setWorkoutForm({...workoutForm, capacity: e.target.value})}\n                    placeholder=\"Leave empty for unlimited spots\"\n                    min=\"1\"\n                    max=\"100\"\n                  />\n                  <small>Maximum number of people who can sign up. Leave empty for unlimited spots.</small>\n                </div>\n\n                <div className=\"modal-actions\">\n                  <button type=\"submit\" className=\"btn btn-primary\">Post Workout</button>\n                  <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setShowWorkoutForm(false)}>Cancel</button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n\n        {/* Event Creation Modal */}\n        {showEventForm && (\n          <div className=\"modal-overlay\">\n            <div className=\"modal\">\n              <h2>Create New Event Post</h2>\n              <form onSubmit={handleSubmitEvent}>\n                <div className=\"form-group\">\n                  <label>Event Title:</label>\n                  <input\n                    type=\"text\"\n                    value={eventForm.title}\n                    onChange={(e) => setEventForm({...eventForm, title: e.target.value})}\n                    placeholder=\"e.g., Club Social Night, Race Watch Party\"\n                    maxLength=\"100\"\n                    required\n                  />\n                </div>\n\n                                <div className=\"form-group\">\n                  <label>Event Date:</label>\n                  <input\n                    type=\"date\"\n                    value={eventForm.date}\n                    onChange={(e) => setEventForm({...eventForm, date: e.target.value})}\n                    min={new Date().toISOString().split('T')[0]}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Event Details:</label>\n                  <textarea\n                    value={eventForm.content}\n                    onChange={(e) => setEventForm({...eventForm, content: e.target.value})}\n                    placeholder=\"Describe the event, time, location, what to bring, RSVP details...\"\n                    rows=\"4\"\n                    maxLength=\"500\"\n                    required\n                  />\n                  <small className=\"char-count\">{eventForm.content.length}/500</small>\n                </div>\n\n                <div className=\"modal-actions\">\n                  <button type=\"submit\" className=\"btn btn-primary\">Post Event</button>\n                  <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setShowEventForm(false)}>Cancel</button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Forum;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}