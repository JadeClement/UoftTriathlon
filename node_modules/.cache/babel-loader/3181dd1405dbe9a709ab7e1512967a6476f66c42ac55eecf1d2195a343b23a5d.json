{"ast":null,"code":"var _jsxFileName = \"/Users/jadeclement/Documents/Developer/uofttri/src/components/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const params = useParams();\n  const {\n    role,\n    name\n  } = params;\n  const {\n    currentUser,\n    updateUser\n  } = useAuth();\n  const [teamMembers, setTeamMembers] = useState({});\n  const [teamLoading, setTeamLoading] = useState(true);\n  console.log('🔍 All URL params:', params);\n  console.log('🔍 Role param:', role);\n  console.log('🔍 Name param:', name);\n  console.log('👤 Current user:', currentUser);\n  console.log('👤 Current user ID:', currentUser === null || currentUser === void 0 ? void 0 : currentUser.id);\n  console.log('👤 Current user profile_picture_url:', currentUser === null || currentUser === void 0 ? void 0 : currentUser.profile_picture_url);\n\n  // Load team members from backend API\n  useEffect(() => {\n    const loadTeamMembers = async () => {\n      try {\n        setTeamLoading(true);\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/profiles`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch team members');\n        }\n        const data = await response.json();\n\n        // Convert array to object with id as key\n        const membersObject = {};\n        if (Array.isArray(data.teamMembers)) {\n          data.teamMembers.forEach(member => {\n            let image = member.image;\n            // If no image provided, or is blank/whitespace, use default blue profile image\n            if (!image || typeof image === 'string' && image.trim() === '') {\n              image = '/images/icon.png';\n            }\n            // Convert relative image URLs to full URLs for display\n            const normalizedImage = image && image.startsWith('/uploads/') ? `${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/..${image}` : image;\n            membersObject[member.id] = {\n              ...member,\n              image: normalizedImage\n            };\n          });\n          console.log('✅ Loaded team members:', membersObject);\n        }\n        setTeamMembers(membersObject);\n      } catch (error) {\n        console.error('Error loading team members:', error);\n      } finally {\n        setTeamLoading(false);\n      }\n    };\n    loadTeamMembers();\n  }, []);\n  const [editMode, setEditMode] = useState(false);\n  const [editedName, setEditedName] = useState('');\n  const [editedEmail, setEditedEmail] = useState('');\n  const [editedPhone, setEditedPhone] = useState('');\n  const [editedBio, setEditedBio] = useState('');\n  const [editedImage, setEditedImage] = useState('');\n  const [saving, setSaving] = useState(false);\n  const [userProfile, setUserProfile] = useState(null);\n  const [justSaved, setJustSaved] = useState(false);\n  const [error, setError] = useState('');\n\n  // Phone number formatting functions (same as Login.js)\n  const validatePhoneNumber = phone => {\n    // Remove all non-digit characters\n    const digitsOnly = phone.replace(/\\D/g, '');\n    // Check if it's 10 digits (North American format)\n    return digitsOnly.length === 10;\n  };\n  const formatPhoneNumber = phone => {\n    // Remove all non-digit characters\n    const digitsOnly = phone.replace(/\\D/g, '');\n    // Format as (XXX) XXX-XXXX\n    if (digitsOnly.length === 10) {\n      return `(${digitsOnly.slice(0, 3)}) ${digitsOnly.slice(3, 6)}-${digitsOnly.slice(6)}`;\n    }\n    return phone; // Return original if not 10 digits\n  };\n  const handlePhoneNumberChange = e => {\n    const value = e.target.value;\n    // Remove all non-digit characters\n    const digitsOnly = value.replace(/\\D/g, '');\n\n    // Limit to 10 digits\n    if (digitsOnly.length <= 10) {\n      // Format as user types\n      let formatted = digitsOnly;\n      if (digitsOnly.length >= 6) {\n        formatted = `(${digitsOnly.slice(0, 3)}) ${digitsOnly.slice(3, 6)}-${digitsOnly.slice(6)}`;\n      } else if (digitsOnly.length >= 3) {\n        formatted = `(${digitsOnly.slice(0, 3)}) ${digitsOnly.slice(3)}`;\n      } else if (digitsOnly.length > 0) {\n        formatted = `(${digitsOnly}`;\n      }\n      setEditedPhone(formatted);\n    }\n  };\n\n  // Check if this is a user profile page or team member page\n  const isUserProfile = React.useMemo(() => {\n    const result = !role;\n    console.log('🧮 isUserProfile calculated:', {\n      role,\n      result\n    });\n    return result;\n  }, [role]);\n\n  // If it's a user profile, use current user data\n  React.useEffect(() => {\n    console.log('🔄 Profile useEffect triggered with:', {\n      isUserProfile,\n      currentUserId: currentUser === null || currentUser === void 0 ? void 0 : currentUser.id,\n      role,\n      currentUserName: currentUser === null || currentUser === void 0 ? void 0 : currentUser.name,\n      currentUserProfilePicture: currentUser === null || currentUser === void 0 ? void 0 : currentUser.profile_picture_url\n    });\n    if (isUserProfile && currentUser) {\n      console.log('👤 Loading user profile for:', currentUser.name);\n      console.log('📊 Current user data:', currentUser);\n      // Ensure we always have a valid image, defaulting to the default profile image\n      let profileImage = '/images/default_profile.png';\n      // Check both possible field names (AuthContext normalizes profile_picture_url to profilePictureUrl)\n      const profilePictureUrl = currentUser.profile_picture_url || currentUser.profilePictureUrl;\n      if (profilePictureUrl) {\n        // Handle different URL formats\n        if (profilePictureUrl.startsWith('/api/')) {\n          // URL already includes /api/, just prepend the base URL\n          profileImage = `${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001'}${profilePictureUrl}`;\n        } else if (profilePictureUrl.startsWith('/uploads/')) {\n          // URL starts with /uploads/, prepend API base URL\n          profileImage = `${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/..${profilePictureUrl}`;\n        } else if (profilePictureUrl.startsWith('http')) {\n          // Full URL, use as is\n          profileImage = profilePictureUrl;\n        } else {\n          // Fallback to default\n          profileImage = '/images/default_profile.png';\n        }\n      }\n      console.log('🖼️ Profile image processing:');\n      console.log('  - profile_picture_url:', currentUser.profile_picture_url);\n      console.log('  - profilePictureUrl:', currentUser.profilePictureUrl);\n      console.log('  - Using URL:', profilePictureUrl);\n      console.log('  - Final URL:', profileImage);\n      setUserProfile({\n        id: currentUser.id,\n        name: currentUser.name,\n        email: currentUser.email,\n        phone: currentUser.phone_number || currentUser.phone || currentUser.phoneNumber || '',\n        image: profileImage,\n        role: currentUser.role,\n        bio: currentUser.bio || '' // Include bio from currentUser\n      });\n      setLoading(false);\n    } else if (role && teamMembers[role]) {\n      // This is a team member page, use backend data\n      console.log('👥 Loading team member profile for:', role);\n      const member = teamMembers[role];\n      setUserProfile({\n        id: role,\n        name: member.name,\n        role: member.role,\n        image: member.image || '/images/default_profile.png',\n        bio: member.bio,\n        email: member.email || '',\n        // Use email from backend data\n        phone: ''\n      });\n      setLoading(false);\n    } else {\n      console.log('❌ No valid profile found');\n      setLoading(false);\n    }\n  }, [isUserProfile, currentUser, role, teamMembers]);\n\n  // Initialize form data when userProfile changes (only for user profiles, not team members)\n  React.useEffect(() => {\n    console.log('📝 Form initialization useEffect triggered with:', {\n      hasUserProfile: !!userProfile,\n      isUserProfile,\n      justSaved,\n      userProfileName: userProfile === null || userProfile === void 0 ? void 0 : userProfile.name,\n      userProfileImage: userProfile === null || userProfile === void 0 ? void 0 : userProfile.image\n    });\n    if (userProfile && isUserProfile && !justSaved) {\n      console.log('✅ Initializing form fields with user profile data');\n      setEditedName(userProfile.name || '');\n      setEditedEmail(userProfile.email || '');\n      setEditedPhone(userProfile.phone || '');\n      setEditedBio(userProfile.bio || ''); // Initialize bio\n      setEditedImage(userProfile.image || '/images/default_profile.png');\n    } else {\n      console.log('⏭️ Skipping form initialization:', {\n        reason: !userProfile ? 'No userProfile' : !isUserProfile ? 'Not user profile' : 'Just saved'\n      });\n    }\n  }, [userProfile, isUserProfile, justSaved]);\n  const [loading, setLoading] = useState(true);\n  const handleEdit = () => {\n    if (!isUserProfile) return; // Only allow editing for user profiles, not team member bios\n\n    setJustSaved(false); // Reset the flag when starting to edit\n    setError(''); // Clear any previous errors\n    setEditedName(userProfile.name || '');\n    setEditedEmail(userProfile.email || '');\n    setEditedPhone(userProfile.phone || '');\n    setEditedBio(userProfile.bio || ''); // Set bio for editing\n    setEditedImage(userProfile.image || '/images/default_profile.png');\n    setEditMode(true);\n  };\n  const handleSave = async () => {\n    console.log('🚀 STARTING PROFILE SAVE - DEBUGGING ENABLED');\n    setSaving(true);\n    console.log('🔄 Saving state set to true');\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n\n      // First, update the text fields (name, email, phone)\n      const profileData = {\n        name: editedName,\n        email: editedEmail,\n        phone_number: formatPhoneNumber(editedPhone),\n        // Format phone number before sending\n        bio: editedBio\n      };\n      console.log('📝 Sending profile data:', profileData);\n      console.log('🔍 Data types:', {\n        name: typeof editedName,\n        email: typeof editedEmail,\n        phone_number: typeof editedPhone\n      });\n      console.log('🔍 Data values:', {\n        name: editedName,\n        email: editedEmail,\n        phone_number: editedPhone\n      });\n      const profileResponse = await fetch(`${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/users/profile`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(profileData)\n      });\n      if (!profileResponse.ok) {\n        const errorData = await profileResponse.json();\n        throw new Error(errorData.error || 'Failed to update profile');\n      }\n      console.log('✅ Profile text fields updated successfully');\n\n      // Then, if there's a new image, upload it separately\n      let profilePictureUrl = null;\n      console.log('🔍 CHECKING FOR NEW IMAGE:');\n      console.log('🔍 editedImage:', editedImage);\n      console.log('🔍 userProfile.image:', userProfile.image);\n      console.log('🔍 editedImage !== userProfile.image:', editedImage !== userProfile.image);\n      console.log('🔍 editedImage.startsWith(\"blob:\"):', editedImage && editedImage.startsWith('blob:'));\n      if (editedImage && editedImage !== userProfile.image && editedImage.startsWith('blob:')) {\n        console.log('🖼️ Processing new image for upload...');\n\n        // Convert blob URL to file\n        const response = await fetch(editedImage);\n        const blob = await response.blob();\n        const file = new File([blob], 'profile-image.jpg', {\n          type: 'image/jpeg'\n        });\n        console.log('✅ Image file prepared:', file.name, file.size, file.type);\n\n        // Upload image to separate endpoint\n        const imageFormData = new FormData();\n        imageFormData.append('profilePicture', file);\n        const imageResponse = await fetch(`${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/users/profile-picture`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          body: imageFormData\n        });\n        if (imageResponse.ok) {\n          const imageResult = await imageResponse.json();\n          profilePictureUrl = imageResult.profilePictureUrl;\n          console.log('✅ Profile picture uploaded successfully!');\n          console.log('✅ Backend response:', imageResult);\n          console.log('✅ profilePictureUrl from backend:', profilePictureUrl);\n        } else {\n          const errorText = await imageResponse.text();\n          console.error('❌ IMAGE UPLOAD FAILED!');\n          console.error('❌ Status:', imageResponse.status);\n          console.error('❌ Error:', errorText);\n        }\n      } else {\n        console.log('ℹ️ No new image to upload');\n      }\n\n      // Update local state with the new image\n      let finalImage;\n      console.log('🔍 DETERMINING FINAL IMAGE:');\n      console.log('🔍 profilePictureUrl:', profilePictureUrl);\n      if (profilePictureUrl) {\n        // If backend returned absolute URL (e.g., S3), use it as-is\n        if (/^https?:\\/\\//i.test(profilePictureUrl)) {\n          finalImage = profilePictureUrl;\n        } else {\n          // Relative path -> prefix with API host once\n          const apiBase = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api';\n          const host = apiBase.replace(/\\/?api$/i, '');\n          finalImage = `${host}${profilePictureUrl}`;\n        }\n        console.log('✅ USING NEW IMAGE!');\n        console.log('✅ Final constructed URL:', finalImage);\n      } else {\n        // No new image, keep the current one\n        finalImage = userProfile.image;\n        console.log('⚠️ KEEPING CURRENT IMAGE (no new upload)');\n        console.log('⚠️ Current image:', finalImage);\n        console.log('⚠️ No profilePictureUrl received from backend');\n      }\n      const updatedProfile = {\n        name: editedName,\n        email: editedEmail,\n        phone: editedPhone,\n        image: finalImage,\n        bio: editedBio // Include bio in the update\n      };\n      setUserProfile(prev => ({\n        ...prev,\n        ...updatedProfile\n      }));\n\n      // Update the auth context so changes persist across navigation\n      // Use the exact field names that the auth context expects\n      const authUpdateData = {\n        name: editedName,\n        email: editedEmail,\n        phone_number: formatPhoneNumber(editedPhone),\n        // Format phone number before updating auth context\n        bio: editedBio // Include bio in the auth context update\n      };\n\n      // Always update profile_picture_url with the backend URL (if we got a new one)\n      if (profilePictureUrl) {\n        authUpdateData.profile_picture_url = profilePictureUrl;\n      }\n      console.log('🔄 Updating auth context with:', authUpdateData);\n      updateUser(authUpdateData);\n\n      // Also update localStorage directly to ensure persistence\n      const currentStoredUser = JSON.parse(localStorage.getItem('triathlonUser') || '{}');\n      const updatedStoredUser = {\n        ...currentStoredUser,\n        ...authUpdateData\n      };\n      localStorage.setItem('triathlonUser', JSON.stringify(updatedStoredUser));\n      console.log('💾 Updated localStorage with:', updatedStoredUser);\n\n      // The auth context update should automatically propagate to all components\n      // that use currentUser.profile_picture_url\n      console.log('✅ Profile image update complete - all components should now show the new image');\n\n      // Dispatch a custom event to notify other components that the profile has been updated\n      const profileUpdateEvent = new CustomEvent('profileUpdated', {\n        detail: {\n          userId: currentUser.id,\n          newImageUrl: finalImage,\n          timestamp: Date.now()\n        }\n      });\n      window.dispatchEvent(profileUpdateEvent);\n      console.log('📡 Dispatched profileUpdated event:', profileUpdateEvent.detail);\n\n      // Debug: Check what the auth context now contains\n      console.log('🔍 Current auth context after update:', {\n        name: authUpdateData.name,\n        email: authUpdateData.email,\n        phone_number: authUpdateData.phone_number,\n        profile_picture_url: authUpdateData.profile_picture_url\n      });\n\n      // Debug: Check localStorage\n      const storedUser = JSON.parse(localStorage.getItem('triathlonUser') || '{}');\n      console.log('💾 localStorage after update:', {\n        name: storedUser.name,\n        email: storedUser.email,\n        phone_number: storedUser.phone_number,\n        profile_picture_url: storedUser.profile_picture_url\n      });\n      setEditMode(false);\n      setSaving(false);\n      console.log('✅ Saving state set to false - save completed');\n      setJustSaved(true);\n      setError(''); // Clear any errors on successful save\n\n      // Reset the justSaved flag after a short delay\n      setTimeout(() => setJustSaved(false), 100);\n    } catch (error) {\n      console.error('❌ Error updating profile:', error);\n      setError(error.message);\n      setSaving(false);\n      console.log('❌ Saving state set to false - save failed');\n    }\n  };\n  const handleCancel = () => {\n    setEditMode(false);\n    if (isUserProfile) {\n      setEditedName((userProfile === null || userProfile === void 0 ? void 0 : userProfile.name) || '');\n      setEditedEmail((userProfile === null || userProfile === void 0 ? void 0 : userProfile.email) || '');\n      setEditedPhone((userProfile === null || userProfile === void 0 ? void 0 : userProfile.phone) || '');\n      setEditedBio((userProfile === null || userProfile === void 0 ? void 0 : userProfile.bio) || ''); // Reset bio on cancel\n      setEditedImage((userProfile === null || userProfile === void 0 ? void 0 : userProfile.image) || '/images/default_profile.png');\n    }\n  };\n  if (loading || teamLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-state\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Loading profile...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this);\n  }\n  if (!userProfile) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Profile Not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Sorry, we couldn't find the profile you're looking for.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/coaches-exec\",\n            className: \"back-link\",\n            children: \"\\u2190 Back to Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [isUserProfile ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dashboard\",\n        className: \"back-link\",\n        children: \"\\u2190 Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/coaches-exec\",\n        className: \"back-link\",\n        children: \"\\u2190 Back to Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-image-section\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: editMode ? editedImage || userProfile.image || '/images/default_profile.png' : userProfile.image || '/images/default_profile.png',\n            alt: `${userProfile.name} - ${userProfile.role}`,\n            className: \"profile-image\",\n            onError: e => {\n              console.error('❌ Image failed to load:', e.target.src);\n              console.log('🔄 Falling back to default profile image');\n              e.target.src = '/images/default_profile.png';\n            },\n            onLoad: e => {\n              const currentSrc = e.target.src;\n              console.log('✅ Image loaded successfully:', currentSrc);\n              if (currentSrc.includes('default_profile.png')) {\n                console.log('🖼️ Displaying default profile image');\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-info-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile-name\",\n              children: userProfile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"profile-role\",\n              children: userProfile.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, this), isUserProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-actions\",\n              children: editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"edit-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: handleSave,\n                  disabled: saving,\n                  children: saving ? 'Saving...' : 'Save Changes'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-secondary\",\n                  onClick: handleCancel,\n                  disabled: saving,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-edit\",\n                onClick: handleEdit,\n                children: \"Edit Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 15\n          }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-upload-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"profile-image\",\n                className: \"image-upload-label\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-preview\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: editedImage || userProfile.image || '/images/default_profile.png',\n                    alt: `${userProfile.name} - ${userProfile.role}`,\n                    className: \"preview-image\",\n                    onError: e => {\n                      e.target.src = '/images/default_profile.png';\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 550,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"image-overlay\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Click to change image\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 559,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"profile-image\",\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: e => {\n                  const file = e.target.files[0];\n                  if (file) {\n                    console.log('📁 New image selected:', file.name, file.type, file.size);\n                    const imageUrl = URL.createObjectURL(file);\n                    setEditedImage(imageUrl);\n                    console.log('🖼️ Preview image set to:', imageUrl);\n                  }\n                },\n                style: {\n                  display: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"image-upload-help\",\n                children: \"Click the image above to upload a new profile picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-edit-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name-input\",\n                  className: \"form-label\",\n                  children: \"Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"name-input\",\n                  type: \"text\",\n                  value: editedName,\n                  onChange: e => {\n                    setEditedName(e.target.value);\n                    if (error) setError(''); // Clear error when user starts typing\n                  },\n                  className: \"form-input\",\n                  placeholder: \"Enter your name...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email-input\",\n                  className: \"form-label\",\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"email-input\",\n                  type: \"email\",\n                  value: editedEmail,\n                  onChange: e => {\n                    setEditedEmail(e.target.value);\n                    if (error) setError(''); // Clear error when user starts typing\n                  },\n                  className: \"form-input\",\n                  placeholder: \"Enter your email...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"phone-input\",\n                  className: \"form-label\",\n                  children: \"Phone:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"phone-input\",\n                  type: \"tel\",\n                  value: editedPhone,\n                  onChange: handlePhoneNumberChange,\n                  className: \"form-input\",\n                  placeholder: \"(123) 456-7890\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 21\n                }, this), editedPhone && !validatePhoneNumber(editedPhone) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error-message\",\n                  children: \"Please enter a valid 10-digit phone number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"bio-input\",\n                  className: \"form-label\",\n                  children: \"Bio:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"bio-input\",\n                  value: editedBio,\n                  onChange: e => {\n                    setEditedBio(e.target.value);\n                    if (error) setError(''); // Clear error when user starts typing\n                  },\n                  className: \"form-input\",\n                  placeholder: \"Enter your bio...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 19\n              }, this), \" \", userProfile.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 17\n            }, this), userProfile.phone && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Phone:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 21\n              }, this), \" \", userProfile.phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 19\n            }, this), userProfile.bio && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-bio\",\n              children: userProfile.bio.split('\\n\\n').map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: paragraph\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 475,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"QZr6AQIgOk1wQVA2hVKid0KodDk=\", false, function () {\n  return [useParams, useAuth];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","useAuth","jsxDEV","_jsxDEV","Profile","_s","params","role","name","currentUser","updateUser","teamMembers","setTeamMembers","teamLoading","setTeamLoading","console","log","id","profile_picture_url","loadTeamMembers","response","fetch","process","env","REACT_APP_API_BASE_URL","ok","Error","data","json","membersObject","Array","isArray","forEach","member","image","trim","normalizedImage","startsWith","error","editMode","setEditMode","editedName","setEditedName","editedEmail","setEditedEmail","editedPhone","setEditedPhone","editedBio","setEditedBio","editedImage","setEditedImage","saving","setSaving","userProfile","setUserProfile","justSaved","setJustSaved","setError","validatePhoneNumber","phone","digitsOnly","replace","length","formatPhoneNumber","slice","handlePhoneNumberChange","e","value","target","formatted","isUserProfile","useMemo","result","currentUserId","currentUserName","currentUserProfilePicture","profileImage","profilePictureUrl","email","phone_number","phoneNumber","bio","setLoading","hasUserProfile","userProfileName","userProfileImage","reason","loading","handleEdit","handleSave","token","localStorage","getItem","profileData","profileResponse","method","headers","body","JSON","stringify","errorData","blob","file","File","type","size","imageFormData","FormData","append","imageResponse","imageResult","errorText","text","status","finalImage","test","apiBase","host","updatedProfile","prev","authUpdateData","currentStoredUser","parse","updatedStoredUser","setItem","profileUpdateEvent","CustomEvent","detail","userId","newImageUrl","timestamp","Date","now","window","dispatchEvent","storedUser","setTimeout","message","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","src","alt","onError","onLoad","currentSrc","includes","onClick","disabled","htmlFor","accept","onChange","files","imageUrl","URL","createObjectURL","style","display","placeholder","split","map","paragraph","index","_c","$RefreshReg$"],"sources":["/Users/jadeclement/Documents/Developer/uofttri/src/components/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport './Profile.css';\n\nconst Profile = () => {\n  const params = useParams();\n  const { role, name } = params;\n  const { currentUser, updateUser } = useAuth();\n  const [teamMembers, setTeamMembers] = useState({});\n  const [teamLoading, setTeamLoading] = useState(true);\n  \n  console.log('🔍 All URL params:', params);\n  console.log('🔍 Role param:', role);\n  console.log('🔍 Name param:', name);\n  console.log('👤 Current user:', currentUser);\n  console.log('👤 Current user ID:', currentUser?.id);\n  console.log('👤 Current user profile_picture_url:', currentUser?.profile_picture_url);\n\n  // Load team members from backend API\n  useEffect(() => {\n    const loadTeamMembers = async () => {\n      try {\n        setTeamLoading(true);\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/profiles`);\n        \n        if (!response.ok) {\n          throw new Error('Failed to fetch team members');\n        }\n        \n        const data = await response.json();\n        \n        // Convert array to object with id as key\n        const membersObject = {};\n        if (Array.isArray(data.teamMembers)) {\n          data.teamMembers.forEach(member => {\n            let image = member.image;\n            // If no image provided, or is blank/whitespace, use default blue profile image\n            if (!image || (typeof image === 'string' && image.trim() === '')) {\n              image = '/images/icon.png';\n            }\n            // Convert relative image URLs to full URLs for display\n            const normalizedImage = image && image.startsWith('/uploads/')\n              ? `${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/..${image}`\n              : image;\n            \n            membersObject[member.id] = {\n              ...member,\n              image: normalizedImage\n            };\n          });\n          console.log('✅ Loaded team members:', membersObject);\n        }\n        \n        setTeamMembers(membersObject);\n      } catch (error) {\n        console.error('Error loading team members:', error);\n      } finally {\n        setTeamLoading(false);\n      }\n    };\n\n    loadTeamMembers();\n  }, []);\n  \n  const [editMode, setEditMode] = useState(false);\n  const [editedName, setEditedName] = useState('');\n  const [editedEmail, setEditedEmail] = useState('');\n  const [editedPhone, setEditedPhone] = useState('');\n  const [editedBio, setEditedBio] = useState('');\n  const [editedImage, setEditedImage] = useState('');\n  const [saving, setSaving] = useState(false);\n  const [userProfile, setUserProfile] = useState(null);\n  const [justSaved, setJustSaved] = useState(false);\n  const [error, setError] = useState('');\n\n  // Phone number formatting functions (same as Login.js)\n  const validatePhoneNumber = (phone) => {\n    // Remove all non-digit characters\n    const digitsOnly = phone.replace(/\\D/g, '');\n    // Check if it's 10 digits (North American format)\n    return digitsOnly.length === 10;\n  };\n\n  const formatPhoneNumber = (phone) => {\n    // Remove all non-digit characters\n    const digitsOnly = phone.replace(/\\D/g, '');\n    // Format as (XXX) XXX-XXXX\n    if (digitsOnly.length === 10) {\n      return `(${digitsOnly.slice(0, 3)}) ${digitsOnly.slice(3, 6)}-${digitsOnly.slice(6)}`;\n    }\n    return phone; // Return original if not 10 digits\n  };\n\n  const handlePhoneNumberChange = (e) => {\n    const value = e.target.value;\n    // Remove all non-digit characters\n    const digitsOnly = value.replace(/\\D/g, '');\n    \n    // Limit to 10 digits\n    if (digitsOnly.length <= 10) {\n      // Format as user types\n      let formatted = digitsOnly;\n      if (digitsOnly.length >= 6) {\n        formatted = `(${digitsOnly.slice(0, 3)}) ${digitsOnly.slice(3, 6)}-${digitsOnly.slice(6)}`;\n      } else if (digitsOnly.length >= 3) {\n        formatted = `(${digitsOnly.slice(0, 3)}) ${digitsOnly.slice(3)}`;\n      } else if (digitsOnly.length > 0) {\n        formatted = `(${digitsOnly}`;\n      }\n      setEditedPhone(formatted);\n    }\n  };\n\n  // Check if this is a user profile page or team member page\n  const isUserProfile = React.useMemo(() => {\n    const result = !role;\n    console.log('🧮 isUserProfile calculated:', { role, result });\n    return result;\n  }, [role]);\n  \n  // If it's a user profile, use current user data\n  React.useEffect(() => {\n    console.log('🔄 Profile useEffect triggered with:', {\n      isUserProfile,\n      currentUserId: currentUser?.id,\n      role,\n      currentUserName: currentUser?.name,\n      currentUserProfilePicture: currentUser?.profile_picture_url\n    });\n    \n    if (isUserProfile && currentUser) {\n      console.log('👤 Loading user profile for:', currentUser.name);\n      console.log('📊 Current user data:', currentUser);\n      // Ensure we always have a valid image, defaulting to the default profile image\n      let profileImage = '/images/default_profile.png';\n      // Check both possible field names (AuthContext normalizes profile_picture_url to profilePictureUrl)\n      const profilePictureUrl = currentUser.profile_picture_url || currentUser.profilePictureUrl;\n      \n      if (profilePictureUrl) {\n        // Handle different URL formats\n        if (profilePictureUrl.startsWith('/api/')) {\n          // URL already includes /api/, just prepend the base URL\n          profileImage = `${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001'}${profilePictureUrl}`;\n        } else if (profilePictureUrl.startsWith('/uploads/')) {\n          // URL starts with /uploads/, prepend API base URL\n          profileImage = `${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/..${profilePictureUrl}`;\n        } else if (profilePictureUrl.startsWith('http')) {\n          // Full URL, use as is\n          profileImage = profilePictureUrl;\n        } else {\n          // Fallback to default\n          profileImage = '/images/default_profile.png';\n        }\n      }\n      \n      console.log('🖼️ Profile image processing:');\n      console.log('  - profile_picture_url:', currentUser.profile_picture_url);\n      console.log('  - profilePictureUrl:', currentUser.profilePictureUrl);\n      console.log('  - Using URL:', profilePictureUrl);\n      console.log('  - Final URL:', profileImage);\n      \n      setUserProfile({\n        id: currentUser.id,\n        name: currentUser.name,\n        email: currentUser.email,\n        phone: currentUser.phone_number || currentUser.phone || currentUser.phoneNumber || '',\n        image: profileImage,\n        role: currentUser.role,\n        bio: currentUser.bio || '' // Include bio from currentUser\n      });\n      setLoading(false);\n    } else if (role && teamMembers[role]) {\n      // This is a team member page, use backend data\n      console.log('👥 Loading team member profile for:', role);\n      const member = teamMembers[role];\n      setUserProfile({\n        id: role,\n        name: member.name,\n        role: member.role,\n        image: member.image || '/images/default_profile.png',\n        bio: member.bio,\n        email: member.email || '', // Use email from backend data\n        phone: ''\n      });\n      setLoading(false);\n    } else {\n      console.log('❌ No valid profile found');\n      setLoading(false);\n    }\n  }, [isUserProfile, currentUser, role, teamMembers]);\n\n  // Initialize form data when userProfile changes (only for user profiles, not team members)\n  React.useEffect(() => {\n    console.log('📝 Form initialization useEffect triggered with:', {\n      hasUserProfile: !!userProfile,\n      isUserProfile,\n      justSaved,\n      userProfileName: userProfile?.name,\n      userProfileImage: userProfile?.image\n    });\n    \n    if (userProfile && isUserProfile && !justSaved) {\n      console.log('✅ Initializing form fields with user profile data');\n      setEditedName(userProfile.name || '');\n      setEditedEmail(userProfile.email || '');\n      setEditedPhone(userProfile.phone || '');\n      setEditedBio(userProfile.bio || ''); // Initialize bio\n      setEditedImage(userProfile.image || '/images/default_profile.png');\n    } else {\n      console.log('⏭️ Skipping form initialization:', {\n        reason: !userProfile ? 'No userProfile' : !isUserProfile ? 'Not user profile' : 'Just saved'\n      });\n    }\n  }, [userProfile, isUserProfile, justSaved]);\n\n  const [loading, setLoading] = useState(true);\n\n  const handleEdit = () => {\n    if (!isUserProfile) return; // Only allow editing for user profiles, not team member bios\n    \n    setJustSaved(false); // Reset the flag when starting to edit\n    setError(''); // Clear any previous errors\n    setEditedName(userProfile.name || '');\n    setEditedEmail(userProfile.email || '');\n    setEditedPhone(userProfile.phone || '');\n    setEditedBio(userProfile.bio || ''); // Set bio for editing\n    setEditedImage(userProfile.image || '/images/default_profile.png');\n    setEditMode(true);\n  };\n\n  const handleSave = async () => {\n    console.log('🚀 STARTING PROFILE SAVE - DEBUGGING ENABLED');\n    setSaving(true);\n    console.log('🔄 Saving state set to true');\n    \n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n\n      // First, update the text fields (name, email, phone)\n      const profileData = {\n        name: editedName,\n        email: editedEmail,\n        phone_number: formatPhoneNumber(editedPhone), // Format phone number before sending\n        bio: editedBio\n      };\n\n      console.log('📝 Sending profile data:', profileData);\n      console.log('🔍 Data types:', {\n        name: typeof editedName,\n        email: typeof editedEmail,\n        phone_number: typeof editedPhone\n      });\n      console.log('🔍 Data values:', {\n        name: editedName,\n        email: editedEmail,\n        phone_number: editedPhone\n      });\n\n      const profileResponse = await fetch(`${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/users/profile`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(profileData)\n      });\n\n      if (!profileResponse.ok) {\n        const errorData = await profileResponse.json();\n        throw new Error(errorData.error || 'Failed to update profile');\n      }\n\n      console.log('✅ Profile text fields updated successfully');\n\n      // Then, if there's a new image, upload it separately\n      let profilePictureUrl = null;\n      console.log('🔍 CHECKING FOR NEW IMAGE:');\n      console.log('🔍 editedImage:', editedImage);\n      console.log('🔍 userProfile.image:', userProfile.image);\n      console.log('🔍 editedImage !== userProfile.image:', editedImage !== userProfile.image);\n      console.log('🔍 editedImage.startsWith(\"blob:\"):', editedImage && editedImage.startsWith('blob:'));\n      \n      if (editedImage && editedImage !== userProfile.image && editedImage.startsWith('blob:')) {\n        console.log('🖼️ Processing new image for upload...');\n        \n        // Convert blob URL to file\n        const response = await fetch(editedImage);\n        const blob = await response.blob();\n        const file = new File([blob], 'profile-image.jpg', { type: 'image/jpeg' });\n        \n        console.log('✅ Image file prepared:', file.name, file.size, file.type);\n        \n        // Upload image to separate endpoint\n        const imageFormData = new FormData();\n        imageFormData.append('profilePicture', file);\n        \n        const imageResponse = await fetch(`${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/users/profile-picture`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          body: imageFormData\n        });\n\n        if (imageResponse.ok) {\n          const imageResult = await imageResponse.json();\n          profilePictureUrl = imageResult.profilePictureUrl;\n          console.log('✅ Profile picture uploaded successfully!');\n          console.log('✅ Backend response:', imageResult);\n          console.log('✅ profilePictureUrl from backend:', profilePictureUrl);\n        } else {\n          const errorText = await imageResponse.text();\n          console.error('❌ IMAGE UPLOAD FAILED!');\n          console.error('❌ Status:', imageResponse.status);\n          console.error('❌ Error:', errorText);\n        }\n      } else {\n        console.log('ℹ️ No new image to upload');\n      }\n\n      // Update local state with the new image\n      let finalImage;\n      console.log('🔍 DETERMINING FINAL IMAGE:');\n      console.log('🔍 profilePictureUrl:', profilePictureUrl);\n      \n      if (profilePictureUrl) {\n        // If backend returned absolute URL (e.g., S3), use it as-is\n        if (/^https?:\\/\\//i.test(profilePictureUrl)) {\n          finalImage = profilePictureUrl;\n        } else {\n          // Relative path -> prefix with API host once\n          const apiBase = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api';\n          const host = apiBase.replace(/\\/?api$/i, '');\n          finalImage = `${host}${profilePictureUrl}`;\n        }\n        console.log('✅ USING NEW IMAGE!');\n        console.log('✅ Final constructed URL:', finalImage);\n      } else {\n        // No new image, keep the current one\n        finalImage = userProfile.image;\n        console.log('⚠️ KEEPING CURRENT IMAGE (no new upload)');\n        console.log('⚠️ Current image:', finalImage);\n        console.log('⚠️ No profilePictureUrl received from backend');\n      }\n      \n      const updatedProfile = {\n        name: editedName,\n        email: editedEmail,\n        phone: editedPhone,\n        image: finalImage,\n        bio: editedBio // Include bio in the update\n      };\n      \n      setUserProfile(prev => ({\n        ...prev,\n        ...updatedProfile\n      }));\n\n      // Update the auth context so changes persist across navigation\n      // Use the exact field names that the auth context expects\n      const authUpdateData = {\n        name: editedName,\n        email: editedEmail,\n        phone_number: formatPhoneNumber(editedPhone),  // Format phone number before updating auth context\n        bio: editedBio // Include bio in the auth context update\n      };\n      \n      // Always update profile_picture_url with the backend URL (if we got a new one)\n      if (profilePictureUrl) {\n        authUpdateData.profile_picture_url = profilePictureUrl;\n      }\n      \n      console.log('🔄 Updating auth context with:', authUpdateData);\n      updateUser(authUpdateData);\n      \n      // Also update localStorage directly to ensure persistence\n      const currentStoredUser = JSON.parse(localStorage.getItem('triathlonUser') || '{}');\n      const updatedStoredUser = { ...currentStoredUser, ...authUpdateData };\n      localStorage.setItem('triathlonUser', JSON.stringify(updatedStoredUser));\n      console.log('💾 Updated localStorage with:', updatedStoredUser);\n      \n      // The auth context update should automatically propagate to all components\n      // that use currentUser.profile_picture_url\n      console.log('✅ Profile image update complete - all components should now show the new image');\n      \n      // Dispatch a custom event to notify other components that the profile has been updated\n      const profileUpdateEvent = new CustomEvent('profileUpdated', {\n        detail: {\n          userId: currentUser.id,\n          newImageUrl: finalImage,\n          timestamp: Date.now()\n        }\n      });\n      window.dispatchEvent(profileUpdateEvent);\n      console.log('📡 Dispatched profileUpdated event:', profileUpdateEvent.detail);\n      \n      // Debug: Check what the auth context now contains\n      console.log('🔍 Current auth context after update:', {\n        name: authUpdateData.name,\n        email: authUpdateData.email,\n        phone_number: authUpdateData.phone_number,\n        profile_picture_url: authUpdateData.profile_picture_url\n      });\n      \n      // Debug: Check localStorage\n      const storedUser = JSON.parse(localStorage.getItem('triathlonUser') || '{}');\n      console.log('💾 localStorage after update:', {\n        name: storedUser.name,\n        email: storedUser.email,\n        phone_number: storedUser.phone_number,\n        profile_picture_url: storedUser.profile_picture_url\n      });\n\n      setEditMode(false);\n      setSaving(false);\n      console.log('✅ Saving state set to false - save completed');\n      setJustSaved(true);\n      setError(''); // Clear any errors on successful save\n      \n      // Reset the justSaved flag after a short delay\n      setTimeout(() => setJustSaved(false), 100);\n      \n    } catch (error) {\n      console.error('❌ Error updating profile:', error);\n      setError(error.message);\n      setSaving(false);\n      console.log('❌ Saving state set to false - save failed');\n    }\n  };\n\n  const handleCancel = () => {\n    setEditMode(false);\n    if (isUserProfile) {\n      setEditedName(userProfile?.name || '');\n      setEditedEmail(userProfile?.email || '');\n      setEditedPhone(userProfile?.phone || '');\n      setEditedBio(userProfile?.bio || ''); // Reset bio on cancel\n      setEditedImage(userProfile?.image || '/images/default_profile.png');\n    }\n  };\n\n  if (loading || teamLoading) {\n    return (\n      <div className=\"profile-container\">\n        <div className=\"container\">\n          <div className=\"loading-state\">\n            <h2>Loading profile...</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!userProfile) {\n    return (\n      <div className=\"profile-container\">\n        <div className=\"container\">\n          <div className=\"error-state\">\n            <h2>Profile Not Found</h2>\n            <p>Sorry, we couldn't find the profile you're looking for.</p>\n            <Link to=\"/coaches-exec\" className=\"back-link\">← Back to Team</Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"container\">\n        {isUserProfile ? (\n          <Link to=\"/dashboard\" className=\"back-link\">← Back to Dashboard</Link>\n        ) : (\n          <Link to=\"/coaches-exec\" className=\"back-link\">← Back to Team</Link>\n        )}\n        \n        <div className=\"profile-content\">\n          <div className=\"profile-image-section\">\n            <img \n              src={editMode ? (editedImage || userProfile.image || '/images/default_profile.png') : (userProfile.image || '/images/default_profile.png')} \n              alt={`${userProfile.name} - ${userProfile.role}`}\n              className=\"profile-image\"\n              onError={(e) => {\n                console.error('❌ Image failed to load:', e.target.src);\n                console.log('🔄 Falling back to default profile image');\n                e.target.src = '/images/default_profile.png';\n              }}\n              onLoad={(e) => {\n                const currentSrc = e.target.src;\n                console.log('✅ Image loaded successfully:', currentSrc);\n                if (currentSrc.includes('default_profile.png')) {\n                  console.log('🖼️ Displaying default profile image');\n                }\n              }}\n            />\n          </div>\n          \n          <div className=\"profile-info-section\">\n            <div className=\"profile-header\">\n              <h1 className=\"profile-name\">{userProfile.name}</h1>\n              <h2 className=\"profile-role\">{userProfile.role}</h2>\n              {isUserProfile && (\n                <div className=\"profile-actions\">\n                  {editMode ? (\n                    <div className=\"edit-actions\">\n                      <button \n                        className=\"btn btn-primary\" \n                        onClick={handleSave}\n                        disabled={saving}\n                      >\n                        {saving ? 'Saving...' : 'Save Changes'}\n                      </button>\n                      <button \n                        className=\"btn btn-secondary\" \n                        onClick={handleCancel}\n                        disabled={saving}\n                      >\n                        Cancel\n                      </button>\n                    </div>\n                  ) : (\n                    <button \n                      className=\"btn btn-edit\" \n                      onClick={handleEdit}\n                    >\n                      Edit Profile\n                    </button>\n                  )}\n                </div>\n              )}\n            </div>\n            \n            {error && (\n              <div className=\"error-message\">\n                {error}\n              </div>\n            )}\n            \n            {editMode ? (\n              <div className=\"edit-form\">\n                <div className=\"image-upload-section\">\n                  <label htmlFor=\"profile-image\" className=\"image-upload-label\">\n                    <div className=\"image-preview\">\n                      <img \n                        src={editedImage || userProfile.image || '/images/default_profile.png'}\n                        alt={`${userProfile.name} - ${userProfile.role}`}\n                        className=\"preview-image\"\n                        onError={(e) => {\n                          e.target.src = '/images/default_profile.png';\n                        }}\n                      />\n                      <div className=\"image-overlay\">\n                        <span>Click to change image</span>\n                      </div>\n                    </div>\n                  </label>\n                  <input\n                    id=\"profile-image\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={(e) => {\n                      const file = e.target.files[0];\n                      if (file) {\n                        console.log('📁 New image selected:', file.name, file.type, file.size);\n                        const imageUrl = URL.createObjectURL(file);\n                        setEditedImage(imageUrl);\n                        console.log('🖼️ Preview image set to:', imageUrl);\n                      }\n                    }}\n                    style={{ display: 'none' }}\n                  />\n                  <p className=\"image-upload-help\">\n                    Click the image above to upload a new profile picture\n                  </p>\n                </div>\n                \n                <div className=\"profile-edit-section\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"name-input\" className=\"form-label\">Name:</label>\n                    <input\n                      id=\"name-input\"\n                      type=\"text\"\n                      value={editedName}\n                      onChange={(e) => {\n                        setEditedName(e.target.value);\n                        if (error) setError(''); // Clear error when user starts typing\n                      }}\n                      className=\"form-input\"\n                      placeholder=\"Enter your name...\"\n                    />\n                  </div>\n                  \n                                    <div className=\"form-group\">\n                    <label htmlFor=\"email-input\" className=\"form-label\">Email:</label>\n                    <input\n                      id=\"email-input\"\n                      type=\"email\"\n                      value={editedEmail}\n                      onChange={(e) => {\n                        setEditedEmail(e.target.value);\n                        if (error) setError(''); // Clear error when user starts typing\n                      }}\n                      className=\"form-input\"\n                      placeholder=\"Enter your email...\"\n                    />\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label htmlFor=\"phone-input\" className=\"form-label\">Phone:</label>\n                    <input\n                      id=\"phone-input\"\n                      type=\"tel\"\n                      value={editedPhone}\n                      onChange={handlePhoneNumberChange}\n                      className=\"form-input\"\n                      placeholder=\"(123) 456-7890\"\n                    />\n                    {editedPhone && !validatePhoneNumber(editedPhone) && (\n                      <div className=\"error-message\">\n                        Please enter a valid 10-digit phone number\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"bio-input\" className=\"form-label\">Bio:</label>\n                    <textarea\n                      id=\"bio-input\"\n                      value={editedBio}\n                      onChange={(e) => {\n                        setEditedBio(e.target.value);\n                        if (error) setError(''); // Clear error when user starts typing\n                      }}\n                      className=\"form-input\"\n                      placeholder=\"Enter your bio...\"\n                    />\n                  </div>\n                  \n \n                </div>\n              </div>\n            ) : (\n              <div className=\"profile-info\">\n                <div className=\"info-item\">\n                  <strong>Email:</strong> {userProfile.email}\n                </div>\n                {userProfile.phone && (\n                  <div className=\"info-item\">\n                    <strong>Phone:</strong> {userProfile.phone}\n                  </div>\n                )}\n                {userProfile.bio && (\n                  <div className=\"profile-bio\">\n                    {userProfile.bio.split('\\n\\n').map((paragraph, index) => (\n                      <p key={index}>{paragraph}</p>\n                    ))}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}