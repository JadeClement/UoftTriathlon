{"ast":null,"code":"var _jsxFileName = \"/Users/jadeclement/Documents/Developer/uofttri/src/components/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const params = useParams();\n  const {\n    role,\n    name\n  } = params;\n  const {\n    currentUser,\n    updateUser\n  } = useAuth();\n  const [teamMembers, setTeamMembers] = useState({});\n  const [teamLoading, setTeamLoading] = useState(true);\n  console.log('üîç All URL params:', params);\n  console.log('üîç Role param:', role);\n  console.log('üîç Name param:', name);\n  console.log('üë§ Current user:', currentUser);\n  console.log('üë§ Current user ID:', currentUser === null || currentUser === void 0 ? void 0 : currentUser.id);\n  console.log('üë§ Current user profile_picture_url:', currentUser === null || currentUser === void 0 ? void 0 : currentUser.profile_picture_url);\n\n  // Load team members from backend API\n  useEffect(() => {\n    const loadTeamMembers = async () => {\n      try {\n        setTeamLoading(true);\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/profiles`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch team members');\n        }\n        const data = await response.json();\n\n        // Convert array to object with id as key\n        const membersObject = {};\n        if (Array.isArray(data.teamMembers)) {\n          data.teamMembers.forEach(member => {\n            let image = member.image;\n            // If no image provided, or is blank/whitespace, use default blue profile image\n            if (!image || typeof image === 'string' && image.trim() === '') {\n              image = '/images/icon.png';\n            }\n            // Convert relative image URLs to full URLs for display\n            const normalizedImage = image && image.startsWith('/uploads/') ? `${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/..${image}` : image;\n            membersObject[member.id] = {\n              ...member,\n              image: normalizedImage\n            };\n          });\n          console.log('‚úÖ Loaded team members:', membersObject);\n        }\n        setTeamMembers(membersObject);\n      } catch (error) {\n        console.error('Error loading team members:', error);\n      } finally {\n        setTeamLoading(false);\n      }\n    };\n    loadTeamMembers();\n  }, []);\n  const [editMode, setEditMode] = useState(false);\n  const [editedName, setEditedName] = useState('');\n  const [editedEmail, setEditedEmail] = useState('');\n  const [editedPhone, setEditedPhone] = useState('');\n  const [editedBio, setEditedBio] = useState('');\n  const [editedImage, setEditedImage] = useState('');\n  const [saving, setSaving] = useState(false);\n  const [userProfile, setUserProfile] = useState(null);\n  const [justSaved, setJustSaved] = useState(false);\n  const [error, setError] = useState('');\n\n  // Check if this is a user profile page or team member page\n  const isUserProfile = React.useMemo(() => {\n    const result = !role;\n    console.log('üßÆ isUserProfile calculated:', {\n      role,\n      result\n    });\n    return result;\n  }, [role]);\n\n  // If it's a user profile, use current user data\n  React.useEffect(() => {\n    console.log('üîÑ Profile useEffect triggered with:', {\n      isUserProfile,\n      currentUserId: currentUser === null || currentUser === void 0 ? void 0 : currentUser.id,\n      role,\n      currentUserName: currentUser === null || currentUser === void 0 ? void 0 : currentUser.name,\n      currentUserProfilePicture: currentUser === null || currentUser === void 0 ? void 0 : currentUser.profile_picture_url\n    });\n    if (isUserProfile && currentUser) {\n      console.log('üë§ Loading user profile for:', currentUser.name);\n      console.log('üìä Current user data:', currentUser);\n      // Ensure we always have a valid image, defaulting to the default profile image\n      const profileImage = currentUser.profile_picture_url ? `${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/..${currentUser.profile_picture_url}` : '/images/default_profile.png';\n      console.log('üñºÔ∏è Profile image set to:', profileImage);\n      setUserProfile({\n        id: currentUser.id,\n        name: currentUser.name,\n        email: currentUser.email,\n        phone: currentUser.phone_number || currentUser.phone || '',\n        image: profileImage,\n        role: currentUser.role,\n        bio: currentUser.bio || '' // Include bio from currentUser\n      });\n      setLoading(false);\n    } else if (role && teamMembers[role]) {\n      // This is a team member page, use backend data\n      console.log('üë• Loading team member profile for:', role);\n      const member = teamMembers[role];\n      setUserProfile({\n        id: role,\n        name: member.name,\n        role: member.role,\n        image: member.image || '/images/default_profile.png',\n        bio: member.bio,\n        email: member.email || '',\n        // Use email from backend data\n        phone: ''\n      });\n      setLoading(false);\n    } else {\n      console.log('‚ùå No valid profile found');\n      setLoading(false);\n    }\n  }, [isUserProfile, currentUser, role, teamMembers]);\n\n  // Initialize form data when userProfile changes (only for user profiles, not team members)\n  React.useEffect(() => {\n    console.log('üìù Form initialization useEffect triggered with:', {\n      hasUserProfile: !!userProfile,\n      isUserProfile,\n      justSaved,\n      userProfileName: userProfile === null || userProfile === void 0 ? void 0 : userProfile.name,\n      userProfileImage: userProfile === null || userProfile === void 0 ? void 0 : userProfile.image\n    });\n    if (userProfile && isUserProfile && !justSaved) {\n      console.log('‚úÖ Initializing form fields with user profile data');\n      setEditedName(userProfile.name || '');\n      setEditedEmail(userProfile.email || '');\n      setEditedPhone(userProfile.phone || '');\n      setEditedBio(userProfile.bio || ''); // Initialize bio\n      setEditedImage(userProfile.image || '/images/default_profile.png');\n    } else {\n      console.log('‚è≠Ô∏è Skipping form initialization:', {\n        reason: !userProfile ? 'No userProfile' : !isUserProfile ? 'Not user profile' : 'Just saved'\n      });\n    }\n  }, [userProfile, isUserProfile, justSaved]);\n  const [loading, setLoading] = useState(true);\n  const handleEdit = () => {\n    if (!isUserProfile) return; // Only allow editing for user profiles, not team member bios\n\n    setJustSaved(false); // Reset the flag when starting to edit\n    setError(''); // Clear any previous errors\n    setEditedName(userProfile.name || '');\n    setEditedEmail(userProfile.email || '');\n    setEditedPhone(userProfile.phone || '');\n    setEditedBio(userProfile.bio || ''); // Set bio for editing\n    setEditedImage(userProfile.image || '/images/default_profile.png');\n    setEditMode(true);\n  };\n  const handleSave = async () => {\n    console.log('üöÄ STARTING PROFILE SAVE - DEBUGGING ENABLED');\n    setSaving(true);\n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n\n      // First, update the text fields (name, email, phone)\n      const profileData = {\n        name: editedName,\n        email: editedEmail,\n        phone_number: editedPhone,\n        bio: editedBio\n      };\n      console.log('üìù Sending profile data:', profileData);\n      console.log('üîç Data types:', {\n        name: typeof editedName,\n        email: typeof editedEmail,\n        phone_number: typeof editedPhone\n      });\n      console.log('üîç Data values:', {\n        name: editedName,\n        email: editedEmail,\n        phone_number: editedPhone\n      });\n      const profileResponse = await fetch(`${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/users/profile`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(profileData)\n      });\n      if (!profileResponse.ok) {\n        const errorData = await profileResponse.json();\n        throw new Error(errorData.error || 'Failed to update profile');\n      }\n      console.log('‚úÖ Profile text fields updated successfully');\n\n      // Then, if there's a new image, upload it separately\n      let profilePictureUrl = null;\n      console.log('üîç CHECKING FOR NEW IMAGE:');\n      console.log('üîç editedImage:', editedImage);\n      console.log('üîç userProfile.image:', userProfile.image);\n      console.log('üîç editedImage !== userProfile.image:', editedImage !== userProfile.image);\n      console.log('üîç editedImage.startsWith(\"blob:\"):', editedImage && editedImage.startsWith('blob:'));\n      if (editedImage && editedImage !== userProfile.image && editedImage.startsWith('blob:')) {\n        console.log('üñºÔ∏è Processing new image for upload...');\n\n        // Convert blob URL to file\n        const response = await fetch(editedImage);\n        const blob = await response.blob();\n        const file = new File([blob], 'profile-image.jpg', {\n          type: 'image/jpeg'\n        });\n        console.log('‚úÖ Image file prepared:', file.name, file.size, file.type);\n\n        // Upload image to separate endpoint\n        const imageFormData = new FormData();\n        imageFormData.append('profilePicture', file);\n        const imageResponse = await fetch(`${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/users/profile-picture`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          body: imageFormData\n        });\n        if (imageResponse.ok) {\n          const imageResult = await imageResponse.json();\n          profilePictureUrl = imageResult.profilePictureUrl;\n          console.log('‚úÖ Profile picture uploaded successfully!');\n          console.log('‚úÖ Backend response:', imageResult);\n          console.log('‚úÖ profilePictureUrl from backend:', profilePictureUrl);\n        } else {\n          const errorText = await imageResponse.text();\n          console.error('‚ùå IMAGE UPLOAD FAILED!');\n          console.error('‚ùå Status:', imageResponse.status);\n          console.error('‚ùå Error:', errorText);\n        }\n      } else {\n        console.log('‚ÑπÔ∏è No new image to upload');\n      }\n\n      // Update local state with the new image\n      let finalImage;\n      console.log('üîç DETERMINING FINAL IMAGE:');\n      console.log('üîç profilePictureUrl:', profilePictureUrl);\n      if (profilePictureUrl) {\n        // New image was uploaded and saved to backend\n        // Backend returns /api/users/uploads/profile-pictures/filename\n        // We need to construct the full URL correctly\n        const baseUrl = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api';\n        finalImage = `${baseUrl.replace('/api', '')}${profilePictureUrl}`;\n        console.log('‚úÖ USING NEW IMAGE!');\n        console.log('‚úÖ Base URL:', baseUrl);\n        console.log('‚úÖ Profile picture URL from backend:', profilePictureUrl);\n        console.log('‚úÖ Final constructed URL:', finalImage);\n      } else {\n        // No new image, keep the current one\n        finalImage = userProfile.image;\n        console.log('‚ö†Ô∏è KEEPING CURRENT IMAGE (no new upload)');\n        console.log('‚ö†Ô∏è Current image:', finalImage);\n        console.log('‚ö†Ô∏è No profilePictureUrl received from backend');\n      }\n      const updatedProfile = {\n        name: editedName,\n        email: editedEmail,\n        phone: editedPhone,\n        image: finalImage,\n        bio: editedBio // Include bio in the update\n      };\n      setUserProfile(prev => ({\n        ...prev,\n        ...updatedProfile\n      }));\n\n      // Update the auth context so changes persist across navigation\n      // Use the exact field names that the auth context expects\n      const authUpdateData = {\n        name: editedName,\n        email: editedEmail,\n        phone_number: editedPhone,\n        // Match the database field name\n        bio: editedBio // Include bio in the auth context update\n      };\n\n      // Always update profile_picture_url with the final image URL\n      authUpdateData.profile_picture_url = finalImage;\n      console.log('üîÑ Updating auth context with:', authUpdateData);\n      updateUser(authUpdateData);\n\n      // Also update localStorage directly to ensure persistence\n      const currentStoredUser = JSON.parse(localStorage.getItem('triathlonUser') || '{}');\n      const updatedStoredUser = {\n        ...currentStoredUser,\n        ...authUpdateData\n      };\n      localStorage.setItem('triathlonUser', JSON.stringify(updatedStoredUser));\n      console.log('üíæ Updated localStorage with:', updatedStoredUser);\n\n      // The auth context update should automatically propagate to all components\n      // that use currentUser.profile_picture_url\n      console.log('‚úÖ Profile image update complete - all components should now show the new image');\n\n      // Dispatch a custom event to notify other components that the profile has been updated\n      const profileUpdateEvent = new CustomEvent('profileUpdated', {\n        detail: {\n          userId: currentUser.id,\n          newImageUrl: finalImage,\n          timestamp: Date.now()\n        }\n      });\n      window.dispatchEvent(profileUpdateEvent);\n      console.log('üì° Dispatched profileUpdated event:', profileUpdateEvent.detail);\n\n      // Debug: Check what the auth context now contains\n      console.log('üîç Current auth context after update:', {\n        name: authUpdateData.name,\n        email: authUpdateData.email,\n        phone_number: authUpdateData.phone_number,\n        profile_picture_url: authUpdateData.profile_picture_url\n      });\n\n      // Debug: Check localStorage\n      const storedUser = JSON.parse(localStorage.getItem('triathlonUser') || '{}');\n      console.log('üíæ localStorage after update:', {\n        name: storedUser.name,\n        email: storedUser.email,\n        phone_number: storedUser.phone_number,\n        profile_picture_url: storedUser.profile_picture_url\n      });\n      setEditMode(false);\n      setSaving(false);\n      setJustSaved(true);\n      setError(''); // Clear any errors on successful save\n\n      // Reset the justSaved flag after a short delay\n      setTimeout(() => setJustSaved(false), 100);\n    } catch (error) {\n      console.error('‚ùå Error updating profile:', error);\n      setError(error.message);\n      setSaving(false);\n    }\n  };\n  const handleCancel = () => {\n    setEditMode(false);\n    if (isUserProfile) {\n      setEditedName((userProfile === null || userProfile === void 0 ? void 0 : userProfile.name) || '');\n      setEditedEmail((userProfile === null || userProfile === void 0 ? void 0 : userProfile.email) || '');\n      setEditedPhone((userProfile === null || userProfile === void 0 ? void 0 : userProfile.phone) || '');\n      setEditedBio((userProfile === null || userProfile === void 0 ? void 0 : userProfile.bio) || ''); // Reset bio on cancel\n      setEditedImage((userProfile === null || userProfile === void 0 ? void 0 : userProfile.image) || '/images/default_profile.png');\n    }\n  };\n  if (loading || teamLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-state\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Loading profile...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this);\n  }\n  if (!userProfile) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Profile Not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Sorry, we couldn't find the profile you're looking for.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/coaches-exec\",\n            className: \"back-link\",\n            children: \"\\u2190 Back to Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [isUserProfile ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dashboard\",\n        className: \"back-link\",\n        children: \"\\u2190 Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/coaches-exec\",\n        className: \"back-link\",\n        children: \"\\u2190 Back to Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-image-section\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: editMode ? editedImage || userProfile.image || '/images/default_profile.png' : userProfile.image || '/images/default_profile.png',\n            alt: `${userProfile.name} - ${userProfile.role}`,\n            className: \"profile-image\",\n            onError: e => {\n              console.error('‚ùå Image failed to load:', e.target.src);\n              console.log('üîÑ Falling back to default profile image');\n              e.target.src = '/images/default_profile.png';\n            },\n            onLoad: e => {\n              const currentSrc = e.target.src;\n              console.log('‚úÖ Image loaded successfully:', currentSrc);\n              if (currentSrc.includes('default_profile.png')) {\n                console.log('üñºÔ∏è Displaying default profile image');\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-info-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile-name\",\n              children: userProfile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"profile-role\",\n              children: userProfile.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this), isUserProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-actions\",\n              children: editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"edit-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: handleSave,\n                  disabled: saving,\n                  children: saving ? 'Saving...' : 'Save Changes'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-secondary\",\n                  onClick: handleCancel,\n                  disabled: saving,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-edit\",\n                onClick: handleEdit,\n                children: \"Edit Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-upload-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"profile-image\",\n                className: \"image-upload-label\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-preview\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: editedImage || userProfile.image || '/images/default_profile.png',\n                    alt: `${userProfile.name} - ${userProfile.role}`,\n                    className: \"preview-image\",\n                    onError: e => {\n                      e.target.src = '/images/default_profile.png';\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"image-overlay\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Click to change image\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 493,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"profile-image\",\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: e => {\n                  const file = e.target.files[0];\n                  if (file) {\n                    console.log('üìÅ New image selected:', file.name, file.type, file.size);\n                    const imageUrl = URL.createObjectURL(file);\n                    setEditedImage(imageUrl);\n                    console.log('üñºÔ∏è Preview image set to:', imageUrl);\n                  }\n                },\n                style: {\n                  display: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"image-upload-help\",\n                children: \"Click the image above to upload a new profile picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-edit-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name-input\",\n                  className: \"form-label\",\n                  children: \"Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"name-input\",\n                  type: \"text\",\n                  value: editedName,\n                  onChange: e => {\n                    setEditedName(e.target.value);\n                    if (error) setError(''); // Clear error when user starts typing\n                  },\n                  className: \"form-input\",\n                  placeholder: \"Enter your name...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email-input\",\n                  className: \"form-label\",\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"email-input\",\n                  type: \"email\",\n                  value: editedEmail,\n                  onChange: e => {\n                    setEditedEmail(e.target.value);\n                    if (error) setError(''); // Clear error when user starts typing\n                  },\n                  className: \"form-input\",\n                  placeholder: \"Enter your email...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"phone-input\",\n                  className: \"form-label\",\n                  children: \"Phone:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"phone-input\",\n                  type: \"tel\",\n                  value: editedPhone,\n                  onChange: e => {\n                    setEditedPhone(e.target.value);\n                    if (error) setError(''); // Clear error when user starts typing\n                  },\n                  className: \"form-input\",\n                  placeholder: \"Enter your phone number...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"bio-input\",\n                  className: \"form-label\",\n                  children: \"Bio:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"bio-input\",\n                  value: editedBio,\n                  onChange: e => {\n                    setEditedBio(e.target.value);\n                    if (error) setError(''); // Clear error when user starts typing\n                  },\n                  className: \"form-input\",\n                  placeholder: \"Enter your bio...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 19\n              }, this), \" \", userProfile.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this), userProfile.phone && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Phone:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 21\n              }, this), \" \", userProfile.phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 19\n            }, this), userProfile.bio && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-bio\",\n              children: userProfile.bio.split('\\n\\n').map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: paragraph\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 409,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"QZr6AQIgOk1wQVA2hVKid0KodDk=\", false, function () {\n  return [useParams, useAuth];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","useAuth","jsxDEV","_jsxDEV","Profile","_s","params","role","name","currentUser","updateUser","teamMembers","setTeamMembers","teamLoading","setTeamLoading","console","log","id","profile_picture_url","loadTeamMembers","response","fetch","process","env","REACT_APP_API_BASE_URL","ok","Error","data","json","membersObject","Array","isArray","forEach","member","image","trim","normalizedImage","startsWith","error","editMode","setEditMode","editedName","setEditedName","editedEmail","setEditedEmail","editedPhone","setEditedPhone","editedBio","setEditedBio","editedImage","setEditedImage","saving","setSaving","userProfile","setUserProfile","justSaved","setJustSaved","setError","isUserProfile","useMemo","result","currentUserId","currentUserName","currentUserProfilePicture","profileImage","email","phone","phone_number","bio","setLoading","hasUserProfile","userProfileName","userProfileImage","reason","loading","handleEdit","handleSave","token","localStorage","getItem","profileData","profileResponse","method","headers","body","JSON","stringify","errorData","profilePictureUrl","blob","file","File","type","size","imageFormData","FormData","append","imageResponse","imageResult","errorText","text","status","finalImage","baseUrl","replace","updatedProfile","prev","authUpdateData","currentStoredUser","parse","updatedStoredUser","setItem","profileUpdateEvent","CustomEvent","detail","userId","newImageUrl","timestamp","Date","now","window","dispatchEvent","storedUser","setTimeout","message","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","src","alt","onError","e","target","onLoad","currentSrc","includes","onClick","disabled","htmlFor","accept","onChange","files","imageUrl","URL","createObjectURL","style","display","value","placeholder","split","map","paragraph","index","_c","$RefreshReg$"],"sources":["/Users/jadeclement/Documents/Developer/uofttri/src/components/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport './Profile.css';\n\nconst Profile = () => {\n  const params = useParams();\n  const { role, name } = params;\n  const { currentUser, updateUser } = useAuth();\n  const [teamMembers, setTeamMembers] = useState({});\n  const [teamLoading, setTeamLoading] = useState(true);\n  \n  console.log('üîç All URL params:', params);\n  console.log('üîç Role param:', role);\n  console.log('üîç Name param:', name);\n  console.log('üë§ Current user:', currentUser);\n  console.log('üë§ Current user ID:', currentUser?.id);\n  console.log('üë§ Current user profile_picture_url:', currentUser?.profile_picture_url);\n\n  // Load team members from backend API\n  useEffect(() => {\n    const loadTeamMembers = async () => {\n      try {\n        setTeamLoading(true);\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/profiles`);\n        \n        if (!response.ok) {\n          throw new Error('Failed to fetch team members');\n        }\n        \n        const data = await response.json();\n        \n        // Convert array to object with id as key\n        const membersObject = {};\n        if (Array.isArray(data.teamMembers)) {\n          data.teamMembers.forEach(member => {\n            let image = member.image;\n            // If no image provided, or is blank/whitespace, use default blue profile image\n            if (!image || (typeof image === 'string' && image.trim() === '')) {\n              image = '/images/icon.png';\n            }\n            // Convert relative image URLs to full URLs for display\n            const normalizedImage = image && image.startsWith('/uploads/')\n              ? `${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/..${image}`\n              : image;\n            \n            membersObject[member.id] = {\n              ...member,\n              image: normalizedImage\n            };\n          });\n          console.log('‚úÖ Loaded team members:', membersObject);\n        }\n        \n        setTeamMembers(membersObject);\n      } catch (error) {\n        console.error('Error loading team members:', error);\n      } finally {\n        setTeamLoading(false);\n      }\n    };\n\n    loadTeamMembers();\n  }, []);\n  \n  const [editMode, setEditMode] = useState(false);\n  const [editedName, setEditedName] = useState('');\n  const [editedEmail, setEditedEmail] = useState('');\n  const [editedPhone, setEditedPhone] = useState('');\n  const [editedBio, setEditedBio] = useState('');\n  const [editedImage, setEditedImage] = useState('');\n  const [saving, setSaving] = useState(false);\n  const [userProfile, setUserProfile] = useState(null);\n  const [justSaved, setJustSaved] = useState(false);\n  const [error, setError] = useState('');\n\n  // Check if this is a user profile page or team member page\n  const isUserProfile = React.useMemo(() => {\n    const result = !role;\n    console.log('üßÆ isUserProfile calculated:', { role, result });\n    return result;\n  }, [role]);\n  \n  // If it's a user profile, use current user data\n  React.useEffect(() => {\n    console.log('üîÑ Profile useEffect triggered with:', {\n      isUserProfile,\n      currentUserId: currentUser?.id,\n      role,\n      currentUserName: currentUser?.name,\n      currentUserProfilePicture: currentUser?.profile_picture_url\n    });\n    \n    if (isUserProfile && currentUser) {\n      console.log('üë§ Loading user profile for:', currentUser.name);\n      console.log('üìä Current user data:', currentUser);\n      // Ensure we always have a valid image, defaulting to the default profile image\n      const profileImage = currentUser.profile_picture_url \n        ? `${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/..${currentUser.profile_picture_url}` \n        : '/images/default_profile.png';\n      \n      console.log('üñºÔ∏è Profile image set to:', profileImage);\n      \n      setUserProfile({\n        id: currentUser.id,\n        name: currentUser.name,\n        email: currentUser.email,\n        phone: currentUser.phone_number || currentUser.phone || '',\n        image: profileImage,\n        role: currentUser.role,\n        bio: currentUser.bio || '' // Include bio from currentUser\n      });\n      setLoading(false);\n    } else if (role && teamMembers[role]) {\n      // This is a team member page, use backend data\n      console.log('üë• Loading team member profile for:', role);\n      const member = teamMembers[role];\n      setUserProfile({\n        id: role,\n        name: member.name,\n        role: member.role,\n        image: member.image || '/images/default_profile.png',\n        bio: member.bio,\n        email: member.email || '', // Use email from backend data\n        phone: ''\n      });\n      setLoading(false);\n    } else {\n      console.log('‚ùå No valid profile found');\n      setLoading(false);\n    }\n  }, [isUserProfile, currentUser, role, teamMembers]);\n\n  // Initialize form data when userProfile changes (only for user profiles, not team members)\n  React.useEffect(() => {\n    console.log('üìù Form initialization useEffect triggered with:', {\n      hasUserProfile: !!userProfile,\n      isUserProfile,\n      justSaved,\n      userProfileName: userProfile?.name,\n      userProfileImage: userProfile?.image\n    });\n    \n    if (userProfile && isUserProfile && !justSaved) {\n      console.log('‚úÖ Initializing form fields with user profile data');\n      setEditedName(userProfile.name || '');\n      setEditedEmail(userProfile.email || '');\n      setEditedPhone(userProfile.phone || '');\n      setEditedBio(userProfile.bio || ''); // Initialize bio\n      setEditedImage(userProfile.image || '/images/default_profile.png');\n    } else {\n      console.log('‚è≠Ô∏è Skipping form initialization:', {\n        reason: !userProfile ? 'No userProfile' : !isUserProfile ? 'Not user profile' : 'Just saved'\n      });\n    }\n  }, [userProfile, isUserProfile, justSaved]);\n\n  const [loading, setLoading] = useState(true);\n\n  const handleEdit = () => {\n    if (!isUserProfile) return; // Only allow editing for user profiles, not team member bios\n    \n    setJustSaved(false); // Reset the flag when starting to edit\n    setError(''); // Clear any previous errors\n    setEditedName(userProfile.name || '');\n    setEditedEmail(userProfile.email || '');\n    setEditedPhone(userProfile.phone || '');\n    setEditedBio(userProfile.bio || ''); // Set bio for editing\n    setEditedImage(userProfile.image || '/images/default_profile.png');\n    setEditMode(true);\n  };\n\n  const handleSave = async () => {\n    console.log('üöÄ STARTING PROFILE SAVE - DEBUGGING ENABLED');\n    setSaving(true);\n    \n    try {\n      const token = localStorage.getItem('triathlonToken');\n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n\n      // First, update the text fields (name, email, phone)\n      const profileData = {\n        name: editedName,\n        email: editedEmail,\n        phone_number: editedPhone,\n        bio: editedBio\n      };\n\n      console.log('üìù Sending profile data:', profileData);\n      console.log('üîç Data types:', {\n        name: typeof editedName,\n        email: typeof editedEmail,\n        phone_number: typeof editedPhone\n      });\n      console.log('üîç Data values:', {\n        name: editedName,\n        email: editedEmail,\n        phone_number: editedPhone\n      });\n\n      const profileResponse = await fetch(`${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/users/profile`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(profileData)\n      });\n\n      if (!profileResponse.ok) {\n        const errorData = await profileResponse.json();\n        throw new Error(errorData.error || 'Failed to update profile');\n      }\n\n      console.log('‚úÖ Profile text fields updated successfully');\n\n      // Then, if there's a new image, upload it separately\n      let profilePictureUrl = null;\n      console.log('üîç CHECKING FOR NEW IMAGE:');\n      console.log('üîç editedImage:', editedImage);\n      console.log('üîç userProfile.image:', userProfile.image);\n      console.log('üîç editedImage !== userProfile.image:', editedImage !== userProfile.image);\n      console.log('üîç editedImage.startsWith(\"blob:\"):', editedImage && editedImage.startsWith('blob:'));\n      \n      if (editedImage && editedImage !== userProfile.image && editedImage.startsWith('blob:')) {\n        console.log('üñºÔ∏è Processing new image for upload...');\n        \n        // Convert blob URL to file\n        const response = await fetch(editedImage);\n        const blob = await response.blob();\n        const file = new File([blob], 'profile-image.jpg', { type: 'image/jpeg' });\n        \n        console.log('‚úÖ Image file prepared:', file.name, file.size, file.type);\n        \n        // Upload image to separate endpoint\n        const imageFormData = new FormData();\n        imageFormData.append('profilePicture', file);\n        \n        const imageResponse = await fetch(`${process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api'}/users/profile-picture`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          body: imageFormData\n        });\n\n        if (imageResponse.ok) {\n          const imageResult = await imageResponse.json();\n          profilePictureUrl = imageResult.profilePictureUrl;\n          console.log('‚úÖ Profile picture uploaded successfully!');\n          console.log('‚úÖ Backend response:', imageResult);\n          console.log('‚úÖ profilePictureUrl from backend:', profilePictureUrl);\n        } else {\n          const errorText = await imageResponse.text();\n          console.error('‚ùå IMAGE UPLOAD FAILED!');\n          console.error('‚ùå Status:', imageResponse.status);\n          console.error('‚ùå Error:', errorText);\n        }\n      } else {\n        console.log('‚ÑπÔ∏è No new image to upload');\n      }\n\n      // Update local state with the new image\n      let finalImage;\n      console.log('üîç DETERMINING FINAL IMAGE:');\n      console.log('üîç profilePictureUrl:', profilePictureUrl);\n      \n      if (profilePictureUrl) {\n        // New image was uploaded and saved to backend\n        // Backend returns /api/users/uploads/profile-pictures/filename\n        // We need to construct the full URL correctly\n        const baseUrl = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api';\n        finalImage = `${baseUrl.replace('/api', '')}${profilePictureUrl}`;\n        console.log('‚úÖ USING NEW IMAGE!');\n        console.log('‚úÖ Base URL:', baseUrl);\n        console.log('‚úÖ Profile picture URL from backend:', profilePictureUrl);\n        console.log('‚úÖ Final constructed URL:', finalImage);\n      } else {\n        // No new image, keep the current one\n        finalImage = userProfile.image;\n        console.log('‚ö†Ô∏è KEEPING CURRENT IMAGE (no new upload)');\n        console.log('‚ö†Ô∏è Current image:', finalImage);\n        console.log('‚ö†Ô∏è No profilePictureUrl received from backend');\n      }\n      \n      const updatedProfile = {\n        name: editedName,\n        email: editedEmail,\n        phone: editedPhone,\n        image: finalImage,\n        bio: editedBio // Include bio in the update\n      };\n      \n      setUserProfile(prev => ({\n        ...prev,\n        ...updatedProfile\n      }));\n\n      // Update the auth context so changes persist across navigation\n      // Use the exact field names that the auth context expects\n      const authUpdateData = {\n        name: editedName,\n        email: editedEmail,\n        phone_number: editedPhone,  // Match the database field name\n        bio: editedBio // Include bio in the auth context update\n      };\n      \n      // Always update profile_picture_url with the final image URL\n      authUpdateData.profile_picture_url = finalImage;\n      \n      console.log('üîÑ Updating auth context with:', authUpdateData);\n      updateUser(authUpdateData);\n      \n      // Also update localStorage directly to ensure persistence\n      const currentStoredUser = JSON.parse(localStorage.getItem('triathlonUser') || '{}');\n      const updatedStoredUser = { ...currentStoredUser, ...authUpdateData };\n      localStorage.setItem('triathlonUser', JSON.stringify(updatedStoredUser));\n      console.log('üíæ Updated localStorage with:', updatedStoredUser);\n      \n      // The auth context update should automatically propagate to all components\n      // that use currentUser.profile_picture_url\n      console.log('‚úÖ Profile image update complete - all components should now show the new image');\n      \n      // Dispatch a custom event to notify other components that the profile has been updated\n      const profileUpdateEvent = new CustomEvent('profileUpdated', {\n        detail: {\n          userId: currentUser.id,\n          newImageUrl: finalImage,\n          timestamp: Date.now()\n        }\n      });\n      window.dispatchEvent(profileUpdateEvent);\n      console.log('üì° Dispatched profileUpdated event:', profileUpdateEvent.detail);\n      \n      // Debug: Check what the auth context now contains\n      console.log('üîç Current auth context after update:', {\n        name: authUpdateData.name,\n        email: authUpdateData.email,\n        phone_number: authUpdateData.phone_number,\n        profile_picture_url: authUpdateData.profile_picture_url\n      });\n      \n      // Debug: Check localStorage\n      const storedUser = JSON.parse(localStorage.getItem('triathlonUser') || '{}');\n      console.log('üíæ localStorage after update:', {\n        name: storedUser.name,\n        email: storedUser.email,\n        phone_number: storedUser.phone_number,\n        profile_picture_url: storedUser.profile_picture_url\n      });\n\n      setEditMode(false);\n      setSaving(false);\n      setJustSaved(true);\n      setError(''); // Clear any errors on successful save\n      \n      // Reset the justSaved flag after a short delay\n      setTimeout(() => setJustSaved(false), 100);\n      \n    } catch (error) {\n      console.error('‚ùå Error updating profile:', error);\n      setError(error.message);\n      setSaving(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setEditMode(false);\n    if (isUserProfile) {\n      setEditedName(userProfile?.name || '');\n      setEditedEmail(userProfile?.email || '');\n      setEditedPhone(userProfile?.phone || '');\n      setEditedBio(userProfile?.bio || ''); // Reset bio on cancel\n      setEditedImage(userProfile?.image || '/images/default_profile.png');\n    }\n  };\n\n  if (loading || teamLoading) {\n    return (\n      <div className=\"profile-container\">\n        <div className=\"container\">\n          <div className=\"loading-state\">\n            <h2>Loading profile...</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!userProfile) {\n    return (\n      <div className=\"profile-container\">\n        <div className=\"container\">\n          <div className=\"error-state\">\n            <h2>Profile Not Found</h2>\n            <p>Sorry, we couldn't find the profile you're looking for.</p>\n            <Link to=\"/coaches-exec\" className=\"back-link\">‚Üê Back to Team</Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"container\">\n        {isUserProfile ? (\n          <Link to=\"/dashboard\" className=\"back-link\">‚Üê Back to Dashboard</Link>\n        ) : (\n          <Link to=\"/coaches-exec\" className=\"back-link\">‚Üê Back to Team</Link>\n        )}\n        \n        <div className=\"profile-content\">\n          <div className=\"profile-image-section\">\n            <img \n              src={editMode ? (editedImage || userProfile.image || '/images/default_profile.png') : (userProfile.image || '/images/default_profile.png')} \n              alt={`${userProfile.name} - ${userProfile.role}`}\n              className=\"profile-image\"\n              onError={(e) => {\n                console.error('‚ùå Image failed to load:', e.target.src);\n                console.log('üîÑ Falling back to default profile image');\n                e.target.src = '/images/default_profile.png';\n              }}\n              onLoad={(e) => {\n                const currentSrc = e.target.src;\n                console.log('‚úÖ Image loaded successfully:', currentSrc);\n                if (currentSrc.includes('default_profile.png')) {\n                  console.log('üñºÔ∏è Displaying default profile image');\n                }\n              }}\n            />\n          </div>\n          \n          <div className=\"profile-info-section\">\n            <div className=\"profile-header\">\n              <h1 className=\"profile-name\">{userProfile.name}</h1>\n              <h2 className=\"profile-role\">{userProfile.role}</h2>\n              {isUserProfile && (\n                <div className=\"profile-actions\">\n                  {editMode ? (\n                    <div className=\"edit-actions\">\n                      <button \n                        className=\"btn btn-primary\" \n                        onClick={handleSave}\n                        disabled={saving}\n                      >\n                        {saving ? 'Saving...' : 'Save Changes'}\n                      </button>\n                      <button \n                        className=\"btn btn-secondary\" \n                        onClick={handleCancel}\n                        disabled={saving}\n                      >\n                        Cancel\n                      </button>\n                    </div>\n                  ) : (\n                    <button \n                      className=\"btn btn-edit\" \n                      onClick={handleEdit}\n                    >\n                      Edit Profile\n                    </button>\n                  )}\n                </div>\n              )}\n            </div>\n            \n            {error && (\n              <div className=\"error-message\">\n                {error}\n              </div>\n            )}\n            \n            {editMode ? (\n              <div className=\"edit-form\">\n                <div className=\"image-upload-section\">\n                  <label htmlFor=\"profile-image\" className=\"image-upload-label\">\n                    <div className=\"image-preview\">\n                      <img \n                        src={editedImage || userProfile.image || '/images/default_profile.png'}\n                        alt={`${userProfile.name} - ${userProfile.role}`}\n                        className=\"preview-image\"\n                        onError={(e) => {\n                          e.target.src = '/images/default_profile.png';\n                        }}\n                      />\n                      <div className=\"image-overlay\">\n                        <span>Click to change image</span>\n                      </div>\n                    </div>\n                  </label>\n                  <input\n                    id=\"profile-image\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={(e) => {\n                      const file = e.target.files[0];\n                      if (file) {\n                        console.log('üìÅ New image selected:', file.name, file.type, file.size);\n                        const imageUrl = URL.createObjectURL(file);\n                        setEditedImage(imageUrl);\n                        console.log('üñºÔ∏è Preview image set to:', imageUrl);\n                      }\n                    }}\n                    style={{ display: 'none' }}\n                  />\n                  <p className=\"image-upload-help\">\n                    Click the image above to upload a new profile picture\n                  </p>\n                </div>\n                \n                <div className=\"profile-edit-section\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"name-input\" className=\"form-label\">Name:</label>\n                    <input\n                      id=\"name-input\"\n                      type=\"text\"\n                      value={editedName}\n                      onChange={(e) => {\n                        setEditedName(e.target.value);\n                        if (error) setError(''); // Clear error when user starts typing\n                      }}\n                      className=\"form-input\"\n                      placeholder=\"Enter your name...\"\n                    />\n                  </div>\n                  \n                                    <div className=\"form-group\">\n                    <label htmlFor=\"email-input\" className=\"form-label\">Email:</label>\n                    <input\n                      id=\"email-input\"\n                      type=\"email\"\n                      value={editedEmail}\n                      onChange={(e) => {\n                        setEditedEmail(e.target.value);\n                        if (error) setError(''); // Clear error when user starts typing\n                      }}\n                      className=\"form-input\"\n                      placeholder=\"Enter your email...\"\n                    />\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label htmlFor=\"phone-input\" className=\"form-label\">Phone:</label>\n                    <input\n                      id=\"phone-input\"\n                      type=\"tel\"\n                      value={editedPhone}\n                      onChange={(e) => {\n                        setEditedPhone(e.target.value);\n                        if (error) setError(''); // Clear error when user starts typing\n                      }}\n                      className=\"form-input\"\n                      placeholder=\"Enter your phone number...\"\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"bio-input\" className=\"form-label\">Bio:</label>\n                    <textarea\n                      id=\"bio-input\"\n                      value={editedBio}\n                      onChange={(e) => {\n                        setEditedBio(e.target.value);\n                        if (error) setError(''); // Clear error when user starts typing\n                      }}\n                      className=\"form-input\"\n                      placeholder=\"Enter your bio...\"\n                    />\n                  </div>\n                  \n \n                </div>\n              </div>\n            ) : (\n              <div className=\"profile-info\">\n                <div className=\"info-item\">\n                  <strong>Email:</strong> {userProfile.email}\n                </div>\n                {userProfile.phone && (\n                  <div className=\"info-item\">\n                    <strong>Phone:</strong> {userProfile.phone}\n                  </div>\n                )}\n                {userProfile.bio && (\n                  <div className=\"profile-bio\">\n                    {userProfile.bio.split('\\n\\n').map((paragraph, index) => (\n                      <p key={index}>{paragraph}</p>\n                    ))}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}