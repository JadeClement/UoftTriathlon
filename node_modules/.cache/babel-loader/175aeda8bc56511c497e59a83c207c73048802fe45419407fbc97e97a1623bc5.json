{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nconst useBannerHeight = () => {\n  _s();\n  const [bannerHeight, setBannerHeight] = useState(0);\n  const bannerRef = useRef(null);\n  useEffect(() => {\n    const updateBannerHeight = () => {\n      if (bannerRef.current) {\n        const height = bannerRef.current.offsetHeight;\n        setBannerHeight(height);\n        console.log('📏 Banner height measured:', height + 'px');\n      }\n    };\n\n    // Initial measurement\n    updateBannerHeight();\n\n    // Re-measure on window resize\n    window.addEventListener('resize', updateBannerHeight);\n\n    // Use ResizeObserver for more accurate measurements\n    if (bannerRef.current) {\n      const resizeObserver = new ResizeObserver(updateBannerHeight);\n      resizeObserver.observe(bannerRef.current);\n      return () => {\n        resizeObserver.disconnect();\n        window.removeEventListener('resize', updateBannerHeight);\n      };\n    }\n    return () => {\n      window.removeEventListener('resize', updateBannerHeight);\n    };\n  }, []);\n  return {\n    bannerHeight,\n    bannerRef\n  };\n};\n_s(useBannerHeight, \"/bxW2eHn/9Br/DSFqh8B1n/1dT4=\");\nexport default useBannerHeight;","map":{"version":3,"names":["useState","useEffect","useRef","useBannerHeight","_s","bannerHeight","setBannerHeight","bannerRef","updateBannerHeight","current","height","offsetHeight","console","log","window","addEventListener","resizeObserver","ResizeObserver","observe","disconnect","removeEventListener"],"sources":["/Users/jadeclement/Documents/Developer/uofttri/src/hooks/useBannerHeight.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\nconst useBannerHeight = () => {\n  const [bannerHeight, setBannerHeight] = useState(0);\n  const bannerRef = useRef(null);\n\n  useEffect(() => {\n    const updateBannerHeight = () => {\n      if (bannerRef.current) {\n        const height = bannerRef.current.offsetHeight;\n        setBannerHeight(height);\n        console.log('📏 Banner height measured:', height + 'px');\n      }\n    };\n\n    // Initial measurement\n    updateBannerHeight();\n\n    // Re-measure on window resize\n    window.addEventListener('resize', updateBannerHeight);\n\n    // Use ResizeObserver for more accurate measurements\n    if (bannerRef.current) {\n      const resizeObserver = new ResizeObserver(updateBannerHeight);\n      resizeObserver.observe(bannerRef.current);\n      \n      return () => {\n        resizeObserver.disconnect();\n        window.removeEventListener('resize', updateBannerHeight);\n      };\n    }\n\n    return () => {\n      window.removeEventListener('resize', updateBannerHeight);\n    };\n  }, []);\n\n  return { bannerHeight, bannerRef };\n};\n\nexport default useBannerHeight;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAMO,SAAS,GAAGL,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMO,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,IAAID,SAAS,CAACE,OAAO,EAAE;QACrB,MAAMC,MAAM,GAAGH,SAAS,CAACE,OAAO,CAACE,YAAY;QAC7CL,eAAe,CAACI,MAAM,CAAC;QACvBE,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEH,MAAM,GAAG,IAAI,CAAC;MAC1D;IACF,CAAC;;IAED;IACAF,kBAAkB,CAAC,CAAC;;IAEpB;IACAM,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEP,kBAAkB,CAAC;;IAErD;IACA,IAAID,SAAS,CAACE,OAAO,EAAE;MACrB,MAAMO,cAAc,GAAG,IAAIC,cAAc,CAACT,kBAAkB,CAAC;MAC7DQ,cAAc,CAACE,OAAO,CAACX,SAAS,CAACE,OAAO,CAAC;MAEzC,OAAO,MAAM;QACXO,cAAc,CAACG,UAAU,CAAC,CAAC;QAC3BL,MAAM,CAACM,mBAAmB,CAAC,QAAQ,EAAEZ,kBAAkB,CAAC;MAC1D,CAAC;IACH;IAEA,OAAO,MAAM;MACXM,MAAM,CAACM,mBAAmB,CAAC,QAAQ,EAAEZ,kBAAkB,CAAC;IAC1D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEH,YAAY;IAAEE;EAAU,CAAC;AACpC,CAAC;AAACH,EAAA,CApCID,eAAe;AAsCrB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}